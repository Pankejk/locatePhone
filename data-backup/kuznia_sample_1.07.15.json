
/** kuznia_DATASIZE:300_STEP:1_1_DEFAULT indexes **/
db["kuznia_DATASIZE:300_STEP:1_1_DEFAULT"].ensureIndex({ "_id" : NumberLong(1) },[ ]);

/** kuznia_DATASIZE:300_STEP:1_1_DEFAULT records **/
db["kuznia_DATASIZE:300_STEP:1_1_DEFAULT"].insert({
	"_id" : ObjectId("5595053163f9130dc6bc0a26"),
	"STATISTICS" : {
		"PERCENTILE - 90" : -56,
		"MIN" : NumberLong(-56),
		"STANDARD_DEVIATION" : 0,
		"PERCENTILE - 20" : -56,
		"PERCENTILE - 10" : -56,
		"MAX" : NumberLong(-56),
		"PERCENTILE - 70" : -56,
		"PERCENTILE - 50" : -56,
		"MODE" : NumberLong(-56),
		"MEDIANA" : -56,
		"MEAN" : -56
	},
	"HASH" : "DEFAULT",
	"SSID" : "TP-LINK_489B26",
	"RSSI_DATA" : [
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56),
		NumberLong(-56)
	],
	"TIMESTAMP" : "2015-07-02:11-24-41.851",
	"POSITIONS" : [
		NumberLong(0),
		NumberLong(0)
	],
	"STEP" : [
		NumberLong(1),
		NumberLong(1)
	],
	"PLACE" : "kuznia",
	"MODE" : "FEED_MAP",
	"IP_PHONE" : "192.168.1.100",
	"RSSI_AVG_TIME" : "5753802",
	"MAC_AP" : "f8:d1:11:48:9b:26",
	"DATA_SIZE" : NumberLong(300),
	"MAC_PHONE" : "e8:99:c4:8e:97:36"
});
db["kuznia_DATASIZE:300_STEP:1_1_DEFAULT"].insert({
	"_id" : ObjectId("5595053163f9130dc6bc0a24"),
	"STATISTICS" : {
		"PERCENTILE - 90" : 8.826000000000002,
		"MIN" : -26.4,
		"STANDARD_DEVIATION" : 13.956557417067009,
		"PERCENTILE - 20" : -24.42,
		"PERCENTILE - 10" : -25.32,
		"MAX" : 11.58,
		"PERCENTILE - 70" : 7.3799996,
		"PERCENTILE - 50" : -0.9,
		"MODE" : -0.9,
		"MEDIANA" : -0.8074074074074074,
		"MEAN" : -5.765999951222223
	},
	"HASH" : "DEFAULT",
	"MAC_PHONE" : "e8:99:c4:8e:97:36",
	"TIMESTAMP" : "2015-07-02:11-24-40.990",
	"STEP" : [
		NumberLong(1),
		NumberLong(1)
	],
	"PLACE" : "kuznia",
	"MODE" : "FEED_MAP",
	"IP_PHONE" : "192.168.1.100",
	"POSITIONS" : [
		NumberLong(0),
		NumberLong(0)
	],
	"MAGNETIC_AVG_TIME" : "19431",
	"MAGNETIC_DATA" : [
		-22.859999,
		-1.02,
		11.4,
		-23.34,
		-1.38,
		11.58,
		-22.68,
		-1.38,
		10.559999,
		-22.98,
		-1.74,
		10.559999,
		-22.8,
		-1.74,
		10.26,
		-22.439999,
		-1.5,
		9.96,
		-23.1,
		-1.9799999,
		9.96,
		-22.98,
		-1.68,
		10.44,
		-22.8,
		-1.4399999,
		9.9,
		-23.16,
		-1.56,
		9.96,
		-23.16,
		-1.4399999,
		9.96,
		-23.34,
		-1.4399999,
		9.9,
		-23.519999,
		-1.62,
		9.78,
		-23.34,
		-1.4399999,
		9.66,
		-23.58,
		-1.4399999,
		9.48,
		-23.82,
		-1.62,
		9.24,
		-23.699999,
		-1.86,
		9.24,
		-23.82,
		-1.62,
		NumberLong(9),
		-23.88,
		-1.56,
		NumberLong(9),
		NumberLong(-24),
		-1.86,
		9.059999,
		-23.88,
		-1.68,
		NumberLong(9),
		-24.18,
		-1.68,
		9.3,
		-24.06,
		-1.68,
		9.24,
		-24.18,
		-1.68,
		9.24,
		-24.3,
		-1.68,
		9.24,
		-24.119999,
		-1.8,
		9.54,
		NumberLong(-24),
		-1.92,
		9.36,
		-23.88,
		-1.62,
		9.179999,
		-24.24,
		-1.74,
		9.059999,
		-24.119999,
		-1.86,
		8.82,
		-24.06,
		-1.74,
		8.7,
		-24.119999,
		-1.5,
		8.82,
		-24.24,
		-1.3199999,
		8.76,
		-24.24,
		-1.38,
		8.4,
		-24.42,
		-1.1999999,
		8.34,
		-24.42,
		-1.0799999,
		8.4,
		-24.119999,
		-1.0799999,
		8.46,
		-24.24,
		-0.9,
		8.28,
		-24.3,
		-0.9,
		8.34,
		-24.18,
		-0.96,
		8.34,
		-24.119999,
		-0.96,
		8.34,
		-24.359999,
		-0.84,
		8.46,
		-24.24,
		-0.9,
		8.639999,
		-24.42,
		-0.9,
		8.639999,
		-24.42,
		-0.9,
		8.5199995,
		-24.18,
		-1.26,
		8.7,
		-24.3,
		-1.38,
		8.88,
		-24.3,
		-1.4399999,
		8.7,
		-24.359999,
		-1.38,
		8.7,
		-24.3,
		-1.4399999,
		8.58,
		-24.359999,
		-1.38,
		8.46,
		-24.3,
		-1.62,
		8.28,
		-24.48,
		-1.74,
		8.4,
		-24.779999,
		-1.38,
		8.16,
		-24.66,
		-1.3199999,
		7.74,
		-24.779999,
		-1.38,
		7.74,
		-24.66,
		-1.38,
		7.74,
		-24.66,
		-1.38,
		7.68,
		-24.84,
		-1.26,
		7.5,
		-25.14,
		-1.14,
		7.5,
		-25.14,
		-1.0799999,
		7.62,
		-24.96,
		-1.1999999,
		7.74,
		-24.96,
		-1.0799999,
		7.7999997,
		-24.9,
		-0.9,
		7.68,
		-25.14,
		-0.96,
		7.44,
		-25.199999,
		-0.9,
		7.44,
		-25.26,
		-0.84,
		7.5,
		-25.14,
		-0.9,
		7.56,
		-25.32,
		-0.71999997,
		7.5,
		-25.38,
		-0.71999997,
		7.5,
		-25.56,
		-0.84,
		7.56,
		-25.8,
		-0.96,
		7.8599997,
		-25.8,
		-1.1999999,
		7.98,
		-25.8,
		-1.38,
		8.099999,
		-25.68,
		-1.5,
		8.28,
		-25.56,
		-1.38,
		8.28,
		-25.38,
		-1.56,
		7.8599997,
		-25.38,
		-1.56,
		7.9199996,
		-25.619999,
		-1.56,
		8.099999,
		-25.619999,
		-1.62,
		8.099999,
		-25.619999,
		-1.56,
		7.9199996,
		-25.5,
		-1.1999999,
		7.98,
		-25.5,
		-1.38,
		7.7999997,
		-25.439999,
		-1.3199999,
		7.5,
		-25.619999,
		-1.26,
		7.56,
		-25.68,
		-1.3199999,
		7.3799996,
		-25.439999,
		-1.14,
		7.2,
		-25.32,
		-1.02,
		7.2,
		-25.199999,
		-1.02,
		7.3799996,
		-25.26,
		-1.1999999,
		7.2,
		-25.199999,
		-1.02,
		7.2,
		-25.32,
		-1.0799999,
		7.44,
		-25.199999,
		-1.0799999,
		7.56,
		-25.14,
		-0.9,
		7.68,
		-25.26,
		-1.02,
		7.74,
		-25.26,
		-0.96,
		7.74,
		-25.439999,
		-0.84,
		7.8599997,
		-25.5,
		-0.59999996,
		7.7999997,
		-25.439999,
		-0.53999996,
		7.9199996,
		-25.32,
		-0.78,
		7.74,
		-25.38,
		-0.71999997,
		7.8599997,
		-25.5,
		-0.9,
		7.74,
		-25.14,
		-0.84,
		7.7999997,
		-25.019999,
		-0.65999997,
		7.7999997,
		-24.9,
		-0.78,
		7.5,
		-24.84,
		-1.14,
		7.7999997,
		-24.9,
		-0.96,
		8.04,
		-24.96,
		-1.02,
		7.8599997,
		-24.84,
		-0.96,
		7.8599997,
		-25.08,
		-0.84,
		7.62,
		-25.32,
		-0.96,
		7.44,
		-25.26,
		-0.9,
		7.5,
		-25.26,
		-0.84,
		7.44,
		-25.439999,
		-0.9,
		7.14,
		-25.5,
		-1.02,
		7.02,
		-25.38,
		-1.02,
		7.2599998,
		-25.5,
		-0.96,
		7.3799996,
		-25.439999,
		-1.3199999,
		7.5,
		-25.38,
		-1.4399999,
		7.5,
		-25.38,
		-1.38,
		7.68,
		-25.439999,
		-1.3199999,
		7.7999997,
		-25.439999,
		-1.26,
		8.04,
		-25.439999,
		-1.0799999,
		7.8599997,
		-25.5,
		-0.96,
		7.68,
		-25.439999,
		-0.96,
		7.62,
		-25.56,
		-0.71999997,
		7.56,
		-25.68,
		-0.59999996,
		7.5,
		-25.68,
		-0.53999996,
		7.44,
		-25.74,
		-0.71999997,
		7.3799996,
		-25.619999,
		-0.78,
		7.5,
		-25.68,
		-0.9,
		7.7999997,
		-25.68,
		-0.9,
		7.9199996,
		-25.38,
		-0.84,
		8.04,
		-25.14,
		-0.96,
		8.04,
		-25.199999,
		-0.9,
		8.099999,
		-25.14,
		-1.14,
		8.16,
		-24.96,
		-0.84,
		8.16,
		-24.96,
		-0.78,
		8.16,
		-25.019999,
		-0.71999997,
		7.98,
		-24.9,
		-0.78,
		7.7999997,
		-25.08,
		-0.65999997,
		7.62,
		-25.199999,
		-0.59999996,
		7.62,
		-25.199999,
		-0.65999997,
		7.7999997,
		-25.199999,
		-0.65999997,
		7.68,
		-25.26,
		-0.65999997,
		7.5,
		-25.32,
		-0.59999996,
		7.3799996,
		-25.14,
		-0.53999996,
		7.3799996,
		-25.08,
		-0.53999996,
		7.44,
		-25.199999,
		-0.59999996,
		7.62,
		-25.14,
		-0.53999996,
		7.5,
		-24.96,
		-0.42,
		7.3799996,
		-24.66,
		-0.65999997,
		7.62,
		-24.48,
		-0.84,
		7.9199996,
		-24.06,
		-1.0799999,
		8.16,
		-24.06,
		-1.02,
		8.34,
		NumberLong(-24),
		-1.02,
		8.639999,
		-23.82,
		-1.02,
		8.88,
		-23.58,
		-1.02,
		9.36,
		-23.4,
		-0.96,
		9.719999,
		-23.519999,
		-0.96,
		9.84,
		-23.46,
		-0.96,
		10.0199995,
		-23.279999,
		-0.84,
		10.08,
		-23.1,
		-0.96,
		10.38,
		-22.98,
		-1.0799999,
		10.26,
		-22.8,
		-1.26,
		10.26,
		-22.8,
		-1.14,
		9.96,
		-22.92,
		-1.26,
		9.84,
		-22.98,
		-1.14,
		9.84,
		-23.22,
		-0.9,
		9.66,
		-23.46,
		-0.96,
		9.48,
		-23.58,
		-0.78,
		9.24,
		-23.699999,
		-0.59999996,
		9.3,
		NumberLong(-24),
		-0.59999996,
		9.24,
		-24.06,
		-0.65999997,
		9.12,
		-24.06,
		-0.65999997,
		8.94,
		-24.119999,
		-0.48,
		8.88,
		NumberLong(-24),
		-0.48,
		8.76,
		-23.76,
		-0.48,
		8.88,
		-23.699999,
		-0.59999996,
		NumberLong(9),
		-23.76,
		-0.65999997,
		9.24,
		-23.279999,
		-0.59999996,
		9.42,
		-23.22,
		-0.9,
		9.719999,
		-23.4,
		-0.84,
		9.78,
		-23.22,
		-0.96,
		9.78,
		-23.22,
		-0.84,
		10.0199995,
		-23.279999,
		-0.84,
		10.139999,
		-23.279999,
		-0.78,
		10.32,
		-23.22,
		-0.78,
		9.96,
		-23.519999,
		-0.78,
		9.84,
		-23.699999,
		-0.53999996,
		9.96,
		-23.46,
		-0.42,
		10.0199995,
		-23.46,
		-0.53999996,
		9.96,
		-23.34,
		-0.78,
		9.78,
		-23.699999,
		-0.71999997,
		9.42,
		-23.88,
		-0.78,
		9.24,
		-24.06,
		-0.65999997,
		9.36,
		NumberLong(-24),
		-0.78,
		9.3,
		-24.18,
		-0.9,
		NumberLong(9),
		-24.24,
		-1.1999999,
		9.059999,
		-24.42,
		-1.02,
		9.059999,
		-24.66,
		-0.78,
		NumberLong(9),
		-24.48,
		-1.02,
		9.179999,
		-24.3,
		-0.9,
		9.12,
		-24.18,
		-1.1999999,
		9.12,
		-24.18,
		-1.0799999,
		9.059999,
		NumberLong(-24),
		-1.02,
		9.3,
		-24.06,
		-0.84,
		9.179999,
		-24.119999,
		-0.9,
		9.36,
		-24.18,
		-1.0799999,
		9.12,
		-24.119999,
		-0.96,
		9.24,
		-24.3,
		-1.0799999,
		9.179999,
		-24.42,
		-1.02,
		9.059999,
		-24.48,
		-0.9,
		8.94,
		-24.359999,
		-0.9,
		8.639999,
		-24.24,
		-0.9,
		8.58,
		-24.3,
		-0.59999996,
		8.4,
		-24.18,
		-0.59999996,
		8.58,
		-24.3,
		-0.53999996,
		8.34,
		-24.18,
		-0.48,
		8.34,
		NumberLong(-24),
		-0.42,
		8.639999,
		NumberLong(-24),
		-0.35999998,
		8.639999,
		-24.3,
		-0.17999999,
		8.7,
		-24.359999,
		-0.35999998,
		8.639999,
		-24.119999,
		-0.53999996,
		8.7,
		-24.359999,
		-0.53999996,
		8.5199995,
		-24.06,
		-0.59999996,
		8.7,
		-24.24,
		-0.48,
		8.76,
		-24.48,
		-0.42,
		8.46,
		-24.42,
		-0.53999996,
		8.5199995,
		-24.42,
		-0.71999997,
		8.5199995,
		-24.42,
		-0.42,
		8.58,
		-24.72,
		-0.29999998,
		8.58,
		-24.6,
		-0.35999998,
		8.94,
		-24.9,
		-0.35999998,
		8.82,
		-24.9,
		-0.53999996,
		8.76,
		-24.9,
		-0.53999996,
		8.88,
		-24.96,
		-0.42,
		8.94,
		-24.779999,
		-0.71999997,
		8.94,
		-24.779999,
		-0.84,
		8.82,
		-24.66,
		-0.84,
		8.76,
		-24.84,
		-0.9,
		8.4,
		-24.72,
		-0.78,
		8.28,
		-24.779999,
		-0.59999996,
		8.22,
		-24.779999,
		-0.59999996,
		8.099999,
		-24.96,
		-0.71999997,
		7.9199996,
		-25.14,
		-0.42,
		7.9199996,
		-25.38,
		-0.48,
		7.98,
		-25.32,
		-0.78,
		7.98,
		-25.32,
		-0.65999997,
		7.9199996,
		-25.32,
		-0.65999997,
		8.04,
		-25.14,
		-0.71999997,
		8.04,
		-25.199999,
		-0.78,
		7.9199996,
		-25.26,
		-0.71999997,
		7.9199996,
		-25.32,
		-0.9,
		7.7999997,
		-25.14,
		-0.78,
		7.62,
		-25.439999,
		-0.71999997,
		7.56,
		-25.439999,
		-0.78,
		7.68,
		-25.439999,
		-0.53999996,
		7.44,
		-25.56,
		-0.53999996,
		7.56,
		-25.439999,
		-0.84,
		7.74,
		-25.439999,
		-0.78,
		7.8599997,
		-25.439999,
		-0.71999997,
		7.8599997,
		-25.38,
		-0.53999996,
		7.8599997,
		-25.26,
		-0.42,
		7.68,
		-25.5,
		-0.48,
		7.56,
		-25.8,
		-0.71999997,
		7.7999997,
		-25.8,
		-0.65999997,
		7.74,
		-25.98,
		-0.35999998,
		7.44,
		-26.099998,
		-0.29999998,
		7.5,
		-26.039999,
		-0.29999998,
		7.5,
		-26.22,
		-0.53999996,
		7.5,
		-26.279999,
		-0.9,
		7.62,
		-26.039999,
		-1.02,
		7.44,
		-25.92,
		-1.02,
		7.3199997,
		-25.92,
		-1.1999999,
		7.3199997,
		-25.619999,
		-1.1999999,
		7.3799996,
		-25.56,
		-1.4399999,
		7.2599998,
		-25.74,
		-1.5,
		7.2,
		-25.8,
		-1.4399999,
		7.2599998,
		-25.92,
		-1.0799999,
		7.08,
		-26.099998,
		-0.84,
		7.14,
		-26.22,
		-0.9,
		7.2,
		-26.099998,
		-0.65999997,
		7.02,
		-26.279999,
		-0.59999996,
		7.02,
		-26.34,
		-0.53999996,
		6.96,
		-26.34,
		-0.42,
		7.14,
		-26.4,
		-0.24,
		7.2599998,
		-26.279999,
		-0.35999998,
		7.56,
		-26.22,
		-0.48,
		7.56,
		-26.099998,
		-0.35999998,
		7.3799996,
		-26.16,
		-0.48,
		7.44,
		-26.34,
		-0.53999996,
		7.56,
		-26.22,
		-0.42,
		7.44,
		-26.22,
		-0.42,
		7.3799996,
		-26.099998,
		-0.29999998,
		7.44,
		-25.98,
		-0.24,
		7.3199997,
		-25.92,
		-0.24,
		7.44,
		-25.98,
		-0.24,
		7.74,
		-25.859999,
		-0.48,
		7.8599997,
		-25.98,
		-0.59999996,
		7.9199996
	],
	"DATA_SIZE" : NumberLong(300)
});
db["kuznia_DATASIZE:300_STEP:1_1_DEFAULT"].insert({
	"_id" : ObjectId("5595053163f9130dc6bc0a25"),
	"STATISTICS" : {
		"PERCENTILE - 90" : 26.16,
		"MIN" : -36.12,
		"STANDARD_DEVIATION" : 20.234176099047794,
		"PERCENTILE - 20" : -25.5,
		"PERCENTILE - 10" : -34.5,
		"MAX" : 28.019999,
		"PERCENTILE - 70" : 7.5,
		"PERCENTILE - 50" : -3.50999995,
		"MODE" : -0.9,
		"MEDIANA" : -2.4799999,
		"MEAN" : -5.266066616777778
	},
	"HASH" : "DEFAULT",
	"MAC_PHONE" : "e8:99:c4:8e:97:36",
	"TIMESTAMP" : "2015-07-02:11-32-24.516",
	"STEP" : [
		NumberLong(1),
		NumberLong(1)
	],
	"PLACE" : "kuznia",
	"MODE" : "FEED_MAP",
	"IP_PHONE" : "192.168.1.100",
	"POSITIONS" : [
		NumberLong(0),
		NumberLong(0)
	],
	"MAGNETIC_AVG_TIME" : "19431",
	"MAGNETIC_DATA" : [
		-22.859999,
		-1.02,
		11.4,
		-23.34,
		-1.38,
		11.58,
		-22.68,
		-1.38,
		10.559999,
		-22.98,
		-1.74,
		10.559999,
		-22.8,
		-1.74,
		10.26,
		-22.439999,
		-1.5,
		9.96,
		-23.1,
		-1.9799999,
		9.96,
		-22.98,
		-1.68,
		10.44,
		-22.8,
		-1.4399999,
		9.9,
		-23.16,
		-1.56,
		9.96,
		-23.16,
		-1.4399999,
		9.96,
		-23.34,
		-1.4399999,
		9.9,
		-23.519999,
		-1.62,
		9.78,
		-23.34,
		-1.4399999,
		9.66,
		-23.58,
		-1.4399999,
		9.48,
		-23.82,
		-1.62,
		9.24,
		-23.699999,
		-1.86,
		9.24,
		-23.82,
		-1.62,
		NumberLong(9),
		-23.88,
		-1.56,
		NumberLong(9),
		NumberLong(-24),
		-1.86,
		9.059999,
		-23.88,
		-1.68,
		NumberLong(9),
		-24.18,
		-1.68,
		9.3,
		-24.06,
		-1.68,
		9.24,
		-24.18,
		-1.68,
		9.24,
		-24.3,
		-1.68,
		9.24,
		-24.119999,
		-1.8,
		9.54,
		NumberLong(-24),
		-1.92,
		9.36,
		-23.88,
		-1.62,
		9.179999,
		-24.24,
		-1.74,
		9.059999,
		-24.119999,
		-1.86,
		8.82,
		-24.06,
		-1.74,
		8.7,
		-24.119999,
		-1.5,
		8.82,
		-24.24,
		-1.3199999,
		8.76,
		-24.24,
		-1.38,
		8.4,
		-24.42,
		-1.1999999,
		8.34,
		-24.42,
		-1.0799999,
		8.4,
		-24.119999,
		-1.0799999,
		8.46,
		-24.24,
		-0.9,
		8.28,
		-24.3,
		-0.9,
		8.34,
		-24.18,
		-0.96,
		8.34,
		-24.119999,
		-0.96,
		8.34,
		-24.359999,
		-0.84,
		8.46,
		-24.24,
		-0.9,
		8.639999,
		-24.42,
		-0.9,
		8.639999,
		-24.42,
		-0.9,
		8.5199995,
		-24.18,
		-1.26,
		8.7,
		-24.3,
		-1.38,
		8.88,
		-24.3,
		-1.4399999,
		8.7,
		-24.359999,
		-1.38,
		8.7,
		-24.3,
		-1.4399999,
		8.58,
		-24.359999,
		-1.38,
		8.46,
		-24.3,
		-1.62,
		8.28,
		-24.48,
		-1.74,
		8.4,
		-24.779999,
		-1.38,
		8.16,
		-24.66,
		-1.3199999,
		7.74,
		-24.779999,
		-1.38,
		7.74,
		-24.66,
		-1.38,
		7.74,
		-24.66,
		-1.38,
		7.68,
		-24.84,
		-1.26,
		7.5,
		-25.14,
		-1.14,
		7.5,
		-25.14,
		-1.0799999,
		7.62,
		-24.96,
		-1.1999999,
		7.74,
		-24.96,
		-1.0799999,
		7.7999997,
		-24.9,
		-0.9,
		7.68,
		-25.14,
		-0.96,
		7.44,
		-25.199999,
		-0.9,
		7.44,
		-25.26,
		-0.84,
		7.5,
		-25.14,
		-0.9,
		7.56,
		-25.32,
		-0.71999997,
		7.5,
		-25.38,
		-0.71999997,
		7.5,
		-25.56,
		-0.84,
		7.56,
		-25.8,
		-0.96,
		7.8599997,
		-25.8,
		-1.1999999,
		7.98,
		-25.8,
		-1.38,
		8.099999,
		-25.68,
		-1.5,
		8.28,
		-25.56,
		-1.38,
		8.28,
		-25.38,
		-1.56,
		7.8599997,
		-25.38,
		-1.56,
		7.9199996,
		-25.619999,
		-1.56,
		8.099999,
		-25.619999,
		-1.62,
		8.099999,
		-25.619999,
		-1.56,
		7.9199996,
		-25.5,
		-1.1999999,
		7.98,
		-25.5,
		-1.38,
		7.7999997,
		-25.439999,
		-1.3199999,
		7.5,
		-25.619999,
		-1.26,
		7.56,
		-25.68,
		-1.3199999,
		7.3799996,
		-25.439999,
		-1.14,
		7.2,
		-25.32,
		-1.02,
		7.2,
		-25.199999,
		-1.02,
		7.3799996,
		-25.26,
		-1.1999999,
		7.2,
		-25.199999,
		-1.02,
		7.2,
		-25.32,
		-1.0799999,
		7.44,
		-25.199999,
		-1.0799999,
		7.56,
		-25.14,
		-0.9,
		7.68,
		-25.26,
		-1.02,
		7.74,
		-25.26,
		-0.96,
		7.74,
		-25.439999,
		-0.84,
		7.8599997,
		-25.5,
		-0.59999996,
		7.7999997,
		-25.439999,
		-0.53999996,
		7.9199996,
		-25.32,
		-0.78,
		7.74,
		-25.38,
		-0.71999997,
		7.8599997,
		-25.5,
		-0.9,
		7.74,
		-25.14,
		-0.84,
		7.7999997,
		-25.019999,
		-0.65999997,
		7.7999997,
		-24.9,
		-0.78,
		7.5,
		-24.84,
		-1.14,
		7.7999997,
		-24.9,
		-0.96,
		8.04,
		-24.96,
		-1.02,
		7.8599997,
		-24.84,
		-0.96,
		7.8599997,
		-25.08,
		-0.84,
		7.62,
		-25.32,
		-0.96,
		7.44,
		-25.26,
		-0.9,
		7.5,
		-25.26,
		-0.84,
		7.44,
		-25.439999,
		-0.9,
		7.14,
		-25.5,
		-1.02,
		7.02,
		-25.38,
		-1.02,
		7.2599998,
		-25.5,
		-0.96,
		7.3799996,
		-25.439999,
		-1.3199999,
		7.5,
		-25.38,
		-1.4399999,
		7.5,
		-25.38,
		-1.38,
		7.68,
		-25.439999,
		-1.3199999,
		7.7999997,
		-25.439999,
		-1.26,
		8.04,
		-25.439999,
		-1.0799999,
		7.8599997,
		-25.5,
		-0.96,
		7.68,
		-25.439999,
		-0.96,
		7.62,
		-25.56,
		-0.71999997,
		7.56,
		-25.68,
		-0.59999996,
		7.5,
		-25.68,
		-0.53999996,
		7.44,
		-25.74,
		-0.71999997,
		7.3799996,
		-25.619999,
		-0.78,
		7.5,
		-25.68,
		-0.9,
		7.7999997,
		-25.68,
		-0.9,
		7.9199996,
		-25.38,
		-0.84,
		8.04,
		-25.14,
		-0.96,
		8.04,
		-25.199999,
		-0.9,
		8.099999,
		-25.14,
		-1.14,
		8.16,
		-24.96,
		-0.84,
		8.16,
		-24.96,
		-0.78,
		8.16,
		-25.019999,
		-0.71999997,
		7.98,
		-24.9,
		-0.78,
		7.7999997,
		-25.08,
		-0.65999997,
		7.62,
		-25.199999,
		-0.59999996,
		7.62,
		-25.199999,
		-0.65999997,
		7.7999997,
		-25.199999,
		-0.65999997,
		7.68,
		-25.26,
		-0.65999997,
		7.5,
		-25.32,
		-0.59999996,
		7.3799996,
		-25.14,
		-0.53999996,
		7.3799996,
		-25.08,
		-0.53999996,
		7.44,
		-25.199999,
		-0.59999996,
		7.62,
		-25.14,
		-0.53999996,
		7.5,
		-24.96,
		-0.42,
		7.3799996,
		-24.66,
		-0.65999997,
		7.62,
		-24.48,
		-0.84,
		7.9199996,
		-24.06,
		-1.0799999,
		8.16,
		-24.06,
		-1.02,
		8.34,
		NumberLong(-24),
		-1.02,
		8.639999,
		-23.82,
		-1.02,
		8.88,
		-23.58,
		-1.02,
		9.36,
		-23.4,
		-0.96,
		9.719999,
		-23.519999,
		-0.96,
		9.84,
		-23.46,
		-0.96,
		10.0199995,
		-23.279999,
		-0.84,
		10.08,
		-23.1,
		-0.96,
		10.38,
		-22.98,
		-1.0799999,
		10.26,
		-22.8,
		-1.26,
		10.26,
		-22.8,
		-1.14,
		9.96,
		-22.92,
		-1.26,
		9.84,
		-22.98,
		-1.14,
		9.84,
		-23.22,
		-0.9,
		9.66,
		-23.46,
		-0.96,
		9.48,
		-23.58,
		-0.78,
		9.24,
		-23.699999,
		-0.59999996,
		9.3,
		NumberLong(-24),
		-0.59999996,
		9.24,
		-24.06,
		-0.65999997,
		9.12,
		-24.06,
		-0.65999997,
		8.94,
		-24.119999,
		-0.48,
		8.88,
		NumberLong(-24),
		-0.48,
		8.76,
		-23.76,
		-0.48,
		8.88,
		-23.699999,
		-0.59999996,
		NumberLong(9),
		-23.76,
		-0.65999997,
		9.24,
		-23.279999,
		-0.59999996,
		9.42,
		-23.22,
		-0.9,
		9.719999,
		-23.4,
		-0.84,
		9.78,
		-23.22,
		-0.96,
		9.78,
		-23.22,
		-0.84,
		10.0199995,
		-23.279999,
		-0.84,
		10.139999,
		-23.279999,
		-0.78,
		10.32,
		-23.22,
		-0.78,
		9.96,
		-23.519999,
		-0.78,
		9.84,
		-23.699999,
		-0.53999996,
		9.96,
		-23.46,
		-0.42,
		10.0199995,
		-23.46,
		-0.53999996,
		9.96,
		-23.34,
		-0.78,
		9.78,
		-23.699999,
		-0.71999997,
		9.42,
		-23.88,
		-0.78,
		9.24,
		-24.06,
		-0.65999997,
		9.36,
		NumberLong(-24),
		-0.78,
		9.3,
		-24.18,
		-0.9,
		NumberLong(9),
		-24.24,
		-1.1999999,
		9.059999,
		-24.42,
		-1.02,
		9.059999,
		-24.66,
		-0.78,
		NumberLong(9),
		-24.48,
		-1.02,
		9.179999,
		-24.3,
		-0.9,
		9.12,
		-24.18,
		-1.1999999,
		9.12,
		-24.18,
		-1.0799999,
		9.059999,
		NumberLong(-24),
		-1.02,
		9.3,
		-24.06,
		-0.84,
		9.179999,
		-24.119999,
		-0.9,
		9.36,
		-24.18,
		-1.0799999,
		9.12,
		-24.119999,
		-0.96,
		9.24,
		-24.3,
		-1.0799999,
		9.179999,
		-24.42,
		-1.02,
		9.059999,
		-24.48,
		-0.9,
		8.94,
		-24.359999,
		-0.9,
		8.639999,
		-24.24,
		-0.9,
		8.58,
		-24.3,
		-0.59999996,
		8.4,
		-24.18,
		-0.59999996,
		8.58,
		-24.3,
		-0.53999996,
		8.34,
		-24.18,
		-0.48,
		8.34,
		NumberLong(-24),
		-0.42,
		8.639999,
		NumberLong(-24),
		-0.35999998,
		8.639999,
		-24.3,
		-0.17999999,
		8.7,
		-24.359999,
		-0.35999998,
		8.639999,
		-24.119999,
		-0.53999996,
		8.7,
		-24.359999,
		-0.53999996,
		8.5199995,
		-24.06,
		-0.59999996,
		8.7,
		-24.24,
		-0.48,
		8.76,
		-24.48,
		-0.42,
		8.46,
		-24.42,
		-0.53999996,
		8.5199995,
		-24.42,
		-0.71999997,
		8.5199995,
		-24.42,
		-0.42,
		8.58,
		-24.72,
		-0.29999998,
		8.58,
		-24.6,
		-0.35999998,
		8.94,
		-24.9,
		-0.35999998,
		8.82,
		-24.9,
		-0.53999996,
		8.76,
		-24.9,
		-0.53999996,
		8.88,
		-24.96,
		-0.42,
		8.94,
		-24.779999,
		-0.71999997,
		8.94,
		-24.779999,
		-0.84,
		8.82,
		-24.66,
		-0.84,
		8.76,
		-24.84,
		-0.9,
		8.4,
		-24.72,
		-0.78,
		8.28,
		-24.779999,
		-0.59999996,
		8.22,
		-24.779999,
		-0.59999996,
		8.099999,
		-24.96,
		-0.71999997,
		7.9199996,
		-25.14,
		-0.42,
		7.9199996,
		-25.38,
		-0.48,
		7.98,
		-25.32,
		-0.78,
		7.98,
		-25.32,
		-0.65999997,
		7.9199996,
		-25.32,
		-0.65999997,
		8.04,
		-25.14,
		-0.71999997,
		8.04,
		-25.199999,
		-0.78,
		7.9199996,
		-25.26,
		-0.71999997,
		7.9199996,
		-25.32,
		-0.9,
		7.7999997,
		-25.14,
		-0.78,
		7.62,
		-25.439999,
		-0.71999997,
		7.56,
		-25.439999,
		-0.78,
		7.68,
		-25.439999,
		-0.53999996,
		7.44,
		-25.56,
		-0.53999996,
		7.56,
		-25.439999,
		-0.84,
		7.74,
		-25.439999,
		-0.78,
		7.8599997,
		-25.439999,
		-0.71999997,
		7.8599997,
		-25.38,
		-0.53999996,
		7.8599997,
		-25.26,
		-0.42,
		7.68,
		-25.5,
		-0.48,
		7.56,
		-25.8,
		-0.71999997,
		7.7999997,
		-25.8,
		-0.65999997,
		7.74,
		-25.98,
		-0.35999998,
		7.44,
		-26.099998,
		-0.29999998,
		7.5,
		-26.039999,
		-0.29999998,
		7.5,
		-26.22,
		-0.53999996,
		7.5,
		-26.279999,
		-0.9,
		7.62,
		-26.039999,
		-1.02,
		7.44,
		-25.92,
		-1.02,
		7.3199997,
		-25.92,
		-1.1999999,
		7.3199997,
		-25.619999,
		-1.1999999,
		7.3799996,
		-25.56,
		-1.4399999,
		7.2599998,
		-25.74,
		-1.5,
		7.2,
		-25.8,
		-1.4399999,
		7.2599998,
		-25.92,
		-1.0799999,
		7.08,
		-26.099998,
		-0.84,
		7.14,
		-26.22,
		-0.9,
		7.2,
		-26.099998,
		-0.65999997,
		7.02,
		-26.279999,
		-0.59999996,
		7.02,
		-26.34,
		-0.53999996,
		6.96,
		-26.34,
		-0.42,
		7.14,
		-26.4,
		-0.24,
		7.2599998,
		-26.279999,
		-0.35999998,
		7.56,
		-26.22,
		-0.48,
		7.56,
		-26.099998,
		-0.35999998,
		7.3799996,
		-26.16,
		-0.48,
		7.44,
		-26.34,
		-0.53999996,
		7.56,
		-26.22,
		-0.42,
		7.44,
		-26.22,
		-0.42,
		7.3799996,
		-26.099998,
		-0.29999998,
		7.44,
		-25.98,
		-0.24,
		7.3199997,
		-25.92,
		-0.24,
		7.44,
		-25.98,
		-0.24,
		7.74,
		-25.859999,
		-0.48,
		7.8599997,
		-25.98,
		-0.59999996,
		7.9199996,
		-34.8,
		-6.48,
		NumberLong(27),
		-34.079998,
		-6.8399997,
		NumberLong(27),
		-33.54,
		-6.7799997,
		27.359999,
		-33.18,
		-6.6,
		27.359999,
		-32.76,
		-6.54,
		27.72,
		-32.82,
		-6.8999996,
		27.779999,
		-33.12,
		-6.96,
		27.42,
		-32.94,
		-7.14,
		27.42,
		-32.94,
		-7.2599998,
		27.359999,
		NumberLong(-33),
		-7.2599998,
		27.359999,
		-33.12,
		-7.3199997,
		27.42,
		-32.88,
		-7.2599998,
		27.359999,
		NumberLong(-33),
		-7.3799996,
		27.359999,
		NumberLong(-33),
		-7.3799996,
		27.42,
		-33.12,
		-7.2,
		27.359999,
		-33.059998,
		-7.2,
		27.359999,
		-33.18,
		-7.02,
		27.599998,
		-33.18,
		-7.02,
		27.72,
		-33.3,
		-6.8999996,
		27.72,
		-33.3,
		-6.7799997,
		27.599998,
		-33.42,
		-6.6,
		27.66,
		-33.3,
		-6.54,
		27.9,
		-33.3,
		-6.48,
		28.019999,
		-33.239998,
		-6.42,
		27.96,
		-33.12,
		-6.54,
		27.779999,
		-33.18,
		-6.6,
		27.599998,
		-33.239998,
		-6.7799997,
		27.599998,
		-33.36,
		-6.8999996,
		27.72,
		-33.239998,
		-6.96,
		27.599998,
		-33.12,
		-7.08,
		27.599998,
		-33.3,
		-7.02,
		27.359999,
		-33.48,
		-6.96,
		27.48,
		-33.36,
		-7.02,
		27.66,
		-33.239998,
		-6.8399997,
		27.66,
		-33.3,
		-6.72,
		27.66,
		-33.54,
		-6.54,
		27.539999,
		-33.66,
		-6.6,
		27.42,
		-33.66,
		-6.24,
		27.42,
		-33.3,
		-6.42,
		27.539999,
		-33.18,
		-6.3599997,
		27.66,
		-33.18,
		-6.18,
		27.72,
		-33.3,
		-6.24,
		27.66,
		-33.42,
		-6.2999997,
		27.599998,
		-33.42,
		-6.42,
		27.48,
		-33.6,
		-6.42,
		27.359999,
		-33.78,
		-6.54,
		27.42,
		-33.96,
		-6.54,
		27.48,
		-34.26,
		-6.72,
		27.3,
		-34.38,
		-6.8399997,
		27.06,
		-34.44,
		-6.7799997,
		26.939999,
		-34.5,
		-6.72,
		26.88,
		-34.559998,
		-6.7799997,
		26.88,
		-34.5,
		-6.72,
		26.88,
		-34.62,
		-6.54,
		26.699999,
		-34.62,
		-6.42,
		26.58,
		-34.62,
		-6.06,
		26.519999,
		-34.559998,
		-6.06,
		26.519999,
		-34.44,
		-6.12,
		26.519999,
		-34.26,
		NumberLong(-6),
		26.4,
		-34.14,
		-5.8799996,
		26.4,
		-34.14,
		-5.8799996,
		26.279999,
		-34.079998,
		-6.18,
		26.22,
		-34.079998,
		-6.3599997,
		26.099998,
		-34.079998,
		-6.54,
		26.22,
		-34.079998,
		-6.42,
		26.099998,
		-34.079998,
		-6.2999997,
		25.98,
		-34.079998,
		-6.2999997,
		26.16,
		-34.079998,
		-6.42,
		26.039999,
		-34.44,
		-6.2999997,
		26.039999,
		-34.44,
		-6.12,
		26.099998,
		-34.26,
		-6.12,
		26.16,
		-34.44,
		-6.42,
		26.22,
		-34.44,
		-6.6,
		26.34,
		-34.26,
		-6.6,
		26.279999,
		-34.26,
		-6.6,
		26.519999,
		-34.02,
		-6.66,
		26.82,
		-33.66,
		-6.7799997,
		26.82,
		-33.54,
		-6.8399997,
		NumberLong(27),
		-33.54,
		-6.72,
		27.06,
		-33.54,
		-6.6,
		27.119999,
		-33.6,
		-6.6,
		27.3,
		-33.84,
		-6.72,
		27.42,
		-33.48,
		-6.66,
		27.359999,
		-33.36,
		-6.66,
		27.48,
		-33.54,
		-6.54,
		27.48,
		-33.6,
		-6.3599997,
		27.42,
		-33.48,
		-6.48,
		27.48,
		-33.42,
		-6.54,
		27.66,
		-33.36,
		-6.6,
		27.66,
		-33.42,
		-6.6,
		27.66,
		-33.719997,
		-6.72,
		27.84,
		-33.719997,
		-6.7799997,
		27.779999,
		-33.78,
		-6.72,
		27.539999,
		-33.84,
		-6.8999996,
		27.48,
		-34.02,
		-6.8399997,
		27.3,
		-34.02,
		-6.8999996,
		27.119999,
		-34.079998,
		-6.66,
		26.88,
		-34.32,
		-6.6,
		26.76,
		-34.32,
		-6.42,
		26.58,
		-34.38,
		-6.42,
		26.64,
		-34.14,
		-6.42,
		26.699999,
		-34.26,
		-6.3599997,
		26.76,
		-34.26,
		-6.42,
		26.699999,
		-34.14,
		-6.2999997,
		26.64,
		-34.14,
		-6.3599997,
		26.76,
		-33.96,
		-6.48,
		26.64,
		-34.14,
		-6.42,
		26.58,
		-34.32,
		-6.3599997,
		26.519999,
		-34.44,
		-6.18,
		26.64,
		-34.5,
		-6.42,
		26.519999,
		-34.5,
		-6.3599997,
		26.64,
		-34.739998,
		-6.24,
		26.76,
		-34.92,
		-6.18,
		26.519999,
		-35.04,
		-6.18,
		26.939999,
		-34.92,
		-6.2999997,
		27.119999,
		-34.8,
		-6.3599997,
		NumberLong(27),
		-34.92,
		-6.54,
		26.82,
		-34.92,
		-6.2999997,
		26.699999,
		-34.739998,
		-6.2999997,
		26.58,
		-34.62,
		-6.48,
		26.34,
		-34.62,
		-6.48,
		26.279999,
		-34.62,
		-6.42,
		25.98,
		-34.739998,
		-6.3599997,
		25.68,
		-34.739998,
		-6.12,
		25.8,
		-34.8,
		-5.94,
		25.859999,
		-35.04,
		-5.8199997,
		25.98,
		-35.399998,
		-5.94,
		25.8,
		-35.579998,
		-5.8799996,
		25.92,
		-35.579998,
		-5.8199997,
		25.98,
		-35.52,
		-5.7599998,
		25.98,
		-35.399998,
		-5.8199997,
		25.98,
		-35.399998,
		-6.12,
		25.98,
		-35.52,
		-6.06,
		25.8,
		-35.399998,
		-6.12,
		25.68,
		-35.16,
		-6.12,
		25.619999,
		-35.1,
		-6.12,
		25.5,
		-35.04,
		-6.24,
		25.26,
		-35.04,
		-6.2999997,
		25.32,
		-35.1,
		-6.18,
		25.26,
		-35.34,
		-6.06,
		25.08,
		-35.28,
		-6.18,
		25.199999,
		-35.28,
		-6.24,
		25.08,
		-35.219997,
		-6.06,
		25.26,
		-35.46,
		-6.12,
		25.439999,
		-35.52,
		-6.18,
		25.74,
		-35.399998,
		-6.18,
		25.8,
		-35.16,
		-6.24,
		25.859999,
		-34.98,
		-6.3599997,
		26.16,
		-34.5,
		-6.3599997,
		26.099998,
		-34.62,
		-6.2999997,
		26.099998,
		-34.739998,
		-6.42,
		26.34,
		-34.5,
		-6.2999997,
		26.22,
		-34.26,
		-6.24,
		25.98,
		-34.5,
		-6.18,
		25.92,
		-34.68,
		-6.18,
		26.039999,
		-34.739998,
		-6.12,
		25.98,
		-35.1,
		-5.94,
		26.099998,
		-34.98,
		-6.18,
		26.279999,
		-34.86,
		-6.24,
		26.16,
		-34.8,
		-6.3599997,
		26.34,
		-35.16,
		-6.2999997,
		26.46,
		-35.04,
		-6.18,
		26.279999,
		-35.1,
		-6.12,
		26.22,
		-35.16,
		-6.06,
		26.34,
		-35.219997,
		-6.18,
		26.16,
		-35.28,
		-6.06,
		26.099998,
		-35.219997,
		-5.8799996,
		26.039999,
		-35.219997,
		-5.8799996,
		26.099998,
		-35.1,
		NumberLong(-6),
		26.099998,
		-35.16,
		-6.18,
		26.099998,
		-34.98,
		-6.24,
		26.16,
		-34.98,
		-6.2999997,
		25.859999,
		-34.92,
		-6.3599997,
		26.039999,
		-34.92,
		-6.2999997,
		26.16,
		-35.04,
		-6.2999997,
		26.279999,
		-35.28,
		-6.24,
		25.92,
		-35.16,
		-6.18,
		25.98,
		-35.16,
		-6.06,
		26.099998,
		-35.219997,
		-6.06,
		25.92,
		-35.219997,
		-6.18,
		26.099998,
		-35.16,
		-6.06,
		26.099998,
		-35.219997,
		-6.24,
		26.039999,
		-35.219997,
		-6.2999997,
		25.74,
		-34.92,
		-6.3599997,
		25.68,
		-34.92,
		-6.42,
		25.68,
		-34.98,
		-6.6,
		25.74,
		-34.98,
		-6.54,
		25.859999,
		-34.98,
		-6.54,
		25.619999,
		-35.16,
		-6.6,
		25.68,
		-35.04,
		-6.54,
		25.74,
		-35.1,
		-6.6,
		26.039999,
		-35.1,
		-6.42,
		26.099998,
		-35.16,
		-6.3599997,
		25.8,
		-35.219997,
		-6.3599997,
		25.68,
		-35.28,
		-6.42,
		25.619999,
		-35.219997,
		-6.3599997,
		25.74,
		-35.16,
		-6.2999997,
		25.5,
		-35.16,
		-6.2999997,
		25.38,
		-35.219997,
		-6.24,
		25.32,
		-35.219997,
		-6.2999997,
		25.439999,
		-35.219997,
		-6.48,
		25.68,
		-34.98,
		-6.24,
		26.099998,
		-35.04,
		-6.24,
		26.4,
		-35.16,
		-6.06,
		26.64,
		-35.04,
		-6.06,
		26.76,
		-34.92,
		-5.8799996,
		26.88,
		-34.559998,
		-6.12,
		26.939999,
		-34.38,
		NumberLong(-6),
		27.06,
		-34.38,
		-5.8199997,
		27.3,
		-34.44,
		-5.8199997,
		27.24,
		-34.32,
		-5.58,
		27.119999,
		-34.079998,
		-5.58,
		27.18,
		-33.899998,
		-5.58,
		27.42,
		-34.079998,
		-5.52,
		27.359999,
		-34.38,
		-5.16,
		27.48,
		-34.5,
		-5.1,
		27.539999,
		-34.38,
		-5.16,
		27.3,
		-34.32,
		-5.04,
		27.18,
		-34.26,
		-5.2799997,
		27.06,
		-34.2,
		-5.2799997,
		27.06,
		-34.38,
		-5.2799997,
		NumberLong(27),
		-34.5,
		-5.3399997,
		27.06,
		-34.32,
		-5.64,
		NumberLong(27),
		-34.44,
		-5.64,
		NumberLong(27),
		-34.559998,
		-5.58,
		NumberLong(27),
		-34.8,
		-5.46,
		NumberLong(27),
		-34.98,
		-5.3399997,
		26.88,
		-35.219997,
		-5.46,
		NumberLong(27),
		-35.28,
		-5.4,
		26.82,
		-35.34,
		-5.46,
		26.699999,
		-35.46,
		-5.16,
		26.46,
		-35.52,
		-5.2799997,
		26.519999,
		-35.579998,
		-5.46,
		26.4,
		-35.579998,
		-5.64,
		26.4,
		-35.76,
		-5.7,
		26.16,
		-35.7,
		-5.64,
		26.039999,
		-35.82,
		-5.58,
		25.98,
		-35.76,
		-5.64,
		26.039999,
		-35.7,
		-5.64,
		25.859999,
		-35.64,
		-5.64,
		25.56,
		-35.52,
		-5.52,
		25.56,
		-35.46,
		-5.52,
		25.619999,
		-35.04,
		-5.64,
		25.8,
		-35.04,
		-5.7599998,
		25.74,
		-34.98,
		-5.94,
		25.859999,
		-34.68,
		-5.94,
		25.8,
		-34.559998,
		-6.06,
		26.039999,
		-34.5,
		-6.12,
		26.22,
		-34.38,
		NumberLong(-6),
		26.16,
		-34.26,
		NumberLong(-6),
		26.16,
		-34.5,
		-5.8199997,
		26.099998,
		-34.559998,
		-5.52,
		25.98,
		-34.62,
		-5.3399997,
		25.74,
		-34.739998,
		-5.16,
		25.8,
		-34.92,
		-5.04,
		25.68,
		-35.1,
		-5.1,
		25.68,
		-35.34,
		-5.3399997,
		25.68,
		-35.76,
		-5.46,
		25.32,
		-35.76,
		-5.64,
		25.26,
		-35.82,
		-5.7599998,
		25.199999,
		-35.82,
		-5.94,
		25.38,
		-36.12,
		NumberLong(-6),
		25.439999,
		NumberLong(-36),
		-5.8799996,
		25.38,
		-36.12,
		-5.8199997,
		25.26,
		-36.12,
		-5.58,
		25.439999,
		-35.82,
		-5.58,
		25.68,
		-35.76,
		-5.52,
		25.8,
		-35.7,
		-5.46,
		25.68,
		-35.76,
		-5.46,
		25.68,
		-35.7,
		-5.46,
		25.56,
		-35.88,
		-5.58,
		25.68,
		-35.94,
		-5.52,
		25.68,
		-35.88,
		-5.7,
		25.5,
		-35.88,
		-5.58,
		25.56,
		-35.82,
		-5.58,
		25.8,
		-35.94,
		-5.7599998,
		26.16,
		-35.64,
		-5.64,
		25.98,
		-35.64,
		-5.52,
		26.039999,
		-35.34,
		-5.52,
		26.16,
		-35.04,
		-5.7599998,
		26.22,
		-35.04,
		-5.64,
		26.34,
		-34.86,
		-5.58,
		26.4,
		-34.86,
		-5.64,
		26.22,
		-34.86,
		-5.64,
		25.98,
		-34.98,
		-5.58,
		26.16,
		-34.92,
		-5.7,
		26.039999,
		-34.98,
		-5.94,
		26.039999,
		-35.219997,
		-5.8799996,
		25.98,
		-35.28,
		-5.8199997,
		25.92,
		-35.399998,
		-5.7599998,
		25.98,
		-35.399998,
		-5.7599998,
		26.22,
		-35.34,
		-5.64,
		26.279999,
		-35.399998,
		-5.64,
		26.4,
		-35.46,
		-5.8799996,
		26.64,
		-35.46,
		-5.64,
		26.58,
		-35.52,
		-5.7599998,
		26.58,
		-35.399998,
		-5.7599998,
		26.76,
		-35.399998,
		-6.12,
		26.64,
		-35.46,
		-6.2999997,
		26.4,
		-35.46,
		-6.3599997,
		26.46
	],
	"DATA_SIZE" : NumberLong(300)
});
db["kuznia_DATASIZE:300_STEP:1_1_DEFAULT"].insert({
	"_id" : ObjectId("5595053263f9130dc6bc0a27"),
	"STATISTICS" : {
		"PERCENTILE - 90" : -21,
		"MIN" : NumberLong(-21),
		"STANDARD_DEVIATION" : 0,
		"PERCENTILE - 20" : -21,
		"PERCENTILE - 10" : -21,
		"MAX" : NumberLong(-21),
		"PERCENTILE - 70" : -21,
		"PERCENTILE - 50" : -21,
		"MODE" : NumberLong(-21),
		"MEDIANA" : -21,
		"MEAN" : -21
	},
	"HASH" : "DEFAULT",
	"SSID" : "PinGwin",
	"RSSI_DATA" : [
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21),
		NumberLong(-21)
	],
	"TIMESTAMP" : "2015-07-02:11-24-41.852",
	"POSITIONS" : [
		NumberLong(0),
		NumberLong(0)
	],
	"STEP" : [
		NumberLong(1),
		NumberLong(1)
	],
	"PLACE" : "kuznia",
	"MODE" : "FEED_MAP",
	"IP_PHONE" : "192.168.1.100",
	"RSSI_AVG_TIME" : "5753802",
	"MAC_AP" : "68:7f:74:09:f6:8b",
	"DATA_SIZE" : NumberLong(300),
	"MAC_PHONE" : "e8:99:c4:8e:97:36"
});
db["kuznia_DATASIZE:300_STEP:1_1_DEFAULT"].insert({
	"_id" : ObjectId("5595053263f9130dc6bc0a28"),
	"STATISTICS" : {
		"PERCENTILE - 90" : -81,
		"MIN" : NumberLong(-81),
		"STANDARD_DEVIATION" : 0,
		"PERCENTILE - 20" : -81,
		"PERCENTILE - 10" : -81,
		"MAX" : NumberLong(-81),
		"PERCENTILE - 70" : -81,
		"PERCENTILE - 50" : -81,
		"MODE" : NumberLong(-81),
		"MEDIANA" : -81,
		"MEAN" : -81
	},
	"HASH" : "DEFAULT",
	"SSID" : "ParkWielokulturowy",
	"RSSI_DATA" : [
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81)
	],
	"TIMESTAMP" : "2015-07-02:11-24-41.854",
	"POSITIONS" : [
		NumberLong(0),
		NumberLong(0)
	],
	"STEP" : [
		NumberLong(1),
		NumberLong(1)
	],
	"PLACE" : "kuznia",
	"MODE" : "FEED_MAP",
	"IP_PHONE" : "192.168.1.100",
	"RSSI_AVG_TIME" : "5753802",
	"MAC_AP" : "28:80:23:28:8a:00",
	"DATA_SIZE" : NumberLong(300),
	"MAC_PHONE" : "e8:99:c4:8e:97:36"
});
db["kuznia_DATASIZE:300_STEP:1_1_DEFAULT"].insert({
	"_id" : ObjectId("5595053263f9130dc6bc0a29"),
	"STATISTICS" : {
		"PERCENTILE - 90" : -83,
		"MIN" : NumberLong(-83),
		"STANDARD_DEVIATION" : 0,
		"PERCENTILE - 20" : -83,
		"PERCENTILE - 10" : -83,
		"MAX" : NumberLong(-83),
		"PERCENTILE - 70" : -83,
		"PERCENTILE - 50" : -83,
		"MODE" : NumberLong(-83),
		"MEDIANA" : -83,
		"MEAN" : -83
	},
	"HASH" : "DEFAULT",
	"SSID" : "PWSK",
	"RSSI_DATA" : [
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83)
	],
	"TIMESTAMP" : "2015-07-02:11-24-41.855",
	"POSITIONS" : [
		NumberLong(0),
		NumberLong(0)
	],
	"STEP" : [
		NumberLong(1),
		NumberLong(1)
	],
	"PLACE" : "kuznia",
	"MODE" : "FEED_MAP",
	"IP_PHONE" : "192.168.1.100",
	"RSSI_AVG_TIME" : "5753802",
	"MAC_AP" : "28:80:23:28:8a:b1",
	"DATA_SIZE" : NumberLong(300),
	"MAC_PHONE" : "e8:99:c4:8e:97:36"
});
db["kuznia_DATASIZE:300_STEP:1_1_DEFAULT"].insert({
	"_id" : ObjectId("5595053263f9130dc6bc0a2a"),
	"STATISTICS" : {
		"PERCENTILE - 90" : -83,
		"MIN" : NumberLong(-83),
		"STANDARD_DEVIATION" : 0,
		"PERCENTILE - 20" : -83,
		"PERCENTILE - 10" : -83,
		"MAX" : NumberLong(-83),
		"PERCENTILE - 70" : -83,
		"PERCENTILE - 50" : -83,
		"MODE" : NumberLong(-83),
		"MEDIANA" : -83,
		"MEAN" : -83
	},
	"HASH" : "DEFAULT",
	"SSID" : "",
	"RSSI_DATA" : [
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83)
	],
	"TIMESTAMP" : "2015-07-02:11-24-41.856",
	"POSITIONS" : [
		NumberLong(0),
		NumberLong(0)
	],
	"STEP" : [
		NumberLong(1),
		NumberLong(1)
	],
	"PLACE" : "kuznia",
	"MODE" : "FEED_MAP",
	"IP_PHONE" : "192.168.1.100",
	"RSSI_AVG_TIME" : "5753802",
	"MAC_AP" : "00:1a:70:a2:61:b0",
	"DATA_SIZE" : NumberLong(300),
	"MAC_PHONE" : "e8:99:c4:8e:97:36"
});
db["kuznia_DATASIZE:300_STEP:1_1_DEFAULT"].insert({
	"_id" : ObjectId("5595053263f9130dc6bc0a2b"),
	"STATISTICS" : {
		"PERCENTILE - 90" : -80,
		"MIN" : NumberLong(-80),
		"STANDARD_DEVIATION" : 0,
		"PERCENTILE - 20" : -80,
		"PERCENTILE - 10" : -80,
		"MAX" : NumberLong(-80),
		"PERCENTILE - 70" : -80,
		"PERCENTILE - 50" : -80,
		"MODE" : NumberLong(-80),
		"MEDIANA" : -80,
		"MEAN" : -80
	},
	"HASH" : "DEFAULT",
	"SSID" : "PWSK_K",
	"RSSI_DATA" : [
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80)
	],
	"TIMESTAMP" : "2015-07-02:11-24-41.857",
	"POSITIONS" : [
		NumberLong(0),
		NumberLong(0)
	],
	"STEP" : [
		NumberLong(1),
		NumberLong(1)
	],
	"PLACE" : "kuznia",
	"MODE" : "FEED_MAP",
	"IP_PHONE" : "192.168.1.100",
	"RSSI_AVG_TIME" : "5753802",
	"MAC_AP" : "28:80:23:28:8a:02",
	"DATA_SIZE" : NumberLong(300),
	"MAC_PHONE" : "e8:99:c4:8e:97:36"
});
db["kuznia_DATASIZE:300_STEP:1_1_DEFAULT"].insert({
	"_id" : ObjectId("5595053263f9130dc6bc0a2c"),
	"STATISTICS" : {
		"PERCENTILE - 90" : -80,
		"MIN" : NumberLong(-80),
		"STANDARD_DEVIATION" : 0,
		"PERCENTILE - 20" : -80,
		"PERCENTILE - 10" : -80,
		"MAX" : NumberLong(-80),
		"PERCENTILE - 70" : -80,
		"PERCENTILE - 50" : -80,
		"MODE" : NumberLong(-80),
		"MEDIANA" : -80,
		"MEAN" : -80
	},
	"HASH" : "DEFAULT",
	"SSID" : "PWSK",
	"RSSI_DATA" : [
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80)
	],
	"TIMESTAMP" : "2015-07-02:11-24-41.859",
	"POSITIONS" : [
		NumberLong(0),
		NumberLong(0)
	],
	"STEP" : [
		NumberLong(1),
		NumberLong(1)
	],
	"PLACE" : "kuznia",
	"MODE" : "FEED_MAP",
	"IP_PHONE" : "192.168.1.100",
	"RSSI_AVG_TIME" : "5753802",
	"MAC_AP" : "28:80:23:28:8a:01",
	"DATA_SIZE" : NumberLong(300),
	"MAC_PHONE" : "e8:99:c4:8e:97:36"
});
db["kuznia_DATASIZE:300_STEP:1_1_DEFAULT"].insert({
	"_id" : ObjectId("5595053263f9130dc6bc0a2d"),
	"STATISTICS" : {
		"PERCENTILE - 90" : -83,
		"MIN" : NumberLong(-83),
		"STANDARD_DEVIATION" : 0,
		"PERCENTILE - 20" : -83,
		"PERCENTILE - 10" : -83,
		"MAX" : NumberLong(-83),
		"PERCENTILE - 70" : -83,
		"PERCENTILE - 50" : -83,
		"MODE" : NumberLong(-83),
		"MEDIANA" : -83,
		"MEAN" : -83
	},
	"HASH" : "DEFAULT",
	"SSID" : "",
	"RSSI_DATA" : [
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83)
	],
	"TIMESTAMP" : "2015-07-02:11-24-41.860",
	"POSITIONS" : [
		NumberLong(0),
		NumberLong(0)
	],
	"STEP" : [
		NumberLong(1),
		NumberLong(1)
	],
	"PLACE" : "kuznia",
	"MODE" : "FEED_MAP",
	"IP_PHONE" : "192.168.1.100",
	"RSSI_AVG_TIME" : "5753802",
	"MAC_AP" : "c4:6e:1f:35:c4:8c",
	"DATA_SIZE" : NumberLong(300),
	"MAC_PHONE" : "e8:99:c4:8e:97:36"
});
db["kuznia_DATASIZE:300_STEP:1_1_DEFAULT"].insert({
	"_id" : ObjectId("5595053b63f9130dc6bc0a2e"),
	"STATISTICS" : {
		"PERCENTILE - 90" : -86,
		"MIN" : NumberLong(-86),
		"STANDARD_DEVIATION" : 0,
		"PERCENTILE - 20" : -86,
		"PERCENTILE - 10" : -86,
		"MAX" : NumberLong(-86),
		"PERCENTILE - 70" : -86,
		"PERCENTILE - 50" : -86,
		"MODE" : NumberLong(-86),
		"MEDIANA" : -86,
		"MEAN" : -86
	},
	"HASH" : "DEFAULT",
	"SSID" : "ParkWielokulturowy",
	"RSSI_DATA" : [
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86)
	],
	"TIMESTAMP" : "2015-07-02:11-24-41.861",
	"POSITIONS" : [
		NumberLong(0),
		NumberLong(0)
	],
	"STEP" : [
		NumberLong(1),
		NumberLong(1)
	],
	"PLACE" : "kuznia",
	"MODE" : "FEED_MAP",
	"IP_PHONE" : "192.168.1.100",
	"RSSI_AVG_TIME" : "5753802",
	"MAC_AP" : "28:80:23:2a:7e:10",
	"DATA_SIZE" : NumberLong(300),
	"MAC_PHONE" : "e8:99:c4:8e:97:36"
});
db["kuznia_DATASIZE:300_STEP:1_1_DEFAULT"].insert({
	"_id" : ObjectId("5595053b63f9130dc6bc0a2f"),
	"STATISTICS" : {
		"PERCENTILE - 90" : -80,
		"MIN" : NumberLong(-80),
		"STANDARD_DEVIATION" : 0,
		"PERCENTILE - 20" : -80,
		"PERCENTILE - 10" : -80,
		"MAX" : NumberLong(-80),
		"PERCENTILE - 70" : -80,
		"PERCENTILE - 50" : -80,
		"MODE" : NumberLong(-80),
		"MEDIANA" : -80,
		"MEAN" : -80
	},
	"HASH" : "DEFAULT",
	"SSID" : "wok-down",
	"RSSI_DATA" : [
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80)
	],
	"TIMESTAMP" : "2015-07-02:11-24-41.863",
	"POSITIONS" : [
		NumberLong(0),
		NumberLong(0)
	],
	"STEP" : [
		NumberLong(1),
		NumberLong(1)
	],
	"PLACE" : "kuznia",
	"MODE" : "FEED_MAP",
	"IP_PHONE" : "192.168.1.100",
	"RSSI_AVG_TIME" : "5753802",
	"MAC_AP" : "e8:94:f6:3d:10:58",
	"DATA_SIZE" : NumberLong(300),
	"MAC_PHONE" : "e8:99:c4:8e:97:36"
});
db["kuznia_DATASIZE:300_STEP:1_1_DEFAULT"].insert({
	"_id" : ObjectId("5595053c63f9130dc6bc0a30"),
	"STATISTICS" : {
		"PERCENTILE - 90" : -84,
		"MIN" : NumberLong(-84),
		"STANDARD_DEVIATION" : 0,
		"PERCENTILE - 20" : -84,
		"PERCENTILE - 10" : -84,
		"MAX" : NumberLong(-84),
		"PERCENTILE - 70" : -84,
		"PERCENTILE - 50" : -84,
		"MODE" : NumberLong(-84),
		"MEDIANA" : -84,
		"MEAN" : -84
	},
	"HASH" : "DEFAULT",
	"SSID" : "PWSK",
	"RSSI_DATA" : [
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84)
	],
	"TIMESTAMP" : "2015-07-02:11-24-41.864",
	"POSITIONS" : [
		NumberLong(0),
		NumberLong(0)
	],
	"STEP" : [
		NumberLong(1),
		NumberLong(1)
	],
	"PLACE" : "kuznia",
	"MODE" : "FEED_MAP",
	"IP_PHONE" : "192.168.1.100",
	"RSSI_AVG_TIME" : "5753802",
	"MAC_AP" : "28:80:23:28:7e:81",
	"DATA_SIZE" : NumberLong(300),
	"MAC_PHONE" : "e8:99:c4:8e:97:36"
});
db["kuznia_DATASIZE:300_STEP:1_1_DEFAULT"].insert({
	"_id" : ObjectId("5595053c63f9130dc6bc0a31"),
	"STATISTICS" : {
		"PERCENTILE - 90" : -85,
		"MIN" : NumberLong(-85),
		"STANDARD_DEVIATION" : 0,
		"PERCENTILE - 20" : -85,
		"PERCENTILE - 10" : -85,
		"MAX" : NumberLong(-85),
		"PERCENTILE - 70" : -85,
		"PERCENTILE - 50" : -85,
		"MODE" : NumberLong(-85),
		"MEDIANA" : -85,
		"MEAN" : -85
	},
	"HASH" : "DEFAULT",
	"SSID" : "ParkWielokulturowy",
	"RSSI_DATA" : [
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85)
	],
	"TIMESTAMP" : "2015-07-02:11-24-41.865",
	"POSITIONS" : [
		NumberLong(0),
		NumberLong(0)
	],
	"STEP" : [
		NumberLong(1),
		NumberLong(1)
	],
	"PLACE" : "kuznia",
	"MODE" : "FEED_MAP",
	"IP_PHONE" : "192.168.1.100",
	"RSSI_AVG_TIME" : "5753802",
	"MAC_AP" : "28:80:23:28:7e:80",
	"DATA_SIZE" : NumberLong(300),
	"MAC_PHONE" : "e8:99:c4:8e:97:36"
});
db["kuznia_DATASIZE:300_STEP:1_1_DEFAULT"].insert({
	"_id" : ObjectId("5595053c63f9130dc6bc0a32"),
	"STATISTICS" : {
		"PERCENTILE - 90" : -81,
		"MIN" : NumberLong(-81),
		"STANDARD_DEVIATION" : 0,
		"PERCENTILE - 20" : -81,
		"PERCENTILE - 10" : -81,
		"MAX" : NumberLong(-81),
		"PERCENTILE - 70" : -81,
		"PERCENTILE - 50" : -81,
		"MODE" : NumberLong(-81),
		"MEDIANA" : -81,
		"MEAN" : -81
	},
	"HASH" : "DEFAULT",
	"SSID" : "ParkWielokulturowy",
	"RSSI_DATA" : [
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81)
	],
	"TIMESTAMP" : "2015-07-02:11-32-28.130",
	"POSITIONS" : [
		NumberLong(0),
		NumberLong(0)
	],
	"STEP" : [
		NumberLong(1),
		NumberLong(1)
	],
	"PLACE" : "kuznia",
	"MODE" : "FEED_MAP",
	"IP_PHONE" : "192.168.1.100",
	"RSSI_AVG_TIME" : "5753802",
	"MAC_AP" : "28:80:23:28:8a:00",
	"DATA_SIZE" : NumberLong(300),
	"MAC_PHONE" : "e8:99:c4:8e:97:36"
});
db["kuznia_DATASIZE:300_STEP:1_1_DEFAULT"].insert({
	"_id" : ObjectId("5595053c63f9130dc6bc0a33"),
	"STATISTICS" : {
		"PERCENTILE - 90" : -83,
		"MIN" : NumberLong(-83),
		"STANDARD_DEVIATION" : 0,
		"PERCENTILE - 20" : -83,
		"PERCENTILE - 10" : -83,
		"MAX" : NumberLong(-83),
		"PERCENTILE - 70" : -83,
		"PERCENTILE - 50" : -83,
		"MODE" : NumberLong(-83),
		"MEDIANA" : -83,
		"MEAN" : -83
	},
	"HASH" : "DEFAULT",
	"SSID" : "",
	"RSSI_DATA" : [
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83)
	],
	"TIMESTAMP" : "2015-07-02:11-32-28.133",
	"POSITIONS" : [
		NumberLong(0),
		NumberLong(0)
	],
	"STEP" : [
		NumberLong(1),
		NumberLong(1)
	],
	"PLACE" : "kuznia",
	"MODE" : "FEED_MAP",
	"IP_PHONE" : "192.168.1.100",
	"RSSI_AVG_TIME" : "5753802",
	"MAC_AP" : "00:1a:70:a2:61:b0",
	"DATA_SIZE" : NumberLong(300),
	"MAC_PHONE" : "e8:99:c4:8e:97:36"
});
db["kuznia_DATASIZE:300_STEP:1_1_DEFAULT"].insert({
	"_id" : ObjectId("5595053c63f9130dc6bc0a34"),
	"STATISTICS" : {
		"PERCENTILE - 90" : -83,
		"MIN" : NumberLong(-83),
		"STANDARD_DEVIATION" : 0,
		"PERCENTILE - 20" : -83,
		"PERCENTILE - 10" : -83,
		"MAX" : NumberLong(-83),
		"PERCENTILE - 70" : -83,
		"PERCENTILE - 50" : -83,
		"MODE" : NumberLong(-83),
		"MEDIANA" : -83,
		"MEAN" : -83
	},
	"HASH" : "DEFAULT",
	"SSID" : "",
	"RSSI_DATA" : [
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83),
		NumberLong(-83)
	],
	"TIMESTAMP" : "2015-07-02:11-32-28.139",
	"POSITIONS" : [
		NumberLong(0),
		NumberLong(0)
	],
	"STEP" : [
		NumberLong(1),
		NumberLong(1)
	],
	"PLACE" : "kuznia",
	"MODE" : "FEED_MAP",
	"IP_PHONE" : "192.168.1.100",
	"RSSI_AVG_TIME" : "5753802",
	"MAC_AP" : "c4:6e:1f:35:c4:8c",
	"DATA_SIZE" : NumberLong(300),
	"MAC_PHONE" : "e8:99:c4:8e:97:36"
});
db["kuznia_DATASIZE:300_STEP:1_1_DEFAULT"].insert({
	"_id" : ObjectId("5595053c63f9130dc6bc0a35"),
	"STATISTICS" : {
		"PERCENTILE - 90" : -86,
		"MIN" : NumberLong(-86),
		"STANDARD_DEVIATION" : 0,
		"PERCENTILE - 20" : -86,
		"PERCENTILE - 10" : -86,
		"MAX" : NumberLong(-86),
		"PERCENTILE - 70" : -86,
		"PERCENTILE - 50" : -86,
		"MODE" : NumberLong(-86),
		"MEDIANA" : -86,
		"MEAN" : -86
	},
	"HASH" : "DEFAULT",
	"SSID" : "ParkWielokulturowy",
	"RSSI_DATA" : [
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86)
	],
	"TIMESTAMP" : "2015-07-02:11-32-28.144",
	"POSITIONS" : [
		NumberLong(0),
		NumberLong(0)
	],
	"STEP" : [
		NumberLong(1),
		NumberLong(1)
	],
	"PLACE" : "kuznia",
	"MODE" : "FEED_MAP",
	"IP_PHONE" : "192.168.1.100",
	"RSSI_AVG_TIME" : "5753802",
	"MAC_AP" : "28:80:23:2a:7e:10",
	"DATA_SIZE" : NumberLong(300),
	"MAC_PHONE" : "e8:99:c4:8e:97:36"
});
db["kuznia_DATASIZE:300_STEP:1_1_DEFAULT"].insert({
	"_id" : ObjectId("5595053d63f9130dc6bc0a36"),
	"STATISTICS" : {
		"PERCENTILE - 90" : -73,
		"MIN" : NumberLong(-73),
		"STANDARD_DEVIATION" : 0,
		"PERCENTILE - 20" : -73,
		"PERCENTILE - 10" : -73,
		"MAX" : NumberLong(-73),
		"PERCENTILE - 70" : -73,
		"PERCENTILE - 50" : -73,
		"MODE" : NumberLong(-73),
		"MEDIANA" : -73,
		"MEAN" : -73
	},
	"HASH" : "DEFAULT",
	"SSID" : "PWSK",
	"RSSI_DATA" : [
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73)
	],
	"TIMESTAMP" : "2015-07-02:11-32-28.150",
	"POSITIONS" : [
		NumberLong(0),
		NumberLong(0)
	],
	"STEP" : [
		NumberLong(1),
		NumberLong(1)
	],
	"PLACE" : "kuznia",
	"MODE" : "FEED_MAP",
	"IP_PHONE" : "192.168.1.100",
	"RSSI_AVG_TIME" : "5753802",
	"MAC_AP" : "28:80:23:28:7e:91",
	"DATA_SIZE" : NumberLong(300),
	"MAC_PHONE" : "e8:99:c4:8e:97:36"
});
db["kuznia_DATASIZE:300_STEP:1_1_DEFAULT"].insert({
	"_id" : ObjectId("5595053d63f9130dc6bc0a37"),
	"STATISTICS" : {
		"PERCENTILE - 90" : -85,
		"MIN" : NumberLong(-85),
		"STANDARD_DEVIATION" : 0,
		"PERCENTILE - 20" : -85,
		"PERCENTILE - 10" : -85,
		"MAX" : NumberLong(-85),
		"PERCENTILE - 70" : -85,
		"PERCENTILE - 50" : -85,
		"MODE" : NumberLong(-85),
		"MEDIANA" : -85,
		"MEAN" : -85
	},
	"HASH" : "DEFAULT",
	"SSID" : "PWSK",
	"RSSI_DATA" : [
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85)
	],
	"TIMESTAMP" : "2015-07-02:11-32-28.151",
	"POSITIONS" : [
		NumberLong(0),
		NumberLong(0)
	],
	"STEP" : [
		NumberLong(1),
		NumberLong(1)
	],
	"PLACE" : "kuznia",
	"MODE" : "FEED_MAP",
	"IP_PHONE" : "192.168.1.100",
	"RSSI_AVG_TIME" : "5753802",
	"MAC_AP" : "28:80:23:28:8a:11",
	"DATA_SIZE" : NumberLong(300),
	"MAC_PHONE" : "e8:99:c4:8e:97:36"
});
db["kuznia_DATASIZE:300_STEP:1_1_DEFAULT"].insert({
	"_id" : ObjectId("5595053d63f9130dc6bc0a38"),
	"STATISTICS" : {
		"PERCENTILE - 90" : -85,
		"MIN" : NumberLong(-85),
		"STANDARD_DEVIATION" : 0,
		"PERCENTILE - 20" : -85,
		"PERCENTILE - 10" : -85,
		"MAX" : NumberLong(-85),
		"PERCENTILE - 70" : -85,
		"PERCENTILE - 50" : -85,
		"MODE" : NumberLong(-85),
		"MEDIANA" : -85,
		"MEAN" : -85
	},
	"HASH" : "DEFAULT",
	"SSID" : "PWSK_K",
	"RSSI_DATA" : [
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85)
	],
	"TIMESTAMP" : "2015-07-02:11-32-28.153",
	"POSITIONS" : [
		NumberLong(0),
		NumberLong(0)
	],
	"STEP" : [
		NumberLong(1),
		NumberLong(1)
	],
	"PLACE" : "kuznia",
	"MODE" : "FEED_MAP",
	"IP_PHONE" : "192.168.1.100",
	"RSSI_AVG_TIME" : "5753802",
	"MAC_AP" : "28:80:23:28:7e:82",
	"DATA_SIZE" : NumberLong(300),
	"MAC_PHONE" : "e8:99:c4:8e:97:36"
});
db["kuznia_DATASIZE:300_STEP:1_1_DEFAULT"].insert({
	"_id" : ObjectId("5595054663f9130dc6bc0a39"),
	"STATISTICS" : {
		"PERCENTILE - 90" : -85,
		"MIN" : NumberLong(-85),
		"STANDARD_DEVIATION" : 0,
		"PERCENTILE - 20" : -85,
		"PERCENTILE - 10" : -85,
		"MAX" : NumberLong(-85),
		"PERCENTILE - 70" : -85,
		"PERCENTILE - 50" : -85,
		"MODE" : NumberLong(-85),
		"MEDIANA" : -85,
		"MEAN" : -85
	},
	"HASH" : "DEFAULT",
	"SSID" : "ParkWielokulturowy",
	"RSSI_DATA" : [
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85)
	],
	"TIMESTAMP" : "2015-07-02:11-32-28.154",
	"POSITIONS" : [
		NumberLong(0),
		NumberLong(0)
	],
	"STEP" : [
		NumberLong(1),
		NumberLong(1)
	],
	"PLACE" : "kuznia",
	"MODE" : "FEED_MAP",
	"IP_PHONE" : "192.168.1.100",
	"RSSI_AVG_TIME" : "5753802",
	"MAC_AP" : "28:80:23:28:8a:b0",
	"DATA_SIZE" : NumberLong(300),
	"MAC_PHONE" : "e8:99:c4:8e:97:36"
});
db["kuznia_DATASIZE:300_STEP:1_1_DEFAULT"].insert({
	"_id" : ObjectId("5595061263f9130dc6bc0a3a"),
	"STATISTICS" : {
		"PERCENTILE - 90" : -58,
		"MIN" : NumberLong(-58),
		"STANDARD_DEVIATION" : 0,
		"PERCENTILE - 20" : -58,
		"PERCENTILE - 10" : -58,
		"MAX" : NumberLong(-58),
		"PERCENTILE - 70" : -58,
		"PERCENTILE - 50" : -58,
		"MODE" : NumberLong(-58),
		"MEDIANA" : -58,
		"MEAN" : -58
	},
	"HASH" : "DEFAULT",
	"SSID" : "TP-LINK_489B26",
	"RSSI_DATA" : [
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58)
	],
	"TIMESTAMP" : "2015-07-02:11-36-03.298",
	"POSITIONS" : [
		NumberLong(0),
		NumberLong(0)
	],
	"STEP" : [
		NumberLong(1),
		NumberLong(1)
	],
	"PLACE" : "kuznia",
	"MODE" : "FEED_MAP",
	"IP_PHONE" : "192.168.1.100",
	"RSSI_AVG_TIME" : "6859657",
	"MAC_AP" : "f8:d1:11:48:9b:26",
	"DATA_SIZE" : NumberLong(300),
	"MAC_PHONE" : "e8:99:c4:8e:97:36"
});
db["kuznia_DATASIZE:300_STEP:1_1_DEFAULT"].insert({
	"_id" : ObjectId("5595061263f9130dc6bc0a3b"),
	"STATISTICS" : {
		"PERCENTILE - 90" : -20,
		"MIN" : NumberLong(-20),
		"STANDARD_DEVIATION" : 0,
		"PERCENTILE - 20" : -20,
		"PERCENTILE - 10" : -20,
		"MAX" : NumberLong(-20),
		"PERCENTILE - 70" : -20,
		"PERCENTILE - 50" : -20,
		"MODE" : NumberLong(-20),
		"MEDIANA" : -20,
		"MEAN" : -20
	},
	"HASH" : "DEFAULT",
	"SSID" : "PinGwin",
	"RSSI_DATA" : [
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20),
		NumberLong(-20)
	],
	"TIMESTAMP" : "2015-07-02:11-36-03.300",
	"POSITIONS" : [
		NumberLong(0),
		NumberLong(0)
	],
	"STEP" : [
		NumberLong(1),
		NumberLong(1)
	],
	"PLACE" : "kuznia",
	"MODE" : "FEED_MAP",
	"IP_PHONE" : "192.168.1.100",
	"RSSI_AVG_TIME" : "6859657",
	"MAC_AP" : "68:7f:74:09:f6:8b",
	"DATA_SIZE" : NumberLong(300),
	"MAC_PHONE" : "e8:99:c4:8e:97:36"
});
db["kuznia_DATASIZE:300_STEP:1_1_DEFAULT"].insert({
	"_id" : ObjectId("5595061363f9130dc6bc0a3c"),
	"STATISTICS" : {
		"PERCENTILE - 90" : -73,
		"MIN" : NumberLong(-73),
		"STANDARD_DEVIATION" : 0,
		"PERCENTILE - 20" : -73,
		"PERCENTILE - 10" : -73,
		"MAX" : NumberLong(-73),
		"PERCENTILE - 70" : -73,
		"PERCENTILE - 50" : -73,
		"MODE" : NumberLong(-73),
		"MEDIANA" : -73,
		"MEAN" : -73
	},
	"HASH" : "DEFAULT",
	"SSID" : "PWSK",
	"RSSI_DATA" : [
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73)
	],
	"TIMESTAMP" : "2015-07-02:11-36-03.301",
	"POSITIONS" : [
		NumberLong(0),
		NumberLong(0)
	],
	"STEP" : [
		NumberLong(1),
		NumberLong(1)
	],
	"PLACE" : "kuznia",
	"MODE" : "FEED_MAP",
	"IP_PHONE" : "192.168.1.100",
	"RSSI_AVG_TIME" : "6859657",
	"MAC_AP" : "28:80:23:28:7e:91",
	"DATA_SIZE" : NumberLong(300),
	"MAC_PHONE" : "e8:99:c4:8e:97:36"
});
db["kuznia_DATASIZE:300_STEP:1_1_DEFAULT"].insert({
	"_id" : ObjectId("5595061363f9130dc6bc0a3d"),
	"STATISTICS" : {
		"PERCENTILE - 90" : -82,
		"MIN" : NumberLong(-82),
		"STANDARD_DEVIATION" : 0,
		"PERCENTILE - 20" : -82,
		"PERCENTILE - 10" : -82,
		"MAX" : NumberLong(-82),
		"PERCENTILE - 70" : -82,
		"PERCENTILE - 50" : -82,
		"MODE" : NumberLong(-82),
		"MEDIANA" : -82,
		"MEAN" : -82
	},
	"HASH" : "DEFAULT",
	"SSID" : "PWSK",
	"RSSI_DATA" : [
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82)
	],
	"TIMESTAMP" : "2015-07-02:11-36-03.303",
	"POSITIONS" : [
		NumberLong(0),
		NumberLong(0)
	],
	"STEP" : [
		NumberLong(1),
		NumberLong(1)
	],
	"PLACE" : "kuznia",
	"MODE" : "FEED_MAP",
	"IP_PHONE" : "192.168.1.100",
	"RSSI_AVG_TIME" : "6859657",
	"MAC_AP" : "28:80:23:28:8a:b1",
	"DATA_SIZE" : NumberLong(300),
	"MAC_PHONE" : "e8:99:c4:8e:97:36"
});
db["kuznia_DATASIZE:300_STEP:1_1_DEFAULT"].insert({
	"_id" : ObjectId("5595061363f9130dc6bc0a3e"),
	"STATISTICS" : {
		"PERCENTILE - 90" : -85,
		"MIN" : NumberLong(-85),
		"STANDARD_DEVIATION" : 0,
		"PERCENTILE - 20" : -85,
		"PERCENTILE - 10" : -85,
		"MAX" : NumberLong(-85),
		"PERCENTILE - 70" : -85,
		"PERCENTILE - 50" : -85,
		"MODE" : NumberLong(-85),
		"MEDIANA" : -85,
		"MEAN" : -85
	},
	"HASH" : "DEFAULT",
	"SSID" : "wok-down",
	"RSSI_DATA" : [
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85)
	],
	"TIMESTAMP" : "2015-07-02:11-36-03.304",
	"POSITIONS" : [
		NumberLong(0),
		NumberLong(0)
	],
	"STEP" : [
		NumberLong(1),
		NumberLong(1)
	],
	"PLACE" : "kuznia",
	"MODE" : "FEED_MAP",
	"IP_PHONE" : "192.168.1.100",
	"RSSI_AVG_TIME" : "6859657",
	"MAC_AP" : "e8:94:f6:3d:10:58",
	"DATA_SIZE" : NumberLong(300),
	"MAC_PHONE" : "e8:99:c4:8e:97:36"
});
db["kuznia_DATASIZE:300_STEP:1_1_DEFAULT"].insert({
	"_id" : ObjectId("5595061363f9130dc6bc0a3f"),
	"STATISTICS" : {
		"PERCENTILE - 90" : -85,
		"MIN" : NumberLong(-85),
		"STANDARD_DEVIATION" : 0,
		"PERCENTILE - 20" : -85,
		"PERCENTILE - 10" : -85,
		"MAX" : NumberLong(-85),
		"PERCENTILE - 70" : -85,
		"PERCENTILE - 50" : -85,
		"MODE" : NumberLong(-85),
		"MEDIANA" : -85,
		"MEAN" : -85
	},
	"HASH" : "DEFAULT",
	"SSID" : "PWSK",
	"RSSI_DATA" : [
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85)
	],
	"TIMESTAMP" : "2015-07-02:11-36-03.305",
	"POSITIONS" : [
		NumberLong(0),
		NumberLong(0)
	],
	"STEP" : [
		NumberLong(1),
		NumberLong(1)
	],
	"PLACE" : "kuznia",
	"MODE" : "FEED_MAP",
	"IP_PHONE" : "192.168.1.100",
	"RSSI_AVG_TIME" : "6859657",
	"MAC_AP" : "28:80:23:28:8a:11",
	"DATA_SIZE" : NumberLong(300),
	"MAC_PHONE" : "e8:99:c4:8e:97:36"
});
db["kuznia_DATASIZE:300_STEP:1_1_DEFAULT"].insert({
	"_id" : ObjectId("5595061363f9130dc6bc0a40"),
	"STATISTICS" : {
		"PERCENTILE - 90" : -79,
		"MIN" : NumberLong(-79),
		"STANDARD_DEVIATION" : 0,
		"PERCENTILE - 20" : -79,
		"PERCENTILE - 10" : -79,
		"MAX" : NumberLong(-79),
		"PERCENTILE - 70" : -79,
		"PERCENTILE - 50" : -79,
		"MODE" : NumberLong(-79),
		"MEDIANA" : -79,
		"MEAN" : -79
	},
	"HASH" : "DEFAULT",
	"SSID" : "PWSK_K",
	"RSSI_DATA" : [
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79)
	],
	"TIMESTAMP" : "2015-07-02:11-36-03.307",
	"POSITIONS" : [
		NumberLong(0),
		NumberLong(0)
	],
	"STEP" : [
		NumberLong(1),
		NumberLong(1)
	],
	"PLACE" : "kuznia",
	"MODE" : "FEED_MAP",
	"IP_PHONE" : "192.168.1.100",
	"RSSI_AVG_TIME" : "6859657",
	"MAC_AP" : "28:80:23:28:8a:02",
	"DATA_SIZE" : NumberLong(300),
	"MAC_PHONE" : "e8:99:c4:8e:97:36"
});
db["kuznia_DATASIZE:300_STEP:1_1_DEFAULT"].insert({
	"_id" : ObjectId("5595061363f9130dc6bc0a41"),
	"STATISTICS" : {
		"PERCENTILE - 90" : -81,
		"MIN" : NumberLong(-81),
		"STANDARD_DEVIATION" : 0,
		"PERCENTILE - 20" : -81,
		"PERCENTILE - 10" : -81,
		"MAX" : NumberLong(-81),
		"PERCENTILE - 70" : -81,
		"PERCENTILE - 50" : -81,
		"MODE" : NumberLong(-81),
		"MEDIANA" : -81,
		"MEAN" : -81
	},
	"HASH" : "DEFAULT",
	"SSID" : "PWSK",
	"RSSI_DATA" : [
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81)
	],
	"TIMESTAMP" : "2015-07-02:11-36-03.308",
	"POSITIONS" : [
		NumberLong(0),
		NumberLong(0)
	],
	"STEP" : [
		NumberLong(1),
		NumberLong(1)
	],
	"PLACE" : "kuznia",
	"MODE" : "FEED_MAP",
	"IP_PHONE" : "192.168.1.100",
	"RSSI_AVG_TIME" : "6859657",
	"MAC_AP" : "28:80:23:28:8a:01",
	"DATA_SIZE" : NumberLong(300),
	"MAC_PHONE" : "e8:99:c4:8e:97:36"
});
db["kuznia_DATASIZE:300_STEP:1_1_DEFAULT"].insert({
	"_id" : ObjectId("5595061363f9130dc6bc0a42"),
	"STATISTICS" : {
		"PERCENTILE - 90" : -84,
		"MIN" : NumberLong(-84),
		"STANDARD_DEVIATION" : 0,
		"PERCENTILE - 20" : -84,
		"PERCENTILE - 10" : -84,
		"MAX" : NumberLong(-84),
		"PERCENTILE - 70" : -84,
		"PERCENTILE - 50" : -84,
		"MODE" : NumberLong(-84),
		"MEDIANA" : -84,
		"MEAN" : -84
	},
	"HASH" : "DEFAULT",
	"SSID" : "PWSK",
	"RSSI_DATA" : [
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84),
		NumberLong(-84)
	],
	"TIMESTAMP" : "2015-07-02:11-36-03.310",
	"POSITIONS" : [
		NumberLong(0),
		NumberLong(0)
	],
	"STEP" : [
		NumberLong(1),
		NumberLong(1)
	],
	"PLACE" : "kuznia",
	"MODE" : "FEED_MAP",
	"IP_PHONE" : "192.168.1.100",
	"RSSI_AVG_TIME" : "6859657",
	"MAC_AP" : "28:80:23:28:7e:81",
	"DATA_SIZE" : NumberLong(300),
	"MAC_PHONE" : "e8:99:c4:8e:97:36"
});
db["kuznia_DATASIZE:300_STEP:1_1_DEFAULT"].insert({
	"_id" : ObjectId("5595061363f9130dc6bc0a43"),
	"STATISTICS" : {
		"PERCENTILE - 90" : -86,
		"MIN" : NumberLong(-86),
		"STANDARD_DEVIATION" : 0,
		"PERCENTILE - 20" : -86,
		"PERCENTILE - 10" : -86,
		"MAX" : NumberLong(-86),
		"PERCENTILE - 70" : -86,
		"PERCENTILE - 50" : -86,
		"MODE" : NumberLong(-86),
		"MEDIANA" : -86,
		"MEAN" : -86
	},
	"HASH" : "DEFAULT",
	"SSID" : "PWSK_K",
	"RSSI_DATA" : [
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86),
		NumberLong(-86)
	],
	"TIMESTAMP" : "2015-07-02:11-36-03.311",
	"POSITIONS" : [
		NumberLong(0),
		NumberLong(0)
	],
	"STEP" : [
		NumberLong(1),
		NumberLong(1)
	],
	"PLACE" : "kuznia",
	"MODE" : "FEED_MAP",
	"IP_PHONE" : "192.168.1.100",
	"RSSI_AVG_TIME" : "6859657",
	"MAC_AP" : "28:80:23:28:7e:82",
	"DATA_SIZE" : NumberLong(300),
	"MAC_PHONE" : "e8:99:c4:8e:97:36"
});
db["kuznia_DATASIZE:300_STEP:1_1_DEFAULT"].insert({
	"_id" : ObjectId("5595061363f9130dc6bc0a44"),
	"STATISTICS" : {
		"PERCENTILE - 90" : -82,
		"MIN" : NumberLong(-82),
		"STANDARD_DEVIATION" : 0,
		"PERCENTILE - 20" : -82,
		"PERCENTILE - 10" : -82,
		"MAX" : NumberLong(-82),
		"PERCENTILE - 70" : -82,
		"PERCENTILE - 50" : -82,
		"MODE" : NumberLong(-82),
		"MEDIANA" : -82,
		"MEAN" : -82
	},
	"HASH" : "DEFAULT",
	"SSID" : "ParkWielokulturowy",
	"RSSI_DATA" : [
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82)
	],
	"TIMESTAMP" : "2015-07-02:11-36-03.313",
	"POSITIONS" : [
		NumberLong(0),
		NumberLong(0)
	],
	"STEP" : [
		NumberLong(1),
		NumberLong(1)
	],
	"PLACE" : "kuznia",
	"MODE" : "FEED_MAP",
	"IP_PHONE" : "192.168.1.100",
	"RSSI_AVG_TIME" : "6859657",
	"MAC_AP" : "28:80:23:28:8a:b0",
	"DATA_SIZE" : NumberLong(300),
	"MAC_PHONE" : "e8:99:c4:8e:97:36"
});
db["kuznia_DATASIZE:300_STEP:1_1_DEFAULT"].insert({
	"_id" : ObjectId("5595061363f9130dc6bc0a45"),
	"STATISTICS" : {
		"PERCENTILE - 90" : -80,
		"MIN" : NumberLong(-80),
		"STANDARD_DEVIATION" : 0,
		"PERCENTILE - 20" : -80,
		"PERCENTILE - 10" : -80,
		"MAX" : NumberLong(-80),
		"PERCENTILE - 70" : -80,
		"PERCENTILE - 50" : -80,
		"MODE" : NumberLong(-80),
		"MEDIANA" : -80,
		"MEAN" : -80
	},
	"HASH" : "DEFAULT",
	"SSID" : "ParkWielokulturowy",
	"RSSI_DATA" : [
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80)
	],
	"TIMESTAMP" : "2015-07-02:11-36-03.314",
	"POSITIONS" : [
		NumberLong(0),
		NumberLong(0)
	],
	"STEP" : [
		NumberLong(1),
		NumberLong(1)
	],
	"PLACE" : "kuznia",
	"MODE" : "FEED_MAP",
	"IP_PHONE" : "192.168.1.100",
	"RSSI_AVG_TIME" : "6859657",
	"MAC_AP" : "28:80:23:28:8a:00",
	"DATA_SIZE" : NumberLong(300),
	"MAC_PHONE" : "e8:99:c4:8e:97:36"
});
db["kuznia_DATASIZE:300_STEP:1_1_DEFAULT"].insert({
	"_id" : ObjectId("5595061363f9130dc6bc0a46"),
	"STATISTICS" : {
		"PERCENTILE - 90" : -82,
		"MIN" : NumberLong(-82),
		"STANDARD_DEVIATION" : 0,
		"PERCENTILE - 20" : -82,
		"PERCENTILE - 10" : -82,
		"MAX" : NumberLong(-82),
		"PERCENTILE - 70" : -82,
		"PERCENTILE - 50" : -82,
		"MODE" : NumberLong(-82),
		"MEDIANA" : -82,
		"MEAN" : -82
	},
	"HASH" : "DEFAULT",
	"SSID" : "ParkWielokulturowy",
	"RSSI_DATA" : [
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82)
	],
	"TIMESTAMP" : "2015-07-02:11-36-03.316",
	"POSITIONS" : [
		NumberLong(0),
		NumberLong(0)
	],
	"STEP" : [
		NumberLong(1),
		NumberLong(1)
	],
	"PLACE" : "kuznia",
	"MODE" : "FEED_MAP",
	"IP_PHONE" : "192.168.1.100",
	"RSSI_AVG_TIME" : "6859657",
	"MAC_AP" : "28:80:23:28:7e:80",
	"DATA_SIZE" : NumberLong(300),
	"MAC_PHONE" : "e8:99:c4:8e:97:36"
});
db["kuznia_DATASIZE:300_STEP:1_1_DEFAULT"].insert({
	"_id" : ObjectId("5595061363f9130dc6bc0a47"),
	"STATISTICS" : {
		"PERCENTILE - 90" : -64,
		"MIN" : NumberLong(-64),
		"STANDARD_DEVIATION" : 0,
		"PERCENTILE - 20" : -64,
		"PERCENTILE - 10" : -64,
		"MAX" : NumberLong(-64),
		"PERCENTILE - 70" : -64,
		"PERCENTILE - 50" : -64,
		"MODE" : NumberLong(-64),
		"MEDIANA" : -64,
		"MEAN" : -64
	},
	"HASH" : "DEFAULT",
	"SSID" : "PWSK_K",
	"RSSI_DATA" : [
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64)
	],
	"TIMESTAMP" : "2015-07-02:11-36-03.317",
	"POSITIONS" : [
		NumberLong(0),
		NumberLong(0)
	],
	"STEP" : [
		NumberLong(1),
		NumberLong(1)
	],
	"PLACE" : "kuznia",
	"MODE" : "FEED_MAP",
	"IP_PHONE" : "192.168.1.100",
	"RSSI_AVG_TIME" : "6859657",
	"MAC_AP" : "28:80:23:28:7e:92",
	"DATA_SIZE" : NumberLong(300),
	"MAC_PHONE" : "e8:99:c4:8e:97:36"
});
db["kuznia_DATASIZE:300_STEP:1_1_DEFAULT"].insert({
	"_id" : ObjectId("5595061363f9130dc6bc0a48"),
	"STATISTICS" : {
		"PERCENTILE - 90" : -70,
		"MIN" : NumberLong(-70),
		"STANDARD_DEVIATION" : 0,
		"PERCENTILE - 20" : -70,
		"PERCENTILE - 10" : -70,
		"MAX" : NumberLong(-70),
		"PERCENTILE - 70" : -70,
		"PERCENTILE - 50" : -70,
		"MODE" : NumberLong(-70),
		"MEDIANA" : -70,
		"MEAN" : -70
	},
	"HASH" : "DEFAULT",
	"SSID" : "",
	"RSSI_DATA" : [
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70),
		NumberLong(-70)
	],
	"TIMESTAMP" : "2015-07-02:11-36-03.318",
	"POSITIONS" : [
		NumberLong(0),
		NumberLong(0)
	],
	"STEP" : [
		NumberLong(1),
		NumberLong(1)
	],
	"PLACE" : "kuznia",
	"MODE" : "FEED_MAP",
	"IP_PHONE" : "192.168.1.100",
	"RSSI_AVG_TIME" : "6859657",
	"MAC_AP" : "00:1a:70:a2:61:b0",
	"DATA_SIZE" : NumberLong(300),
	"MAC_PHONE" : "e8:99:c4:8e:97:36"
});
db["kuznia_DATASIZE:300_STEP:1_1_DEFAULT"].insert({
	"_id" : ObjectId("5595061463f9130dc6bc0a49"),
	"STATISTICS" : {
		"PERCENTILE - 90" : -73,
		"MIN" : NumberLong(-73),
		"STANDARD_DEVIATION" : 0,
		"PERCENTILE - 20" : -73,
		"PERCENTILE - 10" : -73,
		"MAX" : NumberLong(-73),
		"PERCENTILE - 70" : -73,
		"PERCENTILE - 50" : -73,
		"MODE" : NumberLong(-73),
		"MEDIANA" : -73,
		"MEAN" : -73
	},
	"HASH" : "DEFAULT",
	"SSID" : "PWSK_K",
	"RSSI_DATA" : [
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73)
	],
	"TIMESTAMP" : "2015-07-02:11-36-03.320",
	"POSITIONS" : [
		NumberLong(0),
		NumberLong(0)
	],
	"STEP" : [
		NumberLong(1),
		NumberLong(1)
	],
	"PLACE" : "kuznia",
	"MODE" : "FEED_MAP",
	"IP_PHONE" : "192.168.1.100",
	"RSSI_AVG_TIME" : "6859657",
	"MAC_AP" : "28:80:23:28:8a:12",
	"DATA_SIZE" : NumberLong(300),
	"MAC_PHONE" : "e8:99:c4:8e:97:36"
});
db["kuznia_DATASIZE:300_STEP:1_1_DEFAULT"].insert({
	"_id" : ObjectId("5595061463f9130dc6bc0a4a"),
	"STATISTICS" : {
		"PERCENTILE - 90" : -79,
		"MIN" : NumberLong(-79),
		"STANDARD_DEVIATION" : 0,
		"PERCENTILE - 20" : -79,
		"PERCENTILE - 10" : -79,
		"MAX" : NumberLong(-79),
		"PERCENTILE - 70" : -79,
		"PERCENTILE - 50" : -79,
		"MODE" : NumberLong(-79),
		"MEDIANA" : -79,
		"MEAN" : -79
	},
	"HASH" : "DEFAULT",
	"SSID" : "PWSK_K",
	"RSSI_DATA" : [
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79)
	],
	"TIMESTAMP" : "2015-07-02:11-36-03.321",
	"POSITIONS" : [
		NumberLong(0),
		NumberLong(0)
	],
	"STEP" : [
		NumberLong(1),
		NumberLong(1)
	],
	"PLACE" : "kuznia",
	"MODE" : "FEED_MAP",
	"IP_PHONE" : "192.168.1.100",
	"RSSI_AVG_TIME" : "6859657",
	"MAC_AP" : "28:80:23:28:8a:b2",
	"DATA_SIZE" : NumberLong(300),
	"MAC_PHONE" : "e8:99:c4:8e:97:36"
});
db["kuznia_DATASIZE:300_STEP:1_1_DEFAULT"].insert({
	"_id" : ObjectId("5595063c63f9130dc6bc0a4b"),
	"STATISTICS" : {
		"PERCENTILE - 90" : 20.46,
		"MIN" : -10.74,
		"STANDARD_DEVIATION" : 13.034222936446913,
		"PERCENTILE - 20" : -9.48,
		"PERCENTILE - 10" : -9.785999999999998,
		"MAX" : 23.4,
		"PERCENTILE - 70" : 19.26,
		"PERCENTILE - 50" : -4.8599997,
		"MODE" : -9.48,
		"MEDIANA" : -5.026666366666667,
		"MEAN" : 1.9877333624444444
	},
	"HASH" : "DEFAULT",
	"MAC_PHONE" : "e8:99:c4:8e:97:36",
	"TIMESTAMP" : "2015-07-02:11-36-43.885",
	"STEP" : [
		NumberLong(1),
		NumberLong(1)
	],
	"PLACE" : "kuznia",
	"MODE" : "FEED_MAP",
	"IP_PHONE" : "192.168.1.100",
	"POSITIONS" : [
		NumberLong(0),
		NumberLong(0)
	],
	"MAGNETIC_AVG_TIME" : "20448",
	"MAGNETIC_DATA" : [
		-2.8799999,
		-10.74,
		20.82,
		-2.8799999,
		-10.08,
		21.18,
		-2.7,
		-9.54,
		22.199999,
		-3.1799998,
		-9.96,
		21.539999,
		-2.9399998,
		-9.719999,
		22.199999,
		-2.8799999,
		-9.48,
		22.26,
		-2.82,
		-9.179999,
		22.439999,
		-2.6399999,
		-9.48,
		22.14,
		-2.58,
		-9.54,
		22.5,
		-2.3999999,
		-9.48,
		22.74,
		-1.9799999,
		-9.48,
		22.74,
		-1.5,
		-9.36,
		22.98,
		-1.1999999,
		-9.24,
		22.92,
		-1.02,
		-9.3,
		22.98,
		-0.96,
		-9.42,
		23.039999,
		-0.9,
		-9.36,
		23.22,
		-0.84,
		-9.24,
		23.4,
		-0.84,
		-9.599999,
		23.22,
		-1.38,
		-9.719999,
		23.039999,
		-1.62,
		-9.78,
		22.8,
		-2.1,
		-10.0199995,
		22.439999,
		-2.34,
		-10.139999,
		22.56,
		-2.58,
		-10.08,
		22.14,
		-3.06,
		-10.139999,
		21.84,
		-3.24,
		-9.96,
		21.3,
		-3.48,
		-9.54,
		21.24,
		-3.3,
		-9.48,
		21.24,
		-3.4199998,
		-9.48,
		21.18,
		-3.6,
		-9.3,
		21.24,
		-3.72,
		-9.12,
		20.939999,
		-3.48,
		-9.42,
		NumberLong(21),
		-3.3,
		-9.66,
		21.119999,
		-3.1799998,
		-9.599999,
		20.88,
		-3.54,
		-9.3,
		20.88,
		-3.36,
		-8.94,
		NumberLong(21),
		-3.1799998,
		-8.94,
		20.88,
		-3.06,
		NumberLong(-9),
		21.119999,
		-3.1799998,
		NumberLong(-9),
		21.119999,
		-3.1799998,
		-8.639999,
		NumberLong(21),
		-3.54,
		-8.46,
		20.64,
		-3.78,
		-8.639999,
		20.76,
		-3.54,
		-8.94,
		20.52,
		-3.84,
		-9.36,
		20.34,
		-4.02,
		-9.3,
		20.64,
		-4.2599998,
		-9.36,
		20.16,
		-3.9599998,
		-9.48,
		19.92,
		-4.08,
		-9.54,
		19.8,
		-4.08,
		-9.48,
		19.68,
		-4.14,
		-9.3,
		19.5,
		-4.3199997,
		-9.179999,
		19.32,
		-4.14,
		-9.059999,
		19.32,
		-3.9599998,
		-9.12,
		19.08,
		-3.9599998,
		-9.059999,
		19.14,
		-4.3199997,
		-9.059999,
		19.32,
		-4.5,
		-9.24,
		19.199999,
		-4.38,
		-9.12,
		19.199999,
		-4.38,
		-9.36,
		19.68,
		-4.68,
		-9.42,
		19.74,
		-4.56,
		-9.42,
		19.74,
		-4.56,
		-9.48,
		19.92,
		-4.5,
		-9.48,
		19.74,
		-4.38,
		-9.36,
		19.8,
		-4.5,
		-9.42,
		19.74,
		-4.5,
		-9.36,
		19.74,
		-4.56,
		-9.3,
		19.5,
		-4.68,
		-9.059999,
		19.26,
		-5.1,
		-9.3,
		19.199999,
		-5.16,
		NumberLong(-9),
		18.96,
		-5.16,
		-9.12,
		19.02,
		-5.2799997,
		NumberLong(-9),
		19.08,
		-5.2799997,
		-9.179999,
		19.32,
		-5.3399997,
		NumberLong(-9),
		19.32,
		-5.46,
		-9.059999,
		19.32,
		-5.46,
		-9.12,
		19.26,
		-5.16,
		NumberLong(-9),
		19.439999,
		-5.2799997,
		-9.12,
		19.619999,
		-5.64,
		-9.12,
		19.8,
		-5.58,
		-9.48,
		19.8,
		-5.7,
		-9.48,
		19.68,
		-5.7,
		-9.54,
		19.5,
		-5.58,
		-9.36,
		19.439999,
		-5.46,
		-9.54,
		19.56,
		-5.4,
		-9.3,
		19.38,
		-5.16,
		-9.24,
		19.32,
		-4.8599997,
		NumberLong(-9),
		19.14,
		-4.68,
		-8.94,
		19.26,
		-4.68,
		-8.76,
		19.26,
		-4.8599997,
		-8.76,
		19.38,
		-4.92,
		-8.82,
		19.439999,
		-4.98,
		-8.76,
		19.68,
		-5.1,
		-8.94,
		19.74,
		-5.2799997,
		-9.24,
		19.74,
		-5.4,
		-9.3,
		19.74,
		-5.3399997,
		-9.42,
		19.68,
		-5.1,
		-9.42,
		19.68,
		-5.16,
		-9.54,
		19.56,
		-4.98,
		-9.599999,
		19.38,
		-5.1,
		-9.599999,
		19.26,
		-4.98,
		-9.54,
		19.26,
		-4.8599997,
		-9.719999,
		19.439999,
		-4.74,
		-9.66,
		19.38,
		-4.68,
		-9.78,
		19.56,
		-4.74,
		-9.719999,
		19.619999,
		-4.5,
		-9.66,
		19.68,
		-4.56,
		-9.84,
		19.8,
		-4.5,
		-9.9,
		19.68,
		-4.7999997,
		-9.96,
		19.619999,
		-4.8599997,
		-9.9,
		19.68,
		-4.98,
		-9.719999,
		19.619999,
		-5.04,
		-9.84,
		19.74,
		-5.04,
		-9.84,
		19.439999,
		-5.04,
		-9.719999,
		19.32,
		-5.16,
		-9.9,
		19.38,
		-5.22,
		-9.599999,
		19.38,
		-5.3399997,
		-9.599999,
		19.32,
		-5.3399997,
		-9.78,
		19.32,
		-5.16,
		-9.84,
		19.26,
		-5.16,
		-9.66,
		19.38,
		-5.1,
		-9.599999,
		19.439999,
		-5.1,
		-9.66,
		19.619999,
		-5.04,
		-9.48,
		19.74,
		-4.68,
		-9.599999,
		19.5,
		-4.5,
		-9.66,
		19.5,
		-4.3199997,
		-9.599999,
		19.5,
		-4.68,
		-9.78,
		19.619999,
		-4.68,
		-9.599999,
		19.74,
		-4.62,
		-9.54,
		19.68,
		-4.74,
		-9.42,
		19.859999,
		-4.98,
		-9.42,
		19.92,
		-5.04,
		-9.36,
		19.92,
		-4.92,
		-9.24,
		19.619999,
		-4.98,
		-9.059999,
		19.68,
		-5.2799997,
		-8.88,
		19.859999,
		-5.64,
		-8.88,
		19.98,
		-5.46,
		-8.94,
		20.1,
		-5.46,
		-9.059999,
		20.16,
		-5.4,
		-9.24,
		20.34,
		-5.22,
		-9.48,
		20.16,
		-4.98,
		-9.96,
		20.22,
		-4.98,
		-9.9,
		20.16,
		-4.92,
		-9.78,
		20.279999,
		-4.7999997,
		-9.9,
		20.4,
		-4.74,
		-9.84,
		20.4,
		-4.5,
		-10.0199995,
		20.52,
		-4.3199997,
		-10.139999,
		20.46,
		-3.84,
		-10.0199995,
		20.46,
		-3.72,
		-9.96,
		20.4,
		-3.48,
		-9.78,
		20.46,
		-3.72,
		-10.0199995,
		20.46,
		-3.6599998,
		-9.96,
		20.52,
		-3.54,
		-10.0199995,
		20.46,
		-3.48,
		-10.26,
		20.58,
		-3.48,
		-10.2,
		20.88,
		-3.48,
		-10.2,
		21.18,
		-3.36,
		-10.08,
		21.48,
		-3.54,
		-10.26,
		21.539999,
		-3.36,
		-10.26,
		21.6,
		-3.1799998,
		-10.32,
		21.72,
		NumberLong(-3),
		-10.5,
		21.96,
		-3.1799998,
		-10.38,
		22.199999,
		-3.12,
		-10.2,
		22.02,
		-3.3,
		-10.32,
		21.9,
		-3.6,
		-10.38,
		21.779999,
		-3.4199998,
		-10.559999,
		21.779999,
		-3.36,
		-10.5,
		21.6,
		-3.48,
		-10.38,
		21.48,
		-3.6,
		-10.08,
		21.42,
		-3.3,
		-9.84,
		21.3,
		-3.3,
		-9.96,
		21.24,
		-3.3,
		-9.9,
		21.24,
		-2.8799999,
		-9.719999,
		21.24,
		-2.8799999,
		-9.66,
		21.48,
		-2.9399998,
		-9.54,
		21.72,
		-2.82,
		-9.48,
		21.66,
		NumberLong(-3),
		-9.66,
		21.359999,
		-3.4199998,
		-9.719999,
		21.3,
		-3.72,
		-9.599999,
		21.119999,
		-4.02,
		-9.719999,
		21.06,
		-4.44,
		-9.78,
		20.76,
		-4.7999997,
		-9.78,
		20.34,
		-4.92,
		-9.84,
		19.74,
		-5.1,
		-10.0199995,
		19.8,
		-5.16,
		-9.9,
		19.8,
		-5.16,
		-10.0199995,
		19.68,
		-5.16,
		-10.139999,
		19.619999,
		-5.04,
		-10.139999,
		19.38,
		-4.92,
		-10.139999,
		19.5,
		-4.92,
		-10.139999,
		19.619999,
		-4.92,
		-10.139999,
		19.74,
		-5.1,
		-10.2,
		19.619999,
		-4.98,
		-10.32,
		19.68,
		-4.7999997,
		-10.32,
		19.56,
		-4.8599997,
		-10.26,
		19.5,
		-4.8599997,
		-10.2,
		19.68,
		-4.98,
		-10.0199995,
		19.74,
		-4.8599997,
		-10.0199995,
		19.5,
		-4.7999997,
		-9.78,
		19.619999,
		-4.74,
		-9.54,
		19.56,
		-4.92,
		-9.54,
		19.38,
		-5.04,
		-9.36,
		19.26,
		-4.98,
		-9.54,
		19.5,
		-5.1,
		-9.42,
		19.38,
		-4.98,
		-9.48,
		19.32,
		-5.16,
		-9.48,
		19.439999,
		-5.22,
		-9.54,
		19.32,
		-5.04,
		-9.54,
		19.32,
		-4.98,
		-9.48,
		19.5,
		-4.98,
		-9.48,
		19.56,
		-4.7999997,
		-9.24,
		19.38,
		-4.74,
		-9.24,
		19.32,
		-4.8599997,
		-9.3,
		19.5,
		-4.7999997,
		-9.3,
		19.5,
		-4.92,
		-9.48,
		19.5,
		-5.1,
		-9.599999,
		19.38,
		-5.3399997,
		-9.66,
		19.199999,
		-5.3399997,
		-9.599999,
		19.439999,
		-5.46,
		-9.78,
		19.56,
		-5.46,
		-9.78,
		19.619999,
		-5.46,
		-9.719999,
		19.38,
		-5.64,
		-9.719999,
		19.32,
		-5.52,
		-9.719999,
		19.38,
		-5.58,
		-9.719999,
		19.619999,
		-5.58,
		-9.719999,
		19.74,
		-5.46,
		-9.719999,
		19.5,
		-5.52,
		-9.54,
		19.5,
		-5.4,
		-9.54,
		19.32,
		-5.46,
		-9.54,
		19.439999,
		-5.4,
		-9.54,
		19.56,
		-5.58,
		-9.599999,
		19.439999,
		-5.2799997,
		-9.179999,
		19.199999,
		-5.58,
		-9.3,
		19.26,
		-5.58,
		-9.36,
		19.32,
		-5.94,
		-9.54,
		19.5,
		-6.06,
		-9.3,
		19.38,
		-5.94,
		-9.12,
		19.199999,
		-6.06,
		-8.88,
		19.14,
		-6.24,
		-9.059999,
		19.32,
		-6.18,
		-9.12,
		19.439999,
		-6.24,
		NumberLong(-9),
		19.439999,
		-5.8799996,
		-8.94,
		19.56,
		-5.64,
		-9.179999,
		19.68,
		-5.64,
		-9.599999,
		20.039999,
		-5.3399997,
		-9.599999,
		19.98,
		-5.3399997,
		-9.599999,
		20.039999,
		-5.3399997,
		-9.48,
		19.859999,
		-5.58,
		-9.48,
		19.8,
		-5.7599998,
		-9.54,
		19.859999,
		NumberLong(-6),
		-9.66,
		19.8,
		NumberLong(-6),
		-9.48,
		19.8,
		-6.12,
		-9.42,
		19.74,
		-6.24,
		-9.42,
		19.619999,
		-6.18,
		-9.42,
		19.619999,
		-6.06,
		-9.42,
		19.38,
		NumberLong(-6),
		-9.36,
		19.32,
		-5.94,
		-9.24,
		19.14,
		-5.8199997,
		-9.3,
		19.02,
		-5.64,
		-9.24,
		18.96,
		-5.8799996,
		-9.3,
		18.9,
		-5.7,
		-9.42,
		18.96,
		-5.64,
		-9.66,
		19.02,
		-5.7599998,
		-9.78,
		19.38,
		NumberLong(-6),
		-9.84,
		19.56,
		-6.18,
		-9.84,
		19.8,
		-6.3599997,
		-9.84,
		19.92,
		-6.18,
		-9.96,
		19.98,
		-6.24,
		-9.84,
		19.859999,
		-6.48,
		-9.599999,
		19.68,
		-6.2999997,
		-9.42,
		19.5,
		-6.06,
		-9.599999,
		19.199999,
		-5.7,
		-9.78,
		19.02,
		-5.58,
		-9.78,
		19.02,
		-5.64,
		-9.78,
		19.02,
		-5.58,
		-9.599999,
		19.02,
		-5.46,
		-9.599999,
		18.96,
		-5.3399997,
		-9.48,
		18.84,
		-5.16,
		-9.84,
		19.02,
		-5.3399997,
		-9.719999,
		19.26,
		-5.3399997,
		-9.719999,
		19.5,
		-5.2799997,
		-9.84,
		19.56,
		-5.1,
		-9.9,
		19.68,
		-5.1,
		-10.08,
		19.98,
		-5.1,
		-10.139999,
		20.4,
		-4.7999997,
		-10.44,
		20.76,
		-4.8599997,
		-10.38,
		20.82,
		-4.38,
		-10.26,
		20.939999,
		-4.3199997,
		-10.26,
		20.939999,
		-4.2599998,
		-10.139999,
		NumberLong(21),
		-4.2599998,
		-10.2,
		NumberLong(21),
		-4.08,
		-10.2,
		NumberLong(21),
		-4.2,
		-10.2,
		20.939999,
		-4.3199997,
		-10.2,
		20.939999,
		-4.3199997,
		-10.2,
		20.64,
		-4.44,
		-10.38,
		20.52,
		-4.68,
		-10.38,
		20.46,
		-4.5,
		-10.26,
		20.4,
		-4.44,
		-10.2,
		20.52,
		-4.38,
		-10.2,
		20.52,
		-4.3199997,
		-10.08,
		20.64,
		-4.2599998,
		-9.96,
		20.64,
		-4.38,
		-10.0199995,
		20.64
	],
	"DATA_SIZE" : NumberLong(300)
});
db["kuznia_DATASIZE:300_STEP:1_1_DEFAULT"].insert({
	"_id" : ObjectId("5595063c63f9130dc6bc0a4c"),
	"STATISTICS" : {
		"PERCENTILE - 90" : -43,
		"MIN" : NumberLong(-43),
		"STANDARD_DEVIATION" : 0,
		"PERCENTILE - 20" : -43,
		"PERCENTILE - 10" : -43,
		"MAX" : NumberLong(-43),
		"PERCENTILE - 70" : -43,
		"PERCENTILE - 50" : -43,
		"MODE" : NumberLong(-43),
		"MEDIANA" : -43,
		"MEAN" : -43
	},
	"HASH" : "DEFAULT",
	"SSID" : "TP-LINK_489B26",
	"RSSI_DATA" : [
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43),
		NumberLong(-43)
	],
	"TIMESTAMP" : "2015-07-02:11-36-45.916",
	"POSITIONS" : [
		NumberLong(0),
		NumberLong(0)
	],
	"STEP" : [
		NumberLong(1),
		NumberLong(1)
	],
	"PLACE" : "kuznia",
	"MODE" : "FEED_MAP",
	"IP_PHONE" : "192.168.1.100",
	"RSSI_AVG_TIME" : "5802431",
	"MAC_AP" : "f8:d1:11:48:9b:26",
	"DATA_SIZE" : NumberLong(300),
	"MAC_PHONE" : "e8:99:c4:8e:97:36"
});
db["kuznia_DATASIZE:300_STEP:1_1_DEFAULT"].insert({
	"_id" : ObjectId("5595063c63f9130dc6bc0a4d"),
	"STATISTICS" : {
		"PERCENTILE - 90" : -55,
		"MIN" : NumberLong(-55),
		"STANDARD_DEVIATION" : 0,
		"PERCENTILE - 20" : -55,
		"PERCENTILE - 10" : -55,
		"MAX" : NumberLong(-55),
		"PERCENTILE - 70" : -55,
		"PERCENTILE - 50" : -55,
		"MODE" : NumberLong(-55),
		"MEDIANA" : -55,
		"MEAN" : -55
	},
	"HASH" : "DEFAULT",
	"SSID" : "PinGwin",
	"RSSI_DATA" : [
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55)
	],
	"TIMESTAMP" : "2015-07-02:11-36-45.917",
	"POSITIONS" : [
		NumberLong(0),
		NumberLong(0)
	],
	"STEP" : [
		NumberLong(1),
		NumberLong(1)
	],
	"PLACE" : "kuznia",
	"MODE" : "FEED_MAP",
	"IP_PHONE" : "192.168.1.100",
	"RSSI_AVG_TIME" : "5802431",
	"MAC_AP" : "68:7f:74:09:f6:8b",
	"DATA_SIZE" : NumberLong(300),
	"MAC_PHONE" : "e8:99:c4:8e:97:36"
});
db["kuznia_DATASIZE:300_STEP:1_1_DEFAULT"].insert({
	"_id" : ObjectId("5595063c63f9130dc6bc0a4e"),
	"STATISTICS" : {
		"PERCENTILE - 90" : -73,
		"MIN" : NumberLong(-73),
		"STANDARD_DEVIATION" : 0,
		"PERCENTILE - 20" : -73,
		"PERCENTILE - 10" : -73,
		"MAX" : NumberLong(-73),
		"PERCENTILE - 70" : -73,
		"PERCENTILE - 50" : -73,
		"MODE" : NumberLong(-73),
		"MEDIANA" : -73,
		"MEAN" : -73
	},
	"HASH" : "DEFAULT",
	"SSID" : "PWSK_K",
	"RSSI_DATA" : [
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73)
	],
	"TIMESTAMP" : "2015-07-02:11-36-45.918",
	"POSITIONS" : [
		NumberLong(0),
		NumberLong(0)
	],
	"STEP" : [
		NumberLong(1),
		NumberLong(1)
	],
	"PLACE" : "kuznia",
	"MODE" : "FEED_MAP",
	"IP_PHONE" : "192.168.1.100",
	"RSSI_AVG_TIME" : "5802431",
	"MAC_AP" : "28:80:23:28:8a:12",
	"DATA_SIZE" : NumberLong(300),
	"MAC_PHONE" : "e8:99:c4:8e:97:36"
});
db["kuznia_DATASIZE:300_STEP:1_1_DEFAULT"].insert({
	"_id" : ObjectId("5595063c63f9130dc6bc0a4f"),
	"STATISTICS" : {
		"PERCENTILE - 90" : -76,
		"MIN" : NumberLong(-76),
		"STANDARD_DEVIATION" : 0,
		"PERCENTILE - 20" : -76,
		"PERCENTILE - 10" : -76,
		"MAX" : NumberLong(-76),
		"PERCENTILE - 70" : -76,
		"PERCENTILE - 50" : -76,
		"MODE" : NumberLong(-76),
		"MEDIANA" : -76,
		"MEAN" : -76
	},
	"HASH" : "DEFAULT",
	"SSID" : "PWSK",
	"RSSI_DATA" : [
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76)
	],
	"TIMESTAMP" : "2015-07-02:11-36-45.919",
	"POSITIONS" : [
		NumberLong(0),
		NumberLong(0)
	],
	"STEP" : [
		NumberLong(1),
		NumberLong(1)
	],
	"PLACE" : "kuznia",
	"MODE" : "FEED_MAP",
	"IP_PHONE" : "192.168.1.100",
	"RSSI_AVG_TIME" : "5802431",
	"MAC_AP" : "28:80:23:28:8a:11",
	"DATA_SIZE" : NumberLong(300),
	"MAC_PHONE" : "e8:99:c4:8e:97:36"
});
db["kuznia_DATASIZE:300_STEP:1_1_DEFAULT"].insert({
	"_id" : ObjectId("5595063c63f9130dc6bc0a50"),
	"STATISTICS" : {
		"PERCENTILE - 90" : -81,
		"MIN" : NumberLong(-81),
		"STANDARD_DEVIATION" : 0,
		"PERCENTILE - 20" : -81,
		"PERCENTILE - 10" : -81,
		"MAX" : NumberLong(-81),
		"PERCENTILE - 70" : -81,
		"PERCENTILE - 50" : -81,
		"MODE" : NumberLong(-81),
		"MEDIANA" : -81,
		"MEAN" : -81
	},
	"HASH" : "DEFAULT",
	"SSID" : "",
	"RSSI_DATA" : [
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81)
	],
	"TIMESTAMP" : "2015-07-02:11-36-45.920",
	"POSITIONS" : [
		NumberLong(0),
		NumberLong(0)
	],
	"STEP" : [
		NumberLong(1),
		NumberLong(1)
	],
	"PLACE" : "kuznia",
	"MODE" : "FEED_MAP",
	"IP_PHONE" : "192.168.1.100",
	"RSSI_AVG_TIME" : "5802431",
	"MAC_AP" : "c4:6e:1f:35:c4:8c",
	"DATA_SIZE" : NumberLong(300),
	"MAC_PHONE" : "e8:99:c4:8e:97:36"
});
db["kuznia_DATASIZE:300_STEP:1_1_DEFAULT"].insert({
	"_id" : ObjectId("5595063c63f9130dc6bc0a51"),
	"STATISTICS" : {
		"PERCENTILE - 90" : -82,
		"MIN" : NumberLong(-82),
		"STANDARD_DEVIATION" : 0,
		"PERCENTILE - 20" : -82,
		"PERCENTILE - 10" : -82,
		"MAX" : NumberLong(-82),
		"PERCENTILE - 70" : -82,
		"PERCENTILE - 50" : -82,
		"MODE" : NumberLong(-82),
		"MEDIANA" : -82,
		"MEAN" : -82
	},
	"HASH" : "DEFAULT",
	"SSID" : "PWSK",
	"RSSI_DATA" : [
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82)
	],
	"TIMESTAMP" : "2015-07-02:11-36-45.921",
	"POSITIONS" : [
		NumberLong(0),
		NumberLong(0)
	],
	"STEP" : [
		NumberLong(1),
		NumberLong(1)
	],
	"PLACE" : "kuznia",
	"MODE" : "FEED_MAP",
	"IP_PHONE" : "192.168.1.100",
	"RSSI_AVG_TIME" : "5802431",
	"MAC_AP" : "28:80:23:28:7f:f1",
	"DATA_SIZE" : NumberLong(300),
	"MAC_PHONE" : "e8:99:c4:8e:97:36"
});
db["kuznia_DATASIZE:300_STEP:1_1_DEFAULT"].insert({
	"_id" : ObjectId("5595063d63f9130dc6bc0a52"),
	"STATISTICS" : {
		"PERCENTILE - 90" : -85,
		"MIN" : NumberLong(-85),
		"STANDARD_DEVIATION" : 0,
		"PERCENTILE - 20" : -85,
		"PERCENTILE - 10" : -85,
		"MAX" : NumberLong(-85),
		"PERCENTILE - 70" : -85,
		"PERCENTILE - 50" : -85,
		"MODE" : NumberLong(-85),
		"MEDIANA" : -85,
		"MEAN" : -85
	},
	"HASH" : "DEFAULT",
	"SSID" : "PWSK_K",
	"RSSI_DATA" : [
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85)
	],
	"TIMESTAMP" : "2015-07-02:11-36-45.921",
	"POSITIONS" : [
		NumberLong(0),
		NumberLong(0)
	],
	"STEP" : [
		NumberLong(1),
		NumberLong(1)
	],
	"PLACE" : "kuznia",
	"MODE" : "FEED_MAP",
	"IP_PHONE" : "192.168.1.100",
	"RSSI_AVG_TIME" : "5802431",
	"MAC_AP" : "28:80:23:28:7f:f2",
	"DATA_SIZE" : NumberLong(300),
	"MAC_PHONE" : "e8:99:c4:8e:97:36"
});
db["kuznia_DATASIZE:300_STEP:1_1_DEFAULT"].insert({
	"_id" : ObjectId("5595063d63f9130dc6bc0a53"),
	"STATISTICS" : {
		"PERCENTILE - 90" : -85,
		"MIN" : NumberLong(-85),
		"STANDARD_DEVIATION" : 0,
		"PERCENTILE - 20" : -85,
		"PERCENTILE - 10" : -85,
		"MAX" : NumberLong(-85),
		"PERCENTILE - 70" : -85,
		"PERCENTILE - 50" : -85,
		"MODE" : NumberLong(-85),
		"MEDIANA" : -85,
		"MEAN" : -85
	},
	"HASH" : "DEFAULT",
	"SSID" : "PWSK_K",
	"RSSI_DATA" : [
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85)
	],
	"TIMESTAMP" : "2015-07-02:11-36-45.922",
	"POSITIONS" : [
		NumberLong(0),
		NumberLong(0)
	],
	"STEP" : [
		NumberLong(1),
		NumberLong(1)
	],
	"PLACE" : "kuznia",
	"MODE" : "FEED_MAP",
	"IP_PHONE" : "192.168.1.100",
	"RSSI_AVG_TIME" : "5802431",
	"MAC_AP" : "28:80:23:28:8a:b2",
	"DATA_SIZE" : NumberLong(300),
	"MAC_PHONE" : "e8:99:c4:8e:97:36"
});
db["kuznia_DATASIZE:300_STEP:1_1_DEFAULT"].insert({
	"_id" : ObjectId("5595063d63f9130dc6bc0a54"),
	"STATISTICS" : {
		"PERCENTILE - 90" : -82,
		"MIN" : NumberLong(-82),
		"STANDARD_DEVIATION" : 0,
		"PERCENTILE - 20" : -82,
		"PERCENTILE - 10" : -82,
		"MAX" : NumberLong(-82),
		"PERCENTILE - 70" : -82,
		"PERCENTILE - 50" : -82,
		"MODE" : NumberLong(-82),
		"MEDIANA" : -82,
		"MEAN" : -82
	},
	"HASH" : "DEFAULT",
	"SSID" : "PWSK_K",
	"RSSI_DATA" : [
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82)
	],
	"TIMESTAMP" : "2015-07-02:11-36-45.923",
	"POSITIONS" : [
		NumberLong(0),
		NumberLong(0)
	],
	"STEP" : [
		NumberLong(1),
		NumberLong(1)
	],
	"PLACE" : "kuznia",
	"MODE" : "FEED_MAP",
	"IP_PHONE" : "192.168.1.100",
	"RSSI_AVG_TIME" : "5802431",
	"MAC_AP" : "28:80:23:28:8a:02",
	"DATA_SIZE" : NumberLong(300),
	"MAC_PHONE" : "e8:99:c4:8e:97:36"
});
db["kuznia_DATASIZE:300_STEP:1_1_DEFAULT"].insert({
	"_id" : ObjectId("5595063d63f9130dc6bc0a55"),
	"STATISTICS" : {
		"PERCENTILE - 90" : -82,
		"MIN" : NumberLong(-82),
		"STANDARD_DEVIATION" : 0,
		"PERCENTILE - 20" : -82,
		"PERCENTILE - 10" : -82,
		"MAX" : NumberLong(-82),
		"PERCENTILE - 70" : -82,
		"PERCENTILE - 50" : -82,
		"MODE" : NumberLong(-82),
		"MEDIANA" : -82,
		"MEAN" : -82
	},
	"HASH" : "DEFAULT",
	"SSID" : "PWSK",
	"RSSI_DATA" : [
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82)
	],
	"TIMESTAMP" : "2015-07-02:11-36-45.924",
	"POSITIONS" : [
		NumberLong(0),
		NumberLong(0)
	],
	"STEP" : [
		NumberLong(1),
		NumberLong(1)
	],
	"PLACE" : "kuznia",
	"MODE" : "FEED_MAP",
	"IP_PHONE" : "192.168.1.100",
	"RSSI_AVG_TIME" : "5802431",
	"MAC_AP" : "28:80:23:28:8a:01",
	"DATA_SIZE" : NumberLong(300),
	"MAC_PHONE" : "e8:99:c4:8e:97:36"
});
db["kuznia_DATASIZE:300_STEP:1_1_DEFAULT"].insert({
	"_id" : ObjectId("5595063d63f9130dc6bc0a56"),
	"STATISTICS" : {
		"PERCENTILE - 90" : -76,
		"MIN" : NumberLong(-76),
		"STANDARD_DEVIATION" : 0,
		"PERCENTILE - 20" : -76,
		"PERCENTILE - 10" : -76,
		"MAX" : NumberLong(-76),
		"PERCENTILE - 70" : -76,
		"PERCENTILE - 50" : -76,
		"MODE" : NumberLong(-76),
		"MEDIANA" : -76,
		"MEAN" : -76
	},
	"HASH" : "DEFAULT",
	"SSID" : "ParkWielokulturowy",
	"RSSI_DATA" : [
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76)
	],
	"TIMESTAMP" : "2015-07-02:11-36-45.925",
	"POSITIONS" : [
		NumberLong(0),
		NumberLong(0)
	],
	"STEP" : [
		NumberLong(1),
		NumberLong(1)
	],
	"PLACE" : "kuznia",
	"MODE" : "FEED_MAP",
	"IP_PHONE" : "192.168.1.100",
	"RSSI_AVG_TIME" : "5802431",
	"MAC_AP" : "28:80:23:28:8a:10",
	"DATA_SIZE" : NumberLong(300),
	"MAC_PHONE" : "e8:99:c4:8e:97:36"
});
db["kuznia_DATASIZE:300_STEP:1_1_DEFAULT"].insert({
	"_id" : ObjectId("5595063d63f9130dc6bc0a57"),
	"STATISTICS" : {
		"PERCENTILE - 90" : -76,
		"MIN" : NumberLong(-76),
		"STANDARD_DEVIATION" : 0,
		"PERCENTILE - 20" : -76,
		"PERCENTILE - 10" : -76,
		"MAX" : NumberLong(-76),
		"PERCENTILE - 70" : -76,
		"PERCENTILE - 50" : -76,
		"MODE" : NumberLong(-76),
		"MEDIANA" : -76,
		"MEAN" : -76
	},
	"HASH" : "DEFAULT",
	"SSID" : "ParkWielokulturowy",
	"RSSI_DATA" : [
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76)
	],
	"TIMESTAMP" : "2015-07-02:11-36-45.926",
	"POSITIONS" : [
		NumberLong(0),
		NumberLong(0)
	],
	"STEP" : [
		NumberLong(1),
		NumberLong(1)
	],
	"PLACE" : "kuznia",
	"MODE" : "FEED_MAP",
	"IP_PHONE" : "192.168.1.100",
	"RSSI_AVG_TIME" : "5802431",
	"MAC_AP" : "28:80:23:28:7e:90",
	"DATA_SIZE" : NumberLong(300),
	"MAC_PHONE" : "e8:99:c4:8e:97:36"
});
db["kuznia_DATASIZE:300_STEP:1_1_DEFAULT"].insert({
	"_id" : ObjectId("5595063d63f9130dc6bc0a58"),
	"STATISTICS" : {
		"PERCENTILE - 90" : -82,
		"MIN" : NumberLong(-82),
		"STANDARD_DEVIATION" : 0,
		"PERCENTILE - 20" : -82,
		"PERCENTILE - 10" : -82,
		"MAX" : NumberLong(-82),
		"PERCENTILE - 70" : -82,
		"PERCENTILE - 50" : -82,
		"MODE" : NumberLong(-82),
		"MEDIANA" : -82,
		"MEAN" : -82
	},
	"HASH" : "DEFAULT",
	"SSID" : "ParkWielokulturowy",
	"RSSI_DATA" : [
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82)
	],
	"TIMESTAMP" : "2015-07-02:11-36-45.926",
	"POSITIONS" : [
		NumberLong(0),
		NumberLong(0)
	],
	"STEP" : [
		NumberLong(1),
		NumberLong(1)
	],
	"PLACE" : "kuznia",
	"MODE" : "FEED_MAP",
	"IP_PHONE" : "192.168.1.100",
	"RSSI_AVG_TIME" : "5802431",
	"MAC_AP" : "28:80:23:28:7f:f0",
	"DATA_SIZE" : NumberLong(300),
	"MAC_PHONE" : "e8:99:c4:8e:97:36"
});
db["kuznia_DATASIZE:300_STEP:1_1_DEFAULT"].insert({
	"_id" : ObjectId("5595063d63f9130dc6bc0a59"),
	"STATISTICS" : {
		"PERCENTILE - 90" : -82,
		"MIN" : NumberLong(-82),
		"STANDARD_DEVIATION" : 0,
		"PERCENTILE - 20" : -82,
		"PERCENTILE - 10" : -82,
		"MAX" : NumberLong(-82),
		"PERCENTILE - 70" : -82,
		"PERCENTILE - 50" : -82,
		"MODE" : NumberLong(-82),
		"MEDIANA" : -82,
		"MEAN" : -82
	},
	"HASH" : "DEFAULT",
	"SSID" : "ParkWielokulturowy",
	"RSSI_DATA" : [
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82)
	],
	"TIMESTAMP" : "2015-07-02:11-36-45.927",
	"POSITIONS" : [
		NumberLong(0),
		NumberLong(0)
	],
	"STEP" : [
		NumberLong(1),
		NumberLong(1)
	],
	"PLACE" : "kuznia",
	"MODE" : "FEED_MAP",
	"IP_PHONE" : "192.168.1.100",
	"RSSI_AVG_TIME" : "5802431",
	"MAC_AP" : "28:80:23:28:8a:b0",
	"DATA_SIZE" : NumberLong(300),
	"MAC_PHONE" : "e8:99:c4:8e:97:36"
});
db["kuznia_DATASIZE:300_STEP:1_1_DEFAULT"].insert({
	"_id" : ObjectId("5595063d63f9130dc6bc0a5a"),
	"STATISTICS" : {
		"PERCENTILE - 90" : -82,
		"MIN" : NumberLong(-82),
		"STANDARD_DEVIATION" : 0,
		"PERCENTILE - 20" : -82,
		"PERCENTILE - 10" : -82,
		"MAX" : NumberLong(-82),
		"PERCENTILE - 70" : -82,
		"PERCENTILE - 50" : -82,
		"MODE" : NumberLong(-82),
		"MEDIANA" : -82,
		"MEAN" : -82
	},
	"HASH" : "DEFAULT",
	"SSID" : "ParkWielokulturowy",
	"RSSI_DATA" : [
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82)
	],
	"TIMESTAMP" : "2015-07-02:11-36-45.928",
	"POSITIONS" : [
		NumberLong(0),
		NumberLong(0)
	],
	"STEP" : [
		NumberLong(1),
		NumberLong(1)
	],
	"PLACE" : "kuznia",
	"MODE" : "FEED_MAP",
	"IP_PHONE" : "192.168.1.100",
	"RSSI_AVG_TIME" : "5802431",
	"MAC_AP" : "28:80:23:28:8a:00",
	"DATA_SIZE" : NumberLong(300),
	"MAC_PHONE" : "e8:99:c4:8e:97:36"
});
db["kuznia_DATASIZE:300_STEP:1_1_DEFAULT"].insert({
	"_id" : ObjectId("5595066e63f9130dc6bc0a5b"),
	"STATISTICS" : {
		"PERCENTILE - 90" : 16.98,
		"MIN" : -3.84,
		"STANDARD_DEVIATION" : 7.682149016042148,
		"PERCENTILE - 20" : -1.92,
		"PERCENTILE - 10" : -2.58,
		"MAX" : 18.18,
		"PERCENTILE - 70" : 16.08,
		"PERCENTILE - 50" : 7.7999997,
		"MODE" : 16.98,
		"MEDIANA" : 8.133333033333333,
		"MEAN" : 7.691533218577778
	},
	"HASH" : "DEFAULT",
	"MAC_PHONE" : "e8:99:c4:8e:97:36",
	"TIMESTAMP" : "2015-07-02:11-37-28.9",
	"STEP" : [
		NumberLong(1),
		NumberLong(1)
	],
	"PLACE" : "kuznia",
	"MODE" : "FEED_MAP",
	"IP_PHONE" : "192.168.1.100",
	"POSITIONS" : [
		NumberLong(1),
		NumberLong(1)
	],
	"MAGNETIC_AVG_TIME" : "54529",
	"MAGNETIC_DATA" : [
		11.94,
		0.71999997,
		17.039999,
		11.46,
		0.71999997,
		17.52,
		11.16,
		1.14,
		17.279999,
		11.94,
		1.4399999,
		17.52,
		12.059999,
		1.26,
		17.82,
		12.54,
		1.5,
		17.279999,
		12.42,
		1.1999999,
		17.1,
		11.88,
		0.96,
		17.16,
		11.82,
		1.0799999,
		17.1,
		11.88,
		1.0799999,
		16.8,
		11.88,
		0.84,
		16.74,
		11.88,
		0.71999997,
		16.56,
		11.7,
		0.9,
		16.38,
		11.5199995,
		0.9,
		16.56,
		11.58,
		1.0799999,
		16.92,
		11.759999,
		1.0799999,
		16.8,
		11.639999,
		1.02,
		16.8,
		11.5199995,
		0.96,
		16.92,
		11.5199995,
		0.96,
		16.98,
		11.28,
		0.78,
		16.68,
		11.4,
		0.35999998,
		16.859999,
		11.219999,
		0.06,
		16.74,
		11.099999,
		-0.06,
		16.56,
		10.86,
		0.06,
		16.619999,
		10.92,
		-0.12,
		16.619999,
		10.74,
		-0.17999999,
		16.74,
		10.679999,
		-0.42,
		16.8,
		10.62,
		-0.48,
		16.98,
		10.32,
		-0.24,
		16.859999,
		10.44,
		-0.17999999,
		16.859999,
		10.44,
		-0.35999998,
		16.8,
		10.32,
		-0.59999996,
		17.039999,
		10.26,
		-0.29999998,
		16.859999,
		10.26,
		-0.29999998,
		16.8,
		10.38,
		-0.35999998,
		16.98,
		10.32,
		-0.29999998,
		16.92,
		10.139999,
		-0.29999998,
		16.98,
		10.08,
		-0.53999996,
		16.92,
		10.0199995,
		-0.53999996,
		16.98,
		10.0199995,
		-0.59999996,
		16.74,
		10.2,
		-0.71999997,
		16.859999,
		9.96,
		-1.02,
		17.1,
		9.719999,
		-1.02,
		16.8,
		9.66,
		-1.1999999,
		16.92,
		9.66,
		-1.38,
		16.92,
		9.48,
		-1.3199999,
		16.98,
		9.599999,
		-1.38,
		17.1,
		9.24,
		-1.5,
		17.1,
		9.36,
		-1.3199999,
		17.1,
		9.599999,
		-1.3199999,
		17.16,
		9.42,
		-1.4399999,
		17.039999,
		9.599999,
		-1.3199999,
		16.92,
		9.84,
		-1.38,
		16.859999,
		10.0199995,
		-1.4399999,
		16.859999,
		9.9,
		-1.62,
		16.98,
		9.96,
		-1.68,
		17.039999,
		10.0199995,
		-1.86,
		17.16,
		9.719999,
		-2.1599998,
		17.279999,
		9.78,
		-2.04,
		17.34,
		9.599999,
		-2.1599998,
		17.4,
		9.36,
		-2.34,
		17.22,
		9.179999,
		-2.46,
		17.16,
		9.179999,
		-2.52,
		17.22,
		8.94,
		-2.58,
		17.039999,
		8.639999,
		-2.7,
		16.68,
		8.639999,
		-2.52,
		16.74,
		8.58,
		-2.76,
		16.619999,
		8.46,
		-2.76,
		16.68,
		8.5199995,
		-2.6399999,
		16.68,
		8.28,
		-2.52,
		16.619999,
		8.22,
		-2.3999999,
		16.68,
		8.22,
		-2.28,
		16.98,
		8.04,
		-2.3999999,
		16.98,
		7.98,
		-2.1599998,
		16.98,
		8.099999,
		-2.22,
		16.92,
		7.8599997,
		-2.28,
		16.8,
		7.8599997,
		-2.28,
		16.68,
		8.099999,
		-2.34,
		16.44,
		8.22,
		-2.52,
		16.32,
		8.22,
		-2.6399999,
		16.32,
		8.22,
		-2.6399999,
		16.56,
		8.04,
		-2.58,
		16.56,
		7.98,
		-2.6399999,
		16.8,
		8.22,
		-2.6399999,
		16.98,
		8.34,
		-2.6399999,
		17.4,
		8.34,
		-2.6399999,
		17.64,
		8.4,
		-2.52,
		17.699999,
		8.58,
		-2.6399999,
		17.52,
		8.639999,
		-2.6399999,
		17.64,
		8.7,
		-2.7,
		17.46,
		8.5199995,
		NumberLong(-3),
		17.4,
		8.4,
		NumberLong(-3),
		17.4,
		8.16,
		NumberLong(-3),
		16.98,
		8.099999,
		NumberLong(-3),
		16.74,
		8.099999,
		-2.9399998,
		16.56,
		8.099999,
		-2.8799999,
		16.44,
		8.099999,
		-2.9399998,
		16.56,
		8.28,
		-2.8799999,
		16.68,
		8.46,
		-2.7,
		16.92,
		8.76,
		-2.6399999,
		16.8,
		8.88,
		-2.6399999,
		16.92,
		8.76,
		-2.82,
		16.859999,
		8.76,
		NumberLong(-3),
		16.98,
		8.82,
		-2.76,
		16.98,
		8.58,
		-2.6399999,
		16.8,
		8.5199995,
		-2.6399999,
		16.68,
		8.34,
		-2.58,
		16.619999,
		8.28,
		-2.7,
		16.619999,
		8.34,
		-2.58,
		16.56,
		8.16,
		-2.46,
		16.44,
		7.98,
		-2.52,
		16.32,
		7.9199996,
		-2.6399999,
		16.14,
		7.8599997,
		-2.7,
		16.199999,
		7.7999997,
		-2.7,
		16.14,
		7.7999997,
		-2.76,
		16.44,
		7.7999997,
		-2.7,
		16.619999,
		7.68,
		-2.58,
		16.619999,
		7.62,
		-2.46,
		16.74,
		7.44,
		-2.52,
		16.74,
		7.5,
		-2.9399998,
		16.68,
		7.3799996,
		-3.12,
		16.8,
		7.2,
		-3.3,
		16.619999,
		7.14,
		-3.24,
		16.56,
		7.08,
		-3.36,
		16.56,
		7.2599998,
		-3.6,
		16.74,
		7.3199997,
		-3.6,
		16.92,
		7.02,
		-3.4199998,
		16.859999,
		7.14,
		-3.24,
		16.859999,
		7.2599998,
		-3.1799998,
		17.039999,
		7.3799996,
		-3.1799998,
		16.98,
		7.62,
		-3.24,
		17.1,
		7.68,
		-3.12,
		16.98,
		7.68,
		NumberLong(-3),
		16.92,
		7.7999997,
		-2.9399998,
		16.92,
		7.7999997,
		-2.8799999,
		17.1,
		7.8599997,
		-2.9399998,
		16.98,
		7.74,
		-3.1799998,
		16.8,
		7.68,
		NumberLong(-3),
		17.039999,
		7.56,
		NumberLong(-3),
		17.22,
		7.56,
		-3.24,
		17.46,
		7.5,
		-3.48,
		17.46,
		7.3799996,
		-3.4199998,
		17.4,
		7.5,
		-3.36,
		17.4,
		7.3199997,
		-3.54,
		17.4,
		7.3799996,
		-3.4199998,
		17.52,
		7.62,
		-3.84,
		17.46,
		7.5,
		-3.84,
		17.22,
		7.7999997,
		-3.6599998,
		17.279999,
		7.7999997,
		-3.4199998,
		17.46,
		7.7999997,
		-3.4199998,
		17.52,
		7.68,
		-3.48,
		17.52,
		7.7999997,
		-3.06,
		17.52,
		7.8599997,
		-2.76,
		17.4,
		7.68,
		-2.22,
		17.279999,
		7.8599997,
		-2.1599998,
		17.22,
		7.3799996,
		-2.04,
		16.98,
		7.2599998,
		-2.04,
		16.68,
		7.2599998,
		-2.1,
		16.619999,
		7.2599998,
		-2.04,
		16.56,
		7.14,
		-2.1,
		16.619999,
		6.96,
		-2.46,
		16.32,
		6.8399997,
		-2.58,
		16.26,
		6.66,
		-2.58,
		16.38,
		6.72,
		-2.6399999,
		16.32,
		6.7799997,
		-2.7,
		16.38,
		6.6,
		-2.76,
		16.32,
		6.54,
		-2.82,
		16.32,
		6.3599997,
		-2.8799999,
		16.14,
		6.18,
		-2.58,
		16.26,
		6.2999997,
		-2.52,
		16.14,
		6.18,
		-2.7,
		15.96,
		6.06,
		-2.7,
		16.08,
		6.12,
		-2.7,
		16.08,
		6.42,
		-2.58,
		16.26,
		6.6,
		-2.6399999,
		16.02,
		6.7799997,
		-2.6399999,
		16.14,
		7.08,
		-2.76,
		16.14,
		7.08,
		-2.82,
		16.38,
		7.14,
		-2.76,
		16.38,
		7.2599998,
		-2.76,
		16.38,
		7.08,
		-2.7,
		16.08,
		7.02,
		-2.7,
		15.96,
		6.8999996,
		-2.58,
		16.199999,
		7.2,
		-2.34,
		16.26,
		7.2599998,
		-2.34,
		16.38,
		7.3199997,
		-2.3999999,
		16.199999,
		7.2599998,
		-2.22,
		16.26,
		7.3799996,
		-2.1599998,
		16.26,
		7.68,
		-2.1599998,
		16.619999,
		7.74,
		-2.1,
		16.619999,
		7.56,
		-2.1599998,
		16.44,
		7.44,
		-2.1,
		16.38,
		7.44,
		-1.92,
		16.32,
		7.56,
		-2.1,
		16.38,
		7.62,
		-2.1599998,
		16.26,
		7.68,
		-2.04,
		16.32,
		7.74,
		-1.86,
		16.32,
		7.7999997,
		-1.74,
		16.32,
		7.8599997,
		-1.62,
		16.5,
		7.98,
		-1.56,
		16.5,
		7.9199996,
		-1.5,
		16.74,
		7.98,
		-1.4399999,
		16.619999,
		7.68,
		-1.26,
		16.74,
		7.5,
		-1.3199999,
		16.5,
		7.62,
		-1.26,
		16.5,
		7.5,
		-1.26,
		16.38,
		7.56,
		-1.56,
		16.14,
		7.3799996,
		-1.5,
		16.14,
		7.44,
		-1.3199999,
		15.839999,
		7.44,
		-1.0799999,
		15.719999,
		7.74,
		-1.1999999,
		15.719999,
		7.74,
		-1.3199999,
		15.719999,
		7.62,
		-1.3199999,
		15.66,
		7.62,
		-1.38,
		15.78,
		7.7999997,
		-1.38,
		15.78,
		8.04,
		-1.38,
		15.719999,
		7.9199996,
		-1.56,
		15.9,
		7.98,
		-1.74,
		16.08,
		7.62,
		-1.62,
		16.38,
		7.74,
		-1.4399999,
		16.5,
		7.68,
		-1.62,
		16.56,
		7.56,
		-1.56,
		16.56,
		7.3799996,
		-1.5,
		16.619999,
		7.3199997,
		-1.56,
		16.56,
		7.44,
		-1.38,
		16.56,
		7.3799996,
		-1.26,
		16.32,
		7.56,
		-1.1999999,
		16.02,
		7.3799996,
		-1.0799999,
		15.96,
		7.44,
		-0.9,
		16.02,
		7.56,
		-1.3199999,
		16.14,
		7.5,
		-1.38,
		16.199999,
		7.3799996,
		-1.26,
		16.32,
		7.2,
		-1.38,
		16.38,
		7.14,
		-1.62,
		16.44,
		7.2,
		-1.68,
		16.5,
		7.2599998,
		-1.9799999,
		16.56,
		7.08,
		-1.92,
		16.5,
		7.2599998,
		-1.8,
		16.5,
		7.3199997,
		-1.74,
		16.56,
		7.3799996,
		-1.86,
		16.619999,
		7.3799996,
		-1.8,
		16.38,
		7.44,
		-1.74,
		16.5,
		7.3199997,
		-1.86,
		16.44,
		7.3799996,
		-1.92,
		16.32,
		7.2599998,
		-1.86,
		16.199999,
		7.08,
		-1.92,
		15.96,
		6.96,
		-2.04,
		15.96,
		7.02,
		-2.04,
		16.02,
		7.3199997,
		-1.92,
		16.14,
		7.02,
		-2.22,
		16.08,
		7.08,
		-2.04,
		16.02,
		7.3199997,
		-2.04,
		16.08,
		7.02,
		-2.04,
		16.02,
		7.3199997,
		-1.9799999,
		16.14,
		7.3199997,
		-1.92,
		15.96,
		7.2,
		-1.9799999,
		16.02,
		6.8999996,
		-2.1,
		15.9,
		7.02,
		-1.86,
		15.96,
		7.3199997,
		-2.04,
		15.839999,
		7.2,
		-2.04,
		15.9,
		7.5,
		-2.1,
		16.08,
		7.3799996,
		-2.1599998,
		16.08,
		7.5,
		-2.34,
		16.08,
		7.56,
		-2.28,
		16.14,
		7.68,
		-2.28,
		16.26,
		7.9199996,
		-2.22,
		16.199999,
		7.7999997,
		-2.04,
		16.32,
		7.74,
		-1.92,
		16.32,
		7.68,
		-1.92,
		16.38,
		7.62,
		-1.8,
		16.44,
		7.44,
		-1.8,
		16.199999,
		7.3799996,
		-1.9799999,
		16.02,
		7.3799996,
		-2.22,
		16.08,
		7.3199997,
		-2.28,
		16.14,
		7.5,
		-2.28,
		16.08,
		7.74,
		-2.34,
		16.02,
		7.9199996,
		-2.34,
		16.38,
		8.34,
		-2.58,
		16.74,
		8.5199995,
		-2.52,
		16.98,
		8.94,
		-2.52,
		17.52,
		9.179999,
		-2.46,
		17.88,
		9.12,
		-2.6399999,
		17.82,
		8.94,
		-2.6399999,
		NumberLong(18),
		8.76,
		-2.52,
		18.18,
		8.76,
		-2.52,
		18.119999,
		8.58,
		-2.46,
		NumberLong(18),
		8.5199995,
		-2.34,
		17.76,
		8.22,
		-2.28,
		17.46,
		8.04,
		-2.22,
		17.22,
		8.22,
		-1.9799999,
		17.22,
		8.5199995,
		-1.9799999,
		17.16,
		8.639999,
		-1.9799999,
		17.039999,
		8.58,
		-1.86,
		17.039999,
		8.5199995,
		-1.8,
		16.859999,
		8.4,
		-1.86,
		16.74,
		8.22,
		-1.8,
		16.92,
		8.22,
		-1.86,
		16.98,
		8.4,
		-1.92,
		17.16,
		8.4,
		-1.74,
		17.16,
		8.46,
		-1.74,
		17.279999
	],
	"DATA_SIZE" : NumberLong(300)
});
db["kuznia_DATASIZE:300_STEP:1_1_DEFAULT"].insert({
	"_id" : ObjectId("5595066e63f9130dc6bc0a5c"),
	"STATISTICS" : {
		"PERCENTILE - 90" : -55,
		"MIN" : NumberLong(-55),
		"STANDARD_DEVIATION" : 0,
		"PERCENTILE - 20" : -55,
		"PERCENTILE - 10" : -55,
		"MAX" : NumberLong(-55),
		"PERCENTILE - 70" : -55,
		"PERCENTILE - 50" : -55,
		"MODE" : NumberLong(-55),
		"MEDIANA" : -55,
		"MEAN" : -55
	},
	"HASH" : "DEFAULT",
	"SSID" : "TP-LINK_489B26",
	"RSSI_DATA" : [
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55)
	],
	"TIMESTAMP" : "2015-07-02:11-37-30.450",
	"POSITIONS" : [
		NumberLong(1),
		NumberLong(1)
	],
	"STEP" : [
		NumberLong(1),
		NumberLong(1)
	],
	"PLACE" : "kuznia",
	"MODE" : "FEED_MAP",
	"IP_PHONE" : "192.168.1.100",
	"RSSI_AVG_TIME" : "8472048",
	"MAC_AP" : "f8:d1:11:48:9b:26",
	"DATA_SIZE" : NumberLong(300),
	"MAC_PHONE" : "e8:99:c4:8e:97:36"
});
db["kuznia_DATASIZE:300_STEP:1_1_DEFAULT"].insert({
	"_id" : ObjectId("5595066e63f9130dc6bc0a5d"),
	"STATISTICS" : {
		"PERCENTILE - 90" : -55,
		"MIN" : NumberLong(-55),
		"STANDARD_DEVIATION" : 0,
		"PERCENTILE - 20" : -55,
		"PERCENTILE - 10" : -55,
		"MAX" : NumberLong(-55),
		"PERCENTILE - 70" : -55,
		"PERCENTILE - 50" : -55,
		"MODE" : NumberLong(-55),
		"MEDIANA" : -55,
		"MEAN" : -55
	},
	"HASH" : "DEFAULT",
	"SSID" : "PinGwin",
	"RSSI_DATA" : [
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55),
		NumberLong(-55)
	],
	"TIMESTAMP" : "2015-07-02:11-37-30.451",
	"POSITIONS" : [
		NumberLong(1),
		NumberLong(1)
	],
	"STEP" : [
		NumberLong(1),
		NumberLong(1)
	],
	"PLACE" : "kuznia",
	"MODE" : "FEED_MAP",
	"IP_PHONE" : "192.168.1.100",
	"RSSI_AVG_TIME" : "8472048",
	"MAC_AP" : "68:7f:74:09:f6:8b",
	"DATA_SIZE" : NumberLong(300),
	"MAC_PHONE" : "e8:99:c4:8e:97:36"
});
db["kuznia_DATASIZE:300_STEP:1_1_DEFAULT"].insert({
	"_id" : ObjectId("5595066e63f9130dc6bc0a5e"),
	"STATISTICS" : {
		"PERCENTILE - 90" : -64,
		"MIN" : NumberLong(-64),
		"STANDARD_DEVIATION" : 0,
		"PERCENTILE - 20" : -64,
		"PERCENTILE - 10" : -64,
		"MAX" : NumberLong(-64),
		"PERCENTILE - 70" : -64,
		"PERCENTILE - 50" : -64,
		"MODE" : NumberLong(-64),
		"MEDIANA" : -64,
		"MEAN" : -64
	},
	"HASH" : "DEFAULT",
	"SSID" : "PWSK_K",
	"RSSI_DATA" : [
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64)
	],
	"TIMESTAMP" : "2015-07-02:11-37-30.452",
	"POSITIONS" : [
		NumberLong(1),
		NumberLong(1)
	],
	"STEP" : [
		NumberLong(1),
		NumberLong(1)
	],
	"PLACE" : "kuznia",
	"MODE" : "FEED_MAP",
	"IP_PHONE" : "192.168.1.100",
	"RSSI_AVG_TIME" : "8472048",
	"MAC_AP" : "28:80:23:28:8a:12",
	"DATA_SIZE" : NumberLong(300),
	"MAC_PHONE" : "e8:99:c4:8e:97:36"
});
db["kuznia_DATASIZE:300_STEP:1_1_DEFAULT"].insert({
	"_id" : ObjectId("5595066f63f9130dc6bc0a5f"),
	"STATISTICS" : {
		"PERCENTILE - 90" : -76,
		"MIN" : NumberLong(-76),
		"STANDARD_DEVIATION" : 0,
		"PERCENTILE - 20" : -76,
		"PERCENTILE - 10" : -76,
		"MAX" : NumberLong(-76),
		"PERCENTILE - 70" : -76,
		"PERCENTILE - 50" : -76,
		"MODE" : NumberLong(-76),
		"MEDIANA" : -76,
		"MEAN" : -76
	},
	"HASH" : "DEFAULT",
	"SSID" : "PWSK",
	"RSSI_DATA" : [
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76)
	],
	"TIMESTAMP" : "2015-07-02:11-37-30.453",
	"POSITIONS" : [
		NumberLong(1),
		NumberLong(1)
	],
	"STEP" : [
		NumberLong(1),
		NumberLong(1)
	],
	"PLACE" : "kuznia",
	"MODE" : "FEED_MAP",
	"IP_PHONE" : "192.168.1.100",
	"RSSI_AVG_TIME" : "8472048",
	"MAC_AP" : "28:80:23:28:8a:11",
	"DATA_SIZE" : NumberLong(300),
	"MAC_PHONE" : "e8:99:c4:8e:97:36"
});
db["kuznia_DATASIZE:300_STEP:1_1_DEFAULT"].insert({
	"_id" : ObjectId("5595066f63f9130dc6bc0a60"),
	"STATISTICS" : {
		"PERCENTILE - 90" : -81,
		"MIN" : NumberLong(-81),
		"STANDARD_DEVIATION" : 0,
		"PERCENTILE - 20" : -81,
		"PERCENTILE - 10" : -81,
		"MAX" : NumberLong(-81),
		"PERCENTILE - 70" : -81,
		"PERCENTILE - 50" : -81,
		"MODE" : NumberLong(-81),
		"MEDIANA" : -81,
		"MEAN" : -81
	},
	"HASH" : "DEFAULT",
	"SSID" : "",
	"RSSI_DATA" : [
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81),
		NumberLong(-81)
	],
	"TIMESTAMP" : "2015-07-02:11-37-30.454",
	"POSITIONS" : [
		NumberLong(1),
		NumberLong(1)
	],
	"STEP" : [
		NumberLong(1),
		NumberLong(1)
	],
	"PLACE" : "kuznia",
	"MODE" : "FEED_MAP",
	"IP_PHONE" : "192.168.1.100",
	"RSSI_AVG_TIME" : "8472048",
	"MAC_AP" : "c4:6e:1f:35:c4:8c",
	"DATA_SIZE" : NumberLong(300),
	"MAC_PHONE" : "e8:99:c4:8e:97:36"
});
db["kuznia_DATASIZE:300_STEP:1_1_DEFAULT"].insert({
	"_id" : ObjectId("5595066f63f9130dc6bc0a61"),
	"STATISTICS" : {
		"PERCENTILE - 90" : -82,
		"MIN" : NumberLong(-82),
		"STANDARD_DEVIATION" : 0,
		"PERCENTILE - 20" : -82,
		"PERCENTILE - 10" : -82,
		"MAX" : NumberLong(-82),
		"PERCENTILE - 70" : -82,
		"PERCENTILE - 50" : -82,
		"MODE" : NumberLong(-82),
		"MEDIANA" : -82,
		"MEAN" : -82
	},
	"HASH" : "DEFAULT",
	"SSID" : "PWSK",
	"RSSI_DATA" : [
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82)
	],
	"TIMESTAMP" : "2015-07-02:11-37-30.455",
	"POSITIONS" : [
		NumberLong(1),
		NumberLong(1)
	],
	"STEP" : [
		NumberLong(1),
		NumberLong(1)
	],
	"PLACE" : "kuznia",
	"MODE" : "FEED_MAP",
	"IP_PHONE" : "192.168.1.100",
	"RSSI_AVG_TIME" : "8472048",
	"MAC_AP" : "28:80:23:28:7f:f1",
	"DATA_SIZE" : NumberLong(300),
	"MAC_PHONE" : "e8:99:c4:8e:97:36"
});
db["kuznia_DATASIZE:300_STEP:1_1_DEFAULT"].insert({
	"_id" : ObjectId("5595066f63f9130dc6bc0a62"),
	"STATISTICS" : {
		"PERCENTILE - 90" : -79,
		"MIN" : NumberLong(-79),
		"STANDARD_DEVIATION" : 0,
		"PERCENTILE - 20" : -79,
		"PERCENTILE - 10" : -79,
		"MAX" : NumberLong(-79),
		"PERCENTILE - 70" : -79,
		"PERCENTILE - 50" : -79,
		"MODE" : NumberLong(-79),
		"MEDIANA" : -79,
		"MEAN" : -79
	},
	"HASH" : "DEFAULT",
	"SSID" : "PWSK_K",
	"RSSI_DATA" : [
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79)
	],
	"TIMESTAMP" : "2015-07-02:11-37-30.456",
	"POSITIONS" : [
		NumberLong(1),
		NumberLong(1)
	],
	"STEP" : [
		NumberLong(1),
		NumberLong(1)
	],
	"PLACE" : "kuznia",
	"MODE" : "FEED_MAP",
	"IP_PHONE" : "192.168.1.100",
	"RSSI_AVG_TIME" : "8472048",
	"MAC_AP" : "28:80:23:28:7f:f2",
	"DATA_SIZE" : NumberLong(300),
	"MAC_PHONE" : "e8:99:c4:8e:97:36"
});
db["kuznia_DATASIZE:300_STEP:1_1_DEFAULT"].insert({
	"_id" : ObjectId("5595066f63f9130dc6bc0a63"),
	"STATISTICS" : {
		"PERCENTILE - 90" : -85,
		"MIN" : NumberLong(-85),
		"STANDARD_DEVIATION" : 0,
		"PERCENTILE - 20" : -85,
		"PERCENTILE - 10" : -85,
		"MAX" : NumberLong(-85),
		"PERCENTILE - 70" : -85,
		"PERCENTILE - 50" : -85,
		"MODE" : NumberLong(-85),
		"MEDIANA" : -85,
		"MEAN" : -85
	},
	"HASH" : "DEFAULT",
	"SSID" : "PWSK_K",
	"RSSI_DATA" : [
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85)
	],
	"TIMESTAMP" : "2015-07-02:11-37-30.457",
	"POSITIONS" : [
		NumberLong(1),
		NumberLong(1)
	],
	"STEP" : [
		NumberLong(1),
		NumberLong(1)
	],
	"PLACE" : "kuznia",
	"MODE" : "FEED_MAP",
	"IP_PHONE" : "192.168.1.100",
	"RSSI_AVG_TIME" : "8472048",
	"MAC_AP" : "28:80:23:28:8a:b2",
	"DATA_SIZE" : NumberLong(300),
	"MAC_PHONE" : "e8:99:c4:8e:97:36"
});
db["kuznia_DATASIZE:300_STEP:1_1_DEFAULT"].insert({
	"_id" : ObjectId("5595066f63f9130dc6bc0a64"),
	"STATISTICS" : {
		"PERCENTILE - 90" : -63,
		"MIN" : NumberLong(-63),
		"STANDARD_DEVIATION" : 0,
		"PERCENTILE - 20" : -63,
		"PERCENTILE - 10" : -63,
		"MAX" : NumberLong(-63),
		"PERCENTILE - 70" : -63,
		"PERCENTILE - 50" : -63,
		"MODE" : NumberLong(-63),
		"MEDIANA" : -63,
		"MEAN" : -63
	},
	"HASH" : "DEFAULT",
	"SSID" : "PWSK_K",
	"RSSI_DATA" : [
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63),
		NumberLong(-63)
	],
	"TIMESTAMP" : "2015-07-02:11-37-30.458",
	"POSITIONS" : [
		NumberLong(1),
		NumberLong(1)
	],
	"STEP" : [
		NumberLong(1),
		NumberLong(1)
	],
	"PLACE" : "kuznia",
	"MODE" : "FEED_MAP",
	"IP_PHONE" : "192.168.1.100",
	"RSSI_AVG_TIME" : "8472048",
	"MAC_AP" : "28:80:23:28:8a:02",
	"DATA_SIZE" : NumberLong(300),
	"MAC_PHONE" : "e8:99:c4:8e:97:36"
});
db["kuznia_DATASIZE:300_STEP:1_1_DEFAULT"].insert({
	"_id" : ObjectId("5595066f63f9130dc6bc0a65"),
	"STATISTICS" : {
		"PERCENTILE - 90" : -64,
		"MIN" : NumberLong(-64),
		"STANDARD_DEVIATION" : 0,
		"PERCENTILE - 20" : -64,
		"PERCENTILE - 10" : -64,
		"MAX" : NumberLong(-64),
		"PERCENTILE - 70" : -64,
		"PERCENTILE - 50" : -64,
		"MODE" : NumberLong(-64),
		"MEDIANA" : -64,
		"MEAN" : -64
	},
	"HASH" : "DEFAULT",
	"SSID" : "PWSK",
	"RSSI_DATA" : [
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64)
	],
	"TIMESTAMP" : "2015-07-02:11-37-30.459",
	"POSITIONS" : [
		NumberLong(1),
		NumberLong(1)
	],
	"STEP" : [
		NumberLong(1),
		NumberLong(1)
	],
	"PLACE" : "kuznia",
	"MODE" : "FEED_MAP",
	"IP_PHONE" : "192.168.1.100",
	"RSSI_AVG_TIME" : "8472048",
	"MAC_AP" : "28:80:23:28:8a:01",
	"DATA_SIZE" : NumberLong(300),
	"MAC_PHONE" : "e8:99:c4:8e:97:36"
});
db["kuznia_DATASIZE:300_STEP:1_1_DEFAULT"].insert({
	"_id" : ObjectId("5595066f63f9130dc6bc0a66"),
	"STATISTICS" : {
		"PERCENTILE - 90" : -67,
		"MIN" : NumberLong(-67),
		"STANDARD_DEVIATION" : 0,
		"PERCENTILE - 20" : -67,
		"PERCENTILE - 10" : -67,
		"MAX" : NumberLong(-67),
		"PERCENTILE - 70" : -67,
		"PERCENTILE - 50" : -67,
		"MODE" : NumberLong(-67),
		"MEDIANA" : -67,
		"MEAN" : -67
	},
	"HASH" : "DEFAULT",
	"SSID" : "ParkWielokulturowy",
	"RSSI_DATA" : [
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67)
	],
	"TIMESTAMP" : "2015-07-02:11-37-30.460",
	"POSITIONS" : [
		NumberLong(1),
		NumberLong(1)
	],
	"STEP" : [
		NumberLong(1),
		NumberLong(1)
	],
	"PLACE" : "kuznia",
	"MODE" : "FEED_MAP",
	"IP_PHONE" : "192.168.1.100",
	"RSSI_AVG_TIME" : "8472048",
	"MAC_AP" : "28:80:23:28:8a:10",
	"DATA_SIZE" : NumberLong(300),
	"MAC_PHONE" : "e8:99:c4:8e:97:36"
});
db["kuznia_DATASIZE:300_STEP:1_1_DEFAULT"].insert({
	"_id" : ObjectId("5595066f63f9130dc6bc0a67"),
	"STATISTICS" : {
		"PERCENTILE - 90" : -76,
		"MIN" : NumberLong(-76),
		"STANDARD_DEVIATION" : 0,
		"PERCENTILE - 20" : -76,
		"PERCENTILE - 10" : -76,
		"MAX" : NumberLong(-76),
		"PERCENTILE - 70" : -76,
		"PERCENTILE - 50" : -76,
		"MODE" : NumberLong(-76),
		"MEDIANA" : -76,
		"MEAN" : -76
	},
	"HASH" : "DEFAULT",
	"SSID" : "ParkWielokulturowy",
	"RSSI_DATA" : [
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76)
	],
	"TIMESTAMP" : "2015-07-02:11-37-30.461",
	"POSITIONS" : [
		NumberLong(1),
		NumberLong(1)
	],
	"STEP" : [
		NumberLong(1),
		NumberLong(1)
	],
	"PLACE" : "kuznia",
	"MODE" : "FEED_MAP",
	"IP_PHONE" : "192.168.1.100",
	"RSSI_AVG_TIME" : "8472048",
	"MAC_AP" : "28:80:23:28:7e:90",
	"DATA_SIZE" : NumberLong(300),
	"MAC_PHONE" : "e8:99:c4:8e:97:36"
});
db["kuznia_DATASIZE:300_STEP:1_1_DEFAULT"].insert({
	"_id" : ObjectId("5595066f63f9130dc6bc0a68"),
	"STATISTICS" : {
		"PERCENTILE - 90" : -73,
		"MIN" : NumberLong(-73),
		"STANDARD_DEVIATION" : 0,
		"PERCENTILE - 20" : -73,
		"PERCENTILE - 10" : -73,
		"MAX" : NumberLong(-73),
		"PERCENTILE - 70" : -73,
		"PERCENTILE - 50" : -73,
		"MODE" : NumberLong(-73),
		"MEDIANA" : -73,
		"MEAN" : -73
	},
	"HASH" : "DEFAULT",
	"SSID" : "ParkWielokulturowy",
	"RSSI_DATA" : [
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73)
	],
	"TIMESTAMP" : "2015-07-02:11-37-30.462",
	"POSITIONS" : [
		NumberLong(1),
		NumberLong(1)
	],
	"STEP" : [
		NumberLong(1),
		NumberLong(1)
	],
	"PLACE" : "kuznia",
	"MODE" : "FEED_MAP",
	"IP_PHONE" : "192.168.1.100",
	"RSSI_AVG_TIME" : "8472048",
	"MAC_AP" : "28:80:23:28:7f:f0",
	"DATA_SIZE" : NumberLong(300),
	"MAC_PHONE" : "e8:99:c4:8e:97:36"
});
db["kuznia_DATASIZE:300_STEP:1_1_DEFAULT"].insert({
	"_id" : ObjectId("5595066f63f9130dc6bc0a69"),
	"STATISTICS" : {
		"PERCENTILE - 90" : -82,
		"MIN" : NumberLong(-82),
		"STANDARD_DEVIATION" : 0,
		"PERCENTILE - 20" : -82,
		"PERCENTILE - 10" : -82,
		"MAX" : NumberLong(-82),
		"PERCENTILE - 70" : -82,
		"PERCENTILE - 50" : -82,
		"MODE" : NumberLong(-82),
		"MEDIANA" : -82,
		"MEAN" : -82
	},
	"HASH" : "DEFAULT",
	"SSID" : "ParkWielokulturowy",
	"RSSI_DATA" : [
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82)
	],
	"TIMESTAMP" : "2015-07-02:11-37-30.463",
	"POSITIONS" : [
		NumberLong(1),
		NumberLong(1)
	],
	"STEP" : [
		NumberLong(1),
		NumberLong(1)
	],
	"PLACE" : "kuznia",
	"MODE" : "FEED_MAP",
	"IP_PHONE" : "192.168.1.100",
	"RSSI_AVG_TIME" : "8472048",
	"MAC_AP" : "28:80:23:28:8a:b0",
	"DATA_SIZE" : NumberLong(300),
	"MAC_PHONE" : "e8:99:c4:8e:97:36"
});
db["kuznia_DATASIZE:300_STEP:1_1_DEFAULT"].insert({
	"_id" : ObjectId("5595067063f9130dc6bc0a6a"),
	"STATISTICS" : {
		"PERCENTILE - 90" : -64,
		"MIN" : NumberLong(-64),
		"STANDARD_DEVIATION" : 0,
		"PERCENTILE - 20" : -64,
		"PERCENTILE - 10" : -64,
		"MAX" : NumberLong(-64),
		"PERCENTILE - 70" : -64,
		"PERCENTILE - 50" : -64,
		"MODE" : NumberLong(-64),
		"MEDIANA" : -64,
		"MEAN" : -64
	},
	"HASH" : "DEFAULT",
	"SSID" : "ParkWielokulturowy",
	"RSSI_DATA" : [
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64)
	],
	"TIMESTAMP" : "2015-07-02:11-37-30.464",
	"POSITIONS" : [
		NumberLong(1),
		NumberLong(1)
	],
	"STEP" : [
		NumberLong(1),
		NumberLong(1)
	],
	"PLACE" : "kuznia",
	"MODE" : "FEED_MAP",
	"IP_PHONE" : "192.168.1.100",
	"RSSI_AVG_TIME" : "8472048",
	"MAC_AP" : "28:80:23:28:8a:00",
	"DATA_SIZE" : NumberLong(300),
	"MAC_PHONE" : "e8:99:c4:8e:97:36"
});
db["kuznia_DATASIZE:300_STEP:1_1_DEFAULT"].insert({
	"_id" : ObjectId("5595067063f9130dc6bc0a6b"),
	"STATISTICS" : {
		"PERCENTILE - 90" : -73,
		"MIN" : NumberLong(-73),
		"STANDARD_DEVIATION" : 0,
		"PERCENTILE - 20" : -73,
		"PERCENTILE - 10" : -73,
		"MAX" : NumberLong(-73),
		"PERCENTILE - 70" : -73,
		"PERCENTILE - 50" : -73,
		"MODE" : NumberLong(-73),
		"MEDIANA" : -73,
		"MEAN" : -73
	},
	"HASH" : "DEFAULT",
	"SSID" : "PWSK_K",
	"RSSI_DATA" : [
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73)
	],
	"TIMESTAMP" : "2015-07-02:11-37-30.465",
	"POSITIONS" : [
		NumberLong(1),
		NumberLong(1)
	],
	"STEP" : [
		NumberLong(1),
		NumberLong(1)
	],
	"PLACE" : "kuznia",
	"MODE" : "FEED_MAP",
	"IP_PHONE" : "192.168.1.100",
	"RSSI_AVG_TIME" : "8472048",
	"MAC_AP" : "28:80:23:28:7e:92",
	"DATA_SIZE" : NumberLong(300),
	"MAC_PHONE" : "e8:99:c4:8e:97:36"
});
db["kuznia_DATASIZE:300_STEP:1_1_DEFAULT"].insert({
	"_id" : ObjectId("5595067063f9130dc6bc0a6c"),
	"STATISTICS" : {
		"PERCENTILE - 90" : -73,
		"MIN" : NumberLong(-73),
		"STANDARD_DEVIATION" : 0,
		"PERCENTILE - 20" : -73,
		"PERCENTILE - 10" : -73,
		"MAX" : NumberLong(-73),
		"PERCENTILE - 70" : -73,
		"PERCENTILE - 50" : -73,
		"MODE" : NumberLong(-73),
		"MEDIANA" : -73,
		"MEAN" : -73
	},
	"HASH" : "DEFAULT",
	"SSID" : "",
	"RSSI_DATA" : [
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73),
		NumberLong(-73)
	],
	"TIMESTAMP" : "2015-07-02:11-37-30.466",
	"POSITIONS" : [
		NumberLong(1),
		NumberLong(1)
	],
	"STEP" : [
		NumberLong(1),
		NumberLong(1)
	],
	"PLACE" : "kuznia",
	"MODE" : "FEED_MAP",
	"IP_PHONE" : "192.168.1.100",
	"RSSI_AVG_TIME" : "8472048",
	"MAC_AP" : "00:1a:70:a2:61:b0",
	"DATA_SIZE" : NumberLong(300),
	"MAC_PHONE" : "e8:99:c4:8e:97:36"
});
db["kuznia_DATASIZE:300_STEP:1_1_DEFAULT"].insert({
	"_id" : ObjectId("5595067063f9130dc6bc0a6d"),
	"STATISTICS" : {
		"PERCENTILE - 90" : -85,
		"MIN" : NumberLong(-85),
		"STANDARD_DEVIATION" : 0,
		"PERCENTILE - 20" : -85,
		"PERCENTILE - 10" : -85,
		"MAX" : NumberLong(-85),
		"PERCENTILE - 70" : -85,
		"PERCENTILE - 50" : -85,
		"MODE" : NumberLong(-85),
		"MEDIANA" : -85,
		"MEAN" : -85
	},
	"HASH" : "DEFAULT",
	"SSID" : "PWSK",
	"RSSI_DATA" : [
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85)
	],
	"TIMESTAMP" : "2015-07-02:11-37-30.467",
	"POSITIONS" : [
		NumberLong(1),
		NumberLong(1)
	],
	"STEP" : [
		NumberLong(1),
		NumberLong(1)
	],
	"PLACE" : "kuznia",
	"MODE" : "FEED_MAP",
	"IP_PHONE" : "192.168.1.100",
	"RSSI_AVG_TIME" : "8472048",
	"MAC_AP" : "28:80:23:28:8a:b1",
	"DATA_SIZE" : NumberLong(300),
	"MAC_PHONE" : "e8:99:c4:8e:97:36"
});
db["kuznia_DATASIZE:300_STEP:1_1_DEFAULT"].insert({
	"_id" : ObjectId("5595067063f9130dc6bc0a6e"),
	"STATISTICS" : {
		"PERCENTILE - 90" : -82,
		"MIN" : NumberLong(-82),
		"STANDARD_DEVIATION" : 0,
		"PERCENTILE - 20" : -82,
		"PERCENTILE - 10" : -82,
		"MAX" : NumberLong(-82),
		"PERCENTILE - 70" : -82,
		"PERCENTILE - 50" : -82,
		"MODE" : NumberLong(-82),
		"MEDIANA" : -82,
		"MEAN" : -82
	},
	"HASH" : "DEFAULT",
	"SSID" : "PWSK",
	"RSSI_DATA" : [
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82)
	],
	"TIMESTAMP" : "2015-07-02:11-37-30.468",
	"POSITIONS" : [
		NumberLong(1),
		NumberLong(1)
	],
	"STEP" : [
		NumberLong(1),
		NumberLong(1)
	],
	"PLACE" : "kuznia",
	"MODE" : "FEED_MAP",
	"IP_PHONE" : "192.168.1.100",
	"RSSI_AVG_TIME" : "8472048",
	"MAC_AP" : "28:80:23:28:7e:81",
	"DATA_SIZE" : NumberLong(300),
	"MAC_PHONE" : "e8:99:c4:8e:97:36"
});
db["kuznia_DATASIZE:300_STEP:1_1_DEFAULT"].insert({
	"_id" : ObjectId("5595067063f9130dc6bc0a6f"),
	"STATISTICS" : {
		"PERCENTILE - 90" : -82,
		"MIN" : NumberLong(-82),
		"STANDARD_DEVIATION" : 0,
		"PERCENTILE - 20" : -82,
		"PERCENTILE - 10" : -82,
		"MAX" : NumberLong(-82),
		"PERCENTILE - 70" : -82,
		"PERCENTILE - 50" : -82,
		"MODE" : NumberLong(-82),
		"MEDIANA" : -82,
		"MEAN" : -82
	},
	"HASH" : "DEFAULT",
	"SSID" : "PWSK_K",
	"RSSI_DATA" : [
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82)
	],
	"TIMESTAMP" : "2015-07-02:11-37-30.469",
	"POSITIONS" : [
		NumberLong(1),
		NumberLong(1)
	],
	"STEP" : [
		NumberLong(1),
		NumberLong(1)
	],
	"PLACE" : "kuznia",
	"MODE" : "FEED_MAP",
	"IP_PHONE" : "192.168.1.100",
	"RSSI_AVG_TIME" : "8472048",
	"MAC_AP" : "28:80:23:28:7e:82",
	"DATA_SIZE" : NumberLong(300),
	"MAC_PHONE" : "e8:99:c4:8e:97:36"
});
db["kuznia_DATASIZE:300_STEP:1_1_DEFAULT"].insert({
	"_id" : ObjectId("5595067063f9130dc6bc0a70"),
	"STATISTICS" : {
		"PERCENTILE - 90" : -82,
		"MIN" : NumberLong(-82),
		"STANDARD_DEVIATION" : 0,
		"PERCENTILE - 20" : -82,
		"PERCENTILE - 10" : -82,
		"MAX" : NumberLong(-82),
		"PERCENTILE - 70" : -82,
		"PERCENTILE - 50" : -82,
		"MODE" : NumberLong(-82),
		"MEDIANA" : -82,
		"MEAN" : -82
	},
	"HASH" : "DEFAULT",
	"SSID" : "ParkWielokulturowy",
	"RSSI_DATA" : [
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82),
		NumberLong(-82)
	],
	"TIMESTAMP" : "2015-07-02:11-37-30.470",
	"POSITIONS" : [
		NumberLong(1),
		NumberLong(1)
	],
	"STEP" : [
		NumberLong(1),
		NumberLong(1)
	],
	"PLACE" : "kuznia",
	"MODE" : "FEED_MAP",
	"IP_PHONE" : "192.168.1.100",
	"RSSI_AVG_TIME" : "8472048",
	"MAC_AP" : "28:80:23:28:7e:80",
	"DATA_SIZE" : NumberLong(300),
	"MAC_PHONE" : "e8:99:c4:8e:97:36"
});
db["kuznia_DATASIZE:300_STEP:1_1_DEFAULT"].insert({
	"_id" : ObjectId("559506ba63f9130dc6bc0a71"),
	"STATISTICS" : {
		"PERCENTILE - 90" : 21.966,
		"MIN" : -20.52,
		"STANDARD_DEVIATION" : 16.973950620083507,
		"PERCENTILE - 20" : -19.4519992,
		"PERCENTILE - 10" : -19.859999,
		"MAX" : 25.08,
		"PERCENTILE - 70" : 20.76,
		"PERCENTILE - 50" : -3,
		"MODE" : NumberLong(-3),
		"MEDIANA" : -3.239130434782609,
		"MEAN" : -0.31046665977777776
	},
	"HASH" : "DEFAULT",
	"MAC_PHONE" : "e8:99:c4:8e:97:36",
	"TIMESTAMP" : "2015-07-02:11-38-48.75",
	"STEP" : [
		NumberLong(1),
		NumberLong(1)
	],
	"PLACE" : "kuznia",
	"MODE" : "FEED_MAP",
	"IP_PHONE" : "192.168.1.100",
	"POSITIONS" : [
		NumberLong(2),
		NumberLong(2)
	],
	"MAGNETIC_AVG_TIME" : "27875",
	"MAGNETIC_DATA" : [
		-18.6,
		-2.52,
		24.18,
		-19.439999,
		-3.54,
		23.699999,
		-19.14,
		-4.14,
		24.24,
		-19.14,
		-3.54,
		24.24,
		-19.38,
		-3.78,
		24.42,
		-19.02,
		-3.24,
		25.08,
		-19.199999,
		-2.8799999,
		24.66,
		-19.08,
		-3.1799998,
		24.3,
		-19.199999,
		-3.54,
		24.3,
		-19.14,
		-3.1799998,
		24.3,
		-19.38,
		-3.06,
		24.06,
		-19.439999,
		-3.1799998,
		23.76,
		-19.32,
		-3.12,
		23.46,
		-19.439999,
		-3.36,
		23.22,
		-19.5,
		-3.4199998,
		23.16,
		-19.56,
		-3.54,
		23.4,
		-19.68,
		-3.4199998,
		23.279999,
		-19.439999,
		-3.54,
		23.16,
		-19.5,
		-3.78,
		22.98,
		-19.68,
		-3.6599998,
		23.1,
		-19.92,
		-3.78,
		23.22,
		-19.98,
		-3.54,
		23.039999,
		-20.16,
		-3.54,
		22.92,
		-20.16,
		-3.36,
		22.38,
		-20.34,
		-3.48,
		22.439999,
		-20.22,
		-3.36,
		22.38,
		-19.74,
		-3.12,
		22.439999,
		-19.8,
		-2.9399998,
		22.439999,
		-19.68,
		-3.4199998,
		22.26,
		-19.68,
		-3.3,
		22.38,
		-19.68,
		-3.1799998,
		22.439999,
		-19.859999,
		-3.24,
		22.32,
		-19.859999,
		-3.1799998,
		22.5,
		-19.92,
		-3.36,
		22.5,
		-19.56,
		-3.48,
		22.56,
		-19.56,
		-3.3,
		22.8,
		-19.5,
		-3.1799998,
		22.74,
		-19.619999,
		-3.24,
		22.619999,
		-19.38,
		-3.48,
		22.98,
		-19.26,
		-3.54,
		22.98,
		-19.26,
		-3.78,
		23.039999,
		-19.38,
		-3.72,
		22.92,
		-19.5,
		-3.72,
		22.68,
		-19.5,
		-3.9599998,
		22.68,
		-19.26,
		-3.9599998,
		22.74,
		-19.26,
		-4.2,
		22.92,
		-19.439999,
		-4.2,
		22.56,
		-19.199999,
		-4.08,
		22.5,
		-19.14,
		-3.78,
		22.38,
		-19.02,
		-4.02,
		22.439999,
		-18.84,
		-3.9599998,
		22.5,
		-18.72,
		-3.6,
		22.619999,
		-18.66,
		-3.84,
		22.68,
		-18.6,
		-3.6,
		22.619999,
		-18.42,
		-3.54,
		22.8,
		-18.66,
		-3.48,
		22.92,
		-18.48,
		-3.54,
		22.98,
		-18.539999,
		-3.54,
		23.039999,
		-18.9,
		-3.4199998,
		22.92,
		-18.9,
		-3.6,
		22.92,
		-19.08,
		-3.48,
		22.74,
		-19.199999,
		-3.48,
		22.56,
		-19.26,
		-3.4199998,
		22.32,
		-19.26,
		-3.3,
		22.38,
		-19.439999,
		-3.4199998,
		22.32,
		-19.74,
		-3.24,
		22.14,
		-19.68,
		-3.48,
		22.02,
		-19.8,
		-3.48,
		21.9,
		-19.859999,
		-3.4199998,
		21.84,
		-19.8,
		-3.6,
		21.9,
		-19.98,
		-3.54,
		21.84,
		-20.1,
		-3.54,
		21.48,
		-20.1,
		-3.3,
		21.42,
		-19.619999,
		-3.1799998,
		21.359999,
		-19.56,
		-3.06,
		21.48,
		-19.619999,
		-3.06,
		21.359999,
		-19.5,
		NumberLong(-3),
		21.359999,
		-19.32,
		-2.8799999,
		21.359999,
		-19.32,
		-2.82,
		21.42,
		-19.439999,
		-2.8799999,
		21.359999,
		-19.68,
		-3.06,
		21.42,
		-19.859999,
		NumberLong(-3),
		21.42,
		-19.859999,
		-2.8799999,
		21.359999,
		-20.039999,
		-2.9399998,
		21.539999,
		-20.279999,
		-2.76,
		21.48,
		-20.16,
		-2.82,
		21.359999,
		-20.1,
		-3.12,
		21.48,
		-20.279999,
		-3.12,
		21.3,
		-20.4,
		-3.06,
		21.3,
		-20.22,
		-3.06,
		21.24,
		-20.16,
		NumberLong(-3),
		21.24,
		-20.1,
		NumberLong(-3),
		21.3,
		-19.98,
		NumberLong(-3),
		21.3,
		-19.92,
		-3.1799998,
		21.359999,
		-19.92,
		NumberLong(-3),
		21.24,
		-19.8,
		-3.12,
		21.539999,
		-19.619999,
		NumberLong(-3),
		21.539999,
		-19.5,
		-3.12,
		21.66,
		-19.5,
		-3.12,
		21.539999,
		-19.26,
		-3.3,
		21.66,
		-19.32,
		-3.06,
		21.84,
		-19.32,
		-3.1799998,
		21.96,
		-19.199999,
		-3.12,
		21.9,
		-19.32,
		-2.9399998,
		21.779999,
		-19.5,
		-2.6399999,
		21.84,
		-19.74,
		-2.76,
		21.6,
		-19.8,
		-2.6399999,
		21.6,
		-19.98,
		-2.52,
		21.42,
		-20.1,
		-2.6399999,
		21.18,
		-19.98,
		-2.58,
		21.06,
		-19.98,
		-2.7,
		20.939999,
		-19.98,
		-3.06,
		21.18,
		-19.98,
		-3.06,
		21.119999,
		-19.8,
		NumberLong(-3),
		21.18,
		-19.92,
		-3.1799998,
		21.18,
		-19.98,
		-3.3,
		21.18,
		-19.98,
		-3.24,
		21.06,
		-20.16,
		-3.24,
		21.18,
		-20.279999,
		-3.12,
		21.18,
		-20.34,
		-2.9399998,
		21.18,
		-20.34,
		-2.8799999,
		21.24,
		-20.52,
		NumberLong(-3),
		21.18,
		-20.279999,
		-2.8799999,
		21.359999,
		-20.34,
		-2.58,
		21.42,
		-20.16,
		-2.52,
		21.48,
		-20.16,
		-2.3999999,
		21.66,
		-20.1,
		-2.3999999,
		21.66,
		-20.22,
		-2.3999999,
		21.539999,
		-20.16,
		-2.58,
		21.42,
		-20.039999,
		-2.58,
		21.42,
		-20.1,
		-2.46,
		21.24,
		-20.039999,
		-2.6399999,
		21.18,
		-20.34,
		-2.6399999,
		21.359999,
		-20.52,
		-2.76,
		21.18,
		-20.46,
		-2.46,
		21.3,
		-20.279999,
		-2.46,
		21.3,
		-20.1,
		-2.22,
		21.359999,
		-20.16,
		-2.04,
		21.66,
		-20.1,
		-2.1,
		21.6,
		-19.92,
		-2.1,
		21.779999,
		-19.68,
		-2.1,
		21.48,
		-19.32,
		-2.22,
		21.48,
		-19.38,
		-2.3999999,
		21.48,
		-19.38,
		-2.28,
		21.6,
		-19.38,
		-2.58,
		21.66,
		-19.5,
		-2.7,
		21.66,
		-19.56,
		-2.8799999,
		21.779999,
		-19.5,
		-2.82,
		21.9,
		-19.439999,
		-2.7,
		22.14,
		-19.08,
		-2.7,
		22.26,
		-19.02,
		-2.82,
		22.38,
		-18.779999,
		-3.1799998,
		22.56,
		-18.72,
		-3.06,
		22.74,
		-18.539999,
		-3.3,
		22.74,
		-18.48,
		-3.4199998,
		22.92,
		-18.6,
		-3.72,
		22.859999,
		-18.779999,
		-3.78,
		23.039999,
		-18.96,
		-3.78,
		23.039999,
		-19.02,
		-3.84,
		22.8,
		-19.26,
		-3.78,
		22.68,
		-19.26,
		-3.78,
		22.38,
		-19.38,
		-3.6,
		22.439999,
		-19.5,
		-3.48,
		22.32,
		-19.5,
		-3.36,
		22.199999,
		-19.5,
		-3.4199998,
		21.96,
		-19.8,
		-3.3,
		21.96,
		-19.8,
		-3.24,
		22.199999,
		-19.68,
		-3.1799998,
		22.26,
		-19.859999,
		-3.3,
		22.26,
		-19.56,
		-3.24,
		22.199999,
		-19.439999,
		-3.3,
		22.02,
		-19.56,
		-3.1799998,
		22.14,
		-19.32,
		-3.24,
		22.14,
		-19.5,
		-3.3,
		21.96,
		-19.68,
		-3.4199998,
		21.539999,
		-19.8,
		-3.4199998,
		21.48,
		-19.98,
		-3.4199998,
		21.42,
		-20.1,
		-3.3,
		21.48,
		-20.1,
		-3.48,
		21.359999,
		-20.039999,
		-3.36,
		21.24,
		-20.22,
		-3.24,
		21.18,
		-19.98,
		-3.24,
		21.3,
		-19.859999,
		-3.06,
		21.539999,
		-19.68,
		-2.8799999,
		21.6,
		-19.5,
		-2.6399999,
		21.539999,
		-19.38,
		-2.6399999,
		21.359999,
		-19.439999,
		-2.7,
		21.539999,
		-19.26,
		-2.7,
		21.539999,
		-19.08,
		-2.52,
		21.359999,
		-19.26,
		-2.52,
		21.3,
		-19.32,
		-2.76,
		21.24,
		-19.199999,
		NumberLong(-3),
		21.48,
		-19.26,
		-2.9399998,
		21.42,
		-19.199999,
		-2.8799999,
		21.3,
		-19.32,
		-2.9399998,
		21.18,
		-19.26,
		-3.12,
		21.24,
		-18.96,
		-3.12,
		21.3,
		-18.72,
		-3.1799998,
		21.24,
		-18.6,
		-3.12,
		21.359999,
		-18.66,
		-2.9399998,
		21.18,
		-18.779999,
		NumberLong(-3),
		21.48,
		-18.66,
		-3.06,
		21.48,
		-18.6,
		NumberLong(-3),
		21.6,
		-18.84,
		NumberLong(-3),
		21.539999,
		-19.08,
		-2.9399998,
		21.42,
		-19.02,
		NumberLong(-3),
		21.42,
		-19.14,
		-2.9399998,
		21.42,
		-19.32,
		-3.12,
		21.42,
		-19.32,
		NumberLong(-3),
		21.119999,
		-19.38,
		-3.06,
		21.24,
		-19.38,
		NumberLong(-3),
		21.24,
		-19.439999,
		-3.06,
		21.18,
		-19.26,
		-3.1799998,
		21.119999,
		-19.56,
		NumberLong(-3),
		21.06,
		-19.56,
		-2.9399998,
		20.939999,
		-19.56,
		-2.9399998,
		20.76,
		-19.619999,
		-2.9399998,
		20.939999,
		-19.5,
		-2.9399998,
		20.76,
		-19.68,
		NumberLong(-3),
		20.64,
		-19.74,
		-2.82,
		20.46,
		-19.859999,
		-2.58,
		20.58,
		-19.74,
		-2.7,
		20.699999,
		-19.8,
		-2.76,
		20.939999,
		-19.92,
		-2.7,
		20.939999,
		-19.92,
		-2.7,
		NumberLong(21),
		-20.039999,
		-2.7,
		NumberLong(21),
		-19.859999,
		-2.76,
		21.06,
		-19.859999,
		-2.76,
		21.18,
		-19.98,
		NumberLong(-3),
		21.359999,
		-20.1,
		-3.06,
		21.18,
		-20.1,
		-2.9399998,
		NumberLong(21),
		-19.859999,
		-2.82,
		NumberLong(21),
		-19.68,
		-2.9399998,
		20.88,
		-19.8,
		-2.82,
		20.88,
		-19.8,
		-2.7,
		NumberLong(21),
		-19.74,
		-2.58,
		NumberLong(21),
		-19.56,
		-2.82,
		20.58,
		-19.619999,
		-2.76,
		20.64,
		-19.68,
		-2.8799999,
		20.699999,
		-19.74,
		-3.06,
		20.76,
		-20.039999,
		-2.76,
		20.76,
		-20.22,
		-2.76,
		20.82,
		-20.039999,
		-2.76,
		20.64,
		-20.1,
		-2.8799999,
		20.58,
		-20.22,
		-2.52,
		20.76,
		-20.1,
		-2.52,
		20.76,
		-19.98,
		-2.3999999,
		20.82,
		-19.68,
		-2.58,
		20.699999,
		-19.38,
		-2.52,
		20.76,
		-19.56,
		-2.6399999,
		20.88,
		-19.439999,
		-2.52,
		20.939999,
		-19.26,
		-2.6399999,
		20.939999,
		-19.38,
		-2.8799999,
		20.76,
		-19.38,
		-2.9399998,
		20.64,
		-19.26,
		-3.1799998,
		20.699999,
		-19.199999,
		-3.06,
		NumberLong(21),
		-19.26,
		-3.06,
		20.88,
		-19.32,
		-2.82,
		NumberLong(21),
		-19.439999,
		-2.76,
		20.939999,
		-19.5,
		-2.52,
		20.939999,
		-19.32,
		-2.34,
		NumberLong(21),
		-19.199999,
		-2.1599998,
		21.119999,
		-19.26,
		-1.9799999,
		21.119999,
		-19.439999,
		-2.04,
		20.82,
		-19.439999,
		-1.86,
		20.939999,
		-19.32,
		-1.9799999,
		20.76,
		-19.32,
		-2.22,
		20.699999,
		-19.32,
		-2.28,
		20.76,
		-19.5,
		-2.28,
		20.88,
		-19.5,
		-2.34,
		20.88,
		-19.619999,
		-2.46,
		20.64,
		-19.8,
		-2.6399999,
		20.58,
		-19.859999,
		-2.9399998,
		20.64,
		-19.859999,
		-2.9399998,
		20.58,
		-19.98,
		NumberLong(-3),
		20.64,
		-20.22,
		NumberLong(-3),
		20.699999,
		-20.16,
		-3.12,
		20.699999,
		-20.279999,
		-3.12,
		20.82,
		-20.16,
		-3.12,
		21.119999,
		-20.279999,
		-2.76,
		21.119999,
		-20.34,
		-2.6399999,
		NumberLong(21),
		-20.52,
		-2.58,
		NumberLong(21),
		-20.279999,
		-2.52,
		21.24,
		-20.039999,
		-2.58,
		NumberLong(21),
		-19.92,
		-2.52,
		20.82,
		-19.8,
		-2.3999999,
		20.76,
		-19.8,
		-2.22,
		20.76,
		-19.38,
		-2.52,
		20.699999,
		-19.32,
		-2.7,
		20.76,
		-19.26,
		-2.76,
		20.64,
		-19.32,
		-2.8799999,
		20.52,
		-19.439999,
		-2.8799999,
		20.64,
		-19.439999,
		-2.82,
		20.76,
		-19.619999,
		-2.9399998,
		20.699999,
		-19.5,
		-3.1799998,
		20.58,
		-19.74,
		-3.06,
		20.76,
		-19.92,
		NumberLong(-3),
		20.58,
		-19.8,
		NumberLong(-3),
		20.939999,
		-19.619999,
		-2.9399998,
		20.76,
		-19.56,
		-2.8799999,
		20.64
	],
	"DATA_SIZE" : NumberLong(300)
});
db["kuznia_DATASIZE:300_STEP:1_1_DEFAULT"].insert({
	"_id" : ObjectId("559506ba63f9130dc6bc0a72"),
	"STATISTICS" : {
		"PERCENTILE - 90" : -67,
		"MIN" : NumberLong(-67),
		"STANDARD_DEVIATION" : 0,
		"PERCENTILE - 20" : -67,
		"PERCENTILE - 10" : -67,
		"MAX" : NumberLong(-67),
		"PERCENTILE - 70" : -67,
		"PERCENTILE - 50" : -67,
		"MODE" : NumberLong(-67),
		"MEDIANA" : -67,
		"MEAN" : -67
	},
	"HASH" : "DEFAULT",
	"SSID" : "TP-LINK_489B26",
	"RSSI_DATA" : [
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67)
	],
	"TIMESTAMP" : "2015-07-02:11-38-51.45",
	"POSITIONS" : [
		NumberLong(2),
		NumberLong(2)
	],
	"STEP" : [
		NumberLong(1),
		NumberLong(1)
	],
	"PLACE" : "kuznia",
	"MODE" : "FEED_MAP",
	"IP_PHONE" : "192.168.1.100",
	"RSSI_AVG_TIME" : "6615494",
	"MAC_AP" : "f8:d1:11:48:9b:26",
	"DATA_SIZE" : NumberLong(300),
	"MAC_PHONE" : "e8:99:c4:8e:97:36"
});
db["kuznia_DATASIZE:300_STEP:1_1_DEFAULT"].insert({
	"_id" : ObjectId("559506bb63f9130dc6bc0a73"),
	"STATISTICS" : {
		"PERCENTILE - 90" : -76,
		"MIN" : NumberLong(-76),
		"STANDARD_DEVIATION" : 0,
		"PERCENTILE - 20" : -76,
		"PERCENTILE - 10" : -76,
		"MAX" : NumberLong(-76),
		"PERCENTILE - 70" : -76,
		"PERCENTILE - 50" : -76,
		"MODE" : NumberLong(-76),
		"MEDIANA" : -76,
		"MEAN" : -76
	},
	"HASH" : "DEFAULT",
	"SSID" : "PinGwin",
	"RSSI_DATA" : [
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76),
		NumberLong(-76)
	],
	"TIMESTAMP" : "2015-07-02:11-38-51.46",
	"POSITIONS" : [
		NumberLong(2),
		NumberLong(2)
	],
	"STEP" : [
		NumberLong(1),
		NumberLong(1)
	],
	"PLACE" : "kuznia",
	"MODE" : "FEED_MAP",
	"IP_PHONE" : "192.168.1.100",
	"RSSI_AVG_TIME" : "6615494",
	"MAC_AP" : "68:7f:74:09:f6:8b",
	"DATA_SIZE" : NumberLong(300),
	"MAC_PHONE" : "e8:99:c4:8e:97:36"
});
db["kuznia_DATASIZE:300_STEP:1_1_DEFAULT"].insert({
	"_id" : ObjectId("559506bb63f9130dc6bc0a74"),
	"STATISTICS" : {
		"PERCENTILE - 90" : -79,
		"MIN" : NumberLong(-79),
		"STANDARD_DEVIATION" : 0,
		"PERCENTILE - 20" : -79,
		"PERCENTILE - 10" : -79,
		"MAX" : NumberLong(-79),
		"PERCENTILE - 70" : -79,
		"PERCENTILE - 50" : -79,
		"MODE" : NumberLong(-79),
		"MEDIANA" : -79,
		"MEAN" : -79
	},
	"HASH" : "DEFAULT",
	"SSID" : "PWSK_K",
	"RSSI_DATA" : [
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79)
	],
	"TIMESTAMP" : "2015-07-02:11-38-51.47",
	"POSITIONS" : [
		NumberLong(2),
		NumberLong(2)
	],
	"STEP" : [
		NumberLong(1),
		NumberLong(1)
	],
	"PLACE" : "kuznia",
	"MODE" : "FEED_MAP",
	"IP_PHONE" : "192.168.1.100",
	"RSSI_AVG_TIME" : "6615494",
	"MAC_AP" : "28:80:23:28:8a:12",
	"DATA_SIZE" : NumberLong(300),
	"MAC_PHONE" : "e8:99:c4:8e:97:36"
});
db["kuznia_DATASIZE:300_STEP:1_1_DEFAULT"].insert({
	"_id" : ObjectId("559506bb63f9130dc6bc0a75"),
	"STATISTICS" : {
		"PERCENTILE - 90" : -52,
		"MIN" : NumberLong(-52),
		"STANDARD_DEVIATION" : 0,
		"PERCENTILE - 20" : -52,
		"PERCENTILE - 10" : -52,
		"MAX" : NumberLong(-52),
		"PERCENTILE - 70" : -52,
		"PERCENTILE - 50" : -52,
		"MODE" : NumberLong(-52),
		"MEDIANA" : -52,
		"MEAN" : -52
	},
	"HASH" : "DEFAULT",
	"SSID" : "PWSK",
	"RSSI_DATA" : [
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52)
	],
	"TIMESTAMP" : "2015-07-02:11-38-51.47",
	"POSITIONS" : [
		NumberLong(2),
		NumberLong(2)
	],
	"STEP" : [
		NumberLong(1),
		NumberLong(1)
	],
	"PLACE" : "kuznia",
	"MODE" : "FEED_MAP",
	"IP_PHONE" : "192.168.1.100",
	"RSSI_AVG_TIME" : "6615494",
	"MAC_AP" : "28:80:23:28:8a:11",
	"DATA_SIZE" : NumberLong(300),
	"MAC_PHONE" : "e8:99:c4:8e:97:36"
});
db["kuznia_DATASIZE:300_STEP:1_1_DEFAULT"].insert({
	"_id" : ObjectId("559506bb63f9130dc6bc0a76"),
	"STATISTICS" : {
		"PERCENTILE - 90" : -57,
		"MIN" : NumberLong(-57),
		"STANDARD_DEVIATION" : 0,
		"PERCENTILE - 20" : -57,
		"PERCENTILE - 10" : -57,
		"MAX" : NumberLong(-57),
		"PERCENTILE - 70" : -57,
		"PERCENTILE - 50" : -57,
		"MODE" : NumberLong(-57),
		"MEDIANA" : -57,
		"MEAN" : -57
	},
	"HASH" : "DEFAULT",
	"SSID" : "PWSK_K",
	"RSSI_DATA" : [
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57)
	],
	"TIMESTAMP" : "2015-07-02:11-38-51.50",
	"POSITIONS" : [
		NumberLong(2),
		NumberLong(2)
	],
	"STEP" : [
		NumberLong(1),
		NumberLong(1)
	],
	"PLACE" : "kuznia",
	"MODE" : "FEED_MAP",
	"IP_PHONE" : "192.168.1.100",
	"RSSI_AVG_TIME" : "6615494",
	"MAC_AP" : "28:80:23:28:8a:02",
	"DATA_SIZE" : NumberLong(300),
	"MAC_PHONE" : "e8:99:c4:8e:97:36"
});
db["kuznia_DATASIZE:300_STEP:1_1_DEFAULT"].insert({
	"_id" : ObjectId("559506bb63f9130dc6bc0a77"),
	"STATISTICS" : {
		"PERCENTILE - 90" : -58,
		"MIN" : NumberLong(-58),
		"STANDARD_DEVIATION" : 0,
		"PERCENTILE - 20" : -58,
		"PERCENTILE - 10" : -58,
		"MAX" : NumberLong(-58),
		"PERCENTILE - 70" : -58,
		"PERCENTILE - 50" : -58,
		"MODE" : NumberLong(-58),
		"MEDIANA" : -58,
		"MEAN" : -58
	},
	"HASH" : "DEFAULT",
	"SSID" : "PWSK",
	"RSSI_DATA" : [
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58),
		NumberLong(-58)
	],
	"TIMESTAMP" : "2015-07-02:11-38-51.51",
	"POSITIONS" : [
		NumberLong(2),
		NumberLong(2)
	],
	"STEP" : [
		NumberLong(1),
		NumberLong(1)
	],
	"PLACE" : "kuznia",
	"MODE" : "FEED_MAP",
	"IP_PHONE" : "192.168.1.100",
	"RSSI_AVG_TIME" : "6615494",
	"MAC_AP" : "28:80:23:28:8a:01",
	"DATA_SIZE" : NumberLong(300),
	"MAC_PHONE" : "e8:99:c4:8e:97:36"
});
db["kuznia_DATASIZE:300_STEP:1_1_DEFAULT"].insert({
	"_id" : ObjectId("559506bb63f9130dc6bc0a78"),
	"STATISTICS" : {
		"PERCENTILE - 90" : -52,
		"MIN" : NumberLong(-52),
		"STANDARD_DEVIATION" : 0,
		"PERCENTILE - 20" : -52,
		"PERCENTILE - 10" : -52,
		"MAX" : NumberLong(-52),
		"PERCENTILE - 70" : -52,
		"PERCENTILE - 50" : -52,
		"MODE" : NumberLong(-52),
		"MEDIANA" : -52,
		"MEAN" : -52
	},
	"HASH" : "DEFAULT",
	"SSID" : "ParkWielokulturowy",
	"RSSI_DATA" : [
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52),
		NumberLong(-52)
	],
	"TIMESTAMP" : "2015-07-02:11-38-51.52",
	"POSITIONS" : [
		NumberLong(2),
		NumberLong(2)
	],
	"STEP" : [
		NumberLong(1),
		NumberLong(1)
	],
	"PLACE" : "kuznia",
	"MODE" : "FEED_MAP",
	"IP_PHONE" : "192.168.1.100",
	"RSSI_AVG_TIME" : "6615494",
	"MAC_AP" : "28:80:23:28:8a:10",
	"DATA_SIZE" : NumberLong(300),
	"MAC_PHONE" : "e8:99:c4:8e:97:36"
});
db["kuznia_DATASIZE:300_STEP:1_1_DEFAULT"].insert({
	"_id" : ObjectId("559506bc63f9130dc6bc0a79"),
	"STATISTICS" : {
		"PERCENTILE - 90" : -57,
		"MIN" : NumberLong(-57),
		"STANDARD_DEVIATION" : 0,
		"PERCENTILE - 20" : -57,
		"PERCENTILE - 10" : -57,
		"MAX" : NumberLong(-57),
		"PERCENTILE - 70" : -57,
		"PERCENTILE - 50" : -57,
		"MODE" : NumberLong(-57),
		"MEDIANA" : -57,
		"MEAN" : -57
	},
	"HASH" : "DEFAULT",
	"SSID" : "ParkWielokulturowy",
	"RSSI_DATA" : [
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57),
		NumberLong(-57)
	],
	"TIMESTAMP" : "2015-07-02:11-38-51.53",
	"POSITIONS" : [
		NumberLong(2),
		NumberLong(2)
	],
	"STEP" : [
		NumberLong(1),
		NumberLong(1)
	],
	"PLACE" : "kuznia",
	"MODE" : "FEED_MAP",
	"IP_PHONE" : "192.168.1.100",
	"RSSI_AVG_TIME" : "6615494",
	"MAC_AP" : "28:80:23:28:8a:00",
	"DATA_SIZE" : NumberLong(300),
	"MAC_PHONE" : "e8:99:c4:8e:97:36"
});
db["kuznia_DATASIZE:300_STEP:1_1_DEFAULT"].insert({
	"_id" : ObjectId("559506bc63f9130dc6bc0a7a"),
	"STATISTICS" : {
		"PERCENTILE - 90" : -67,
		"MIN" : NumberLong(-67),
		"STANDARD_DEVIATION" : 0,
		"PERCENTILE - 20" : -67,
		"PERCENTILE - 10" : -67,
		"MAX" : NumberLong(-67),
		"PERCENTILE - 70" : -67,
		"PERCENTILE - 50" : -67,
		"MODE" : NumberLong(-67),
		"MEDIANA" : -67,
		"MEAN" : -67
	},
	"HASH" : "DEFAULT",
	"SSID" : "PWSK_K",
	"RSSI_DATA" : [
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67),
		NumberLong(-67)
	],
	"TIMESTAMP" : "2015-07-02:11-38-51.54",
	"POSITIONS" : [
		NumberLong(2),
		NumberLong(2)
	],
	"STEP" : [
		NumberLong(1),
		NumberLong(1)
	],
	"PLACE" : "kuznia",
	"MODE" : "FEED_MAP",
	"IP_PHONE" : "192.168.1.100",
	"RSSI_AVG_TIME" : "6615494",
	"MAC_AP" : "28:80:23:28:7e:92",
	"DATA_SIZE" : NumberLong(300),
	"MAC_PHONE" : "e8:99:c4:8e:97:36"
});
db["kuznia_DATASIZE:300_STEP:1_1_DEFAULT"].insert({
	"_id" : ObjectId("559506bc63f9130dc6bc0a7b"),
	"STATISTICS" : {
		"PERCENTILE - 90" : -64,
		"MIN" : NumberLong(-64),
		"STANDARD_DEVIATION" : 0,
		"PERCENTILE - 20" : -64,
		"PERCENTILE - 10" : -64,
		"MAX" : NumberLong(-64),
		"PERCENTILE - 70" : -64,
		"PERCENTILE - 50" : -64,
		"MODE" : NumberLong(-64),
		"MEDIANA" : -64,
		"MEAN" : -64
	},
	"HASH" : "DEFAULT",
	"SSID" : "",
	"RSSI_DATA" : [
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64),
		NumberLong(-64)
	],
	"TIMESTAMP" : "2015-07-02:11-38-51.55",
	"POSITIONS" : [
		NumberLong(2),
		NumberLong(2)
	],
	"STEP" : [
		NumberLong(1),
		NumberLong(1)
	],
	"PLACE" : "kuznia",
	"MODE" : "FEED_MAP",
	"IP_PHONE" : "192.168.1.100",
	"RSSI_AVG_TIME" : "6615494",
	"MAC_AP" : "00:1a:70:a2:61:b0",
	"DATA_SIZE" : NumberLong(300),
	"MAC_PHONE" : "e8:99:c4:8e:97:36"
});
db["kuznia_DATASIZE:300_STEP:1_1_DEFAULT"].insert({
	"_id" : ObjectId("559506bc63f9130dc6bc0a7c"),
	"STATISTICS" : {
		"PERCENTILE - 90" : -85,
		"MIN" : NumberLong(-85),
		"STANDARD_DEVIATION" : 0,
		"PERCENTILE - 20" : -85,
		"PERCENTILE - 10" : -85,
		"MAX" : NumberLong(-85),
		"PERCENTILE - 70" : -85,
		"PERCENTILE - 50" : -85,
		"MODE" : NumberLong(-85),
		"MEDIANA" : -85,
		"MEAN" : -85
	},
	"HASH" : "DEFAULT",
	"SSID" : "PWSK",
	"RSSI_DATA" : [
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85),
		NumberLong(-85)
	],
	"TIMESTAMP" : "2015-07-02:11-38-51.56",
	"POSITIONS" : [
		NumberLong(2),
		NumberLong(2)
	],
	"STEP" : [
		NumberLong(1),
		NumberLong(1)
	],
	"PLACE" : "kuznia",
	"MODE" : "FEED_MAP",
	"IP_PHONE" : "192.168.1.100",
	"RSSI_AVG_TIME" : "6615494",
	"MAC_AP" : "28:80:23:28:8a:b1",
	"DATA_SIZE" : NumberLong(300),
	"MAC_PHONE" : "e8:99:c4:8e:97:36"
});
db["kuznia_DATASIZE:300_STEP:1_1_DEFAULT"].insert({
	"_id" : ObjectId("559506bc63f9130dc6bc0a7d"),
	"STATISTICS" : {
		"PERCENTILE - 90" : -79,
		"MIN" : NumberLong(-79),
		"STANDARD_DEVIATION" : 0,
		"PERCENTILE - 20" : -79,
		"PERCENTILE - 10" : -79,
		"MAX" : NumberLong(-79),
		"PERCENTILE - 70" : -79,
		"PERCENTILE - 50" : -79,
		"MODE" : NumberLong(-79),
		"MEDIANA" : -79,
		"MEAN" : -79
	},
	"HASH" : "DEFAULT",
	"SSID" : "PWSK",
	"RSSI_DATA" : [
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79)
	],
	"TIMESTAMP" : "2015-07-02:11-38-51.57",
	"POSITIONS" : [
		NumberLong(2),
		NumberLong(2)
	],
	"STEP" : [
		NumberLong(1),
		NumberLong(1)
	],
	"PLACE" : "kuznia",
	"MODE" : "FEED_MAP",
	"IP_PHONE" : "192.168.1.100",
	"RSSI_AVG_TIME" : "6615494",
	"MAC_AP" : "28:80:23:28:7e:81",
	"DATA_SIZE" : NumberLong(300),
	"MAC_PHONE" : "e8:99:c4:8e:97:36"
});
db["kuznia_DATASIZE:300_STEP:1_1_DEFAULT"].insert({
	"_id" : ObjectId("559506bc63f9130dc6bc0a7e"),
	"STATISTICS" : {
		"PERCENTILE - 90" : -80,
		"MIN" : NumberLong(-80),
		"STANDARD_DEVIATION" : 0,
		"PERCENTILE - 20" : -80,
		"PERCENTILE - 10" : -80,
		"MAX" : NumberLong(-80),
		"PERCENTILE - 70" : -80,
		"PERCENTILE - 50" : -80,
		"MODE" : NumberLong(-80),
		"MEDIANA" : -80,
		"MEAN" : -80
	},
	"HASH" : "DEFAULT",
	"SSID" : "PWSK_K",
	"RSSI_DATA" : [
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80),
		NumberLong(-80)
	],
	"TIMESTAMP" : "2015-07-02:11-38-51.59",
	"POSITIONS" : [
		NumberLong(2),
		NumberLong(2)
	],
	"STEP" : [
		NumberLong(1),
		NumberLong(1)
	],
	"PLACE" : "kuznia",
	"MODE" : "FEED_MAP",
	"IP_PHONE" : "192.168.1.100",
	"RSSI_AVG_TIME" : "6615494",
	"MAC_AP" : "28:80:23:28:7e:82",
	"DATA_SIZE" : NumberLong(300),
	"MAC_PHONE" : "e8:99:c4:8e:97:36"
});
db["kuznia_DATASIZE:300_STEP:1_1_DEFAULT"].insert({
	"_id" : ObjectId("559506bc63f9130dc6bc0a7f"),
	"STATISTICS" : {
		"PERCENTILE - 90" : -79,
		"MIN" : NumberLong(-79),
		"STANDARD_DEVIATION" : 0,
		"PERCENTILE - 20" : -79,
		"PERCENTILE - 10" : -79,
		"MAX" : NumberLong(-79),
		"PERCENTILE - 70" : -79,
		"PERCENTILE - 50" : -79,
		"MODE" : NumberLong(-79),
		"MEDIANA" : -79,
		"MEAN" : -79
	},
	"HASH" : "DEFAULT",
	"SSID" : "ParkWielokulturowy",
	"RSSI_DATA" : [
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79)
	],
	"TIMESTAMP" : "2015-07-02:11-38-51.60",
	"POSITIONS" : [
		NumberLong(2),
		NumberLong(2)
	],
	"STEP" : [
		NumberLong(1),
		NumberLong(1)
	],
	"PLACE" : "kuznia",
	"MODE" : "FEED_MAP",
	"IP_PHONE" : "192.168.1.100",
	"RSSI_AVG_TIME" : "6615494",
	"MAC_AP" : "28:80:23:28:7e:80",
	"DATA_SIZE" : NumberLong(300),
	"MAC_PHONE" : "e8:99:c4:8e:97:36"
});
db["kuznia_DATASIZE:300_STEP:1_1_DEFAULT"].insert({
	"_id" : ObjectId("559506bc63f9130dc6bc0a80"),
	"STATISTICS" : {
		"PERCENTILE - 90" : -79,
		"MIN" : NumberLong(-79),
		"STANDARD_DEVIATION" : 0,
		"PERCENTILE - 20" : -79,
		"PERCENTILE - 10" : -79,
		"MAX" : NumberLong(-79),
		"PERCENTILE - 70" : -79,
		"PERCENTILE - 50" : -79,
		"MODE" : NumberLong(-79),
		"MEDIANA" : -79,
		"MEAN" : -79
	},
	"HASH" : "DEFAULT",
	"SSID" : "INSTAL-STD",
	"RSSI_DATA" : [
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79),
		NumberLong(-79)
	],
	"TIMESTAMP" : "2015-07-02:11-38-51.61",
	"POSITIONS" : [
		NumberLong(2),
		NumberLong(2)
	],
	"STEP" : [
		NumberLong(1),
		NumberLong(1)
	],
	"PLACE" : "kuznia",
	"MODE" : "FEED_MAP",
	"IP_PHONE" : "192.168.1.100",
	"RSSI_AVG_TIME" : "6615494",
	"MAC_AP" : "64:66:b3:b0:96:fc",
	"DATA_SIZE" : NumberLong(300),
	"MAC_PHONE" : "e8:99:c4:8e:97:36"
});
